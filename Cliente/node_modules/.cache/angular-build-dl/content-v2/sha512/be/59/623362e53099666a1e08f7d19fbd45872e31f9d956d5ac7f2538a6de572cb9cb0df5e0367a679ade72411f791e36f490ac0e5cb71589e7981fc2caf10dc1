{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/inventario/egreso/egreso.component.ts","webpack:///src/app/components/inventario/egreso/egreso.component.html","webpack:///src/app/components/inventario/ingreso/ingreso.component.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.html","webpack:///src/app/components/inventario/inventario.component.ts","webpack:///src/app/components/inventario/inventario.component.html","webpack:///src/app/components/inventario/reingreso/reingreso.component.ts","webpack:///src/app/components/inventario/reingreso/reingreso.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/categorias.service.ts","webpack:///src/app/services/inventario.service.ts","webpack:///src/app/services/ubicaciones.service.ts","webpack:///src/app/services/unidades.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","EgresoComponent","servicioInventario","categoriaService","idItemElegidoEgreso","cantidadEgreso","obtenerCategorias","subscribe","items","categorias","sort","a","b","nombre","obtenerInventario","inventario","itemElegidoEgreso","findIndex","item","index","nuevoItem","cantidad","tipo","estado","editarItem","egresarItems","IngresoComponent","inventarioService","ubicacionesService","unidadesService","nuevosItems","ubicacion","vencimiento","serial","precio","unidades","obtenerUbicaciones","ubicaciones","obtenerUnidades","fechaIngreso","Date","toISOString","agregarItem","form","reset","n","Array","push","pop","cerrarModal","restarItem","onSubmit","InventarioComponent","filtroNombre","filtroTipo","ReingresoComponent","idItemElegido","cantidadIngreso","itemElegido","agregarItems","LoginComponent","NavbarComponent","CategoriasService","afs","categoriasColeccion","collection","snapshotChanges","pipe","actions","map","data","payload","doc","providedIn","InventarioService","itemsColeccion","add","console","log","itemEditado","update","UbicacionesService","ubicacionesColeccion","UnidadesService","unidadesColeccion","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACLzB;;AACA;;;;;;;;;sEDIaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,kE,CASA;;;QAiCaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,oEAFO,EAGP,gEAAkBC,aAAlB,CAAgC,0EAAYC,QAA5C,CAHO,EAIP,mFAJO,EAKP,8EALO,EAMP,wEANO,EAOP,0DAPO,CASI;;;;0HAGFF,S,EAAS;AAAA,uBApBlB,2DAoBkB,EAnBlB,gFAmBkB,EAlBlB,+FAkBkB,EAjBlB,kGAiBkB,EAhBlB,oFAgBkB,EAflB,wGAekB,EAdlB,+FAckB;AAdH,kBAGf,uEAHe,EAIf,oEAJe,EAIC,+DAJD,EAMf,mFANe,EAOf,8EAPe,EAQf,wEARe,EASf,0DATe;AAcG,O;AALP,K;;;;;sEAKFA,S,EAAS;cAtBrB,sDAsBqB;eAtBZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,+FAHY,EAIZ,kGAJY,EAKZ,oFALY,EAMZ,wGANY,EAOZ,+FAPY,CADN;AAURT,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,gEAAkBO,aAAlB,CAAgC,0EAAYC,QAA5C,CAHO,EAIP,mFAJO,EAKP,8EALO,EAMP,wEANO,EAOP,0DAPO,CAVD;AAmBRE,mBAAS,EAAE,EAnBH;AAoBRC,mBAAS,EAAE,CAAC,2DAAD;AApBH,S;AAsBY,Q;;;;;;;;;;;;;;;;;;AC1CtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACmB4B;;AAA0E;;AAAsB;;;;;;AAAnD;;AAA6B;;AAAA;;;;;;AAU9E;;AAAkE;;AAAiB;;;;;;AAArC;;AAAoB;;AAAA;;;;;;AAFlE;;AAEA;;AACA;;;;;;;;;;AADQ;;AAAA;;;;;;AAQZ;;AAAuC;;AAAmF;;;;;;AAAnF;;AAAA;;;;QDvB9CC,e;AAQX,+BAAoBC,kBAApB,EACoBC,gBADpB,EACuD;AAAA;;AADnC,aAAAD,kBAAA,GAAAA,kBAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA,CAAmC,CALvD;;AACA,aAAAC,mBAAA,GAA8B,IAA9B;AACA,aAAAC,cAAA,GAAyB,CAAzB;AAIe;;;;mCAEP;AAAA;;AAEN,eAAKF,gBAAL,CAAsBG,iBAAtB,GAA0CC,SAA1C,CAAoD,UAAAC,KAAK,EAAI;AAC3D,iBAAI,CAACC,UAAL,GAAkBD,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGA,eAAKX,kBAAL,CAAwBY,iBAAxB,GAA4CP,SAA5C,CAAsD,UAAAC,KAAK,EAAI;AAC7D,iBAAI,CAACO,UAAL,GAAkBP,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACH,WAFC;AAGH,S,CACD;;;;oCACYG,iB,EAA2B;AACrC,eAAKD,UAAL,CAAgBE,SAAhB,CAA0B,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC9C,gBAAGD,IAAI,CAACjC,EAAL,IAAW+B,iBAAd,EAAgC;AAC9B,qBAAO,IAAP;AACD;AACF,WAJD;AAKD,S,CAEE;;;;uCACY;AAAA;;AACX,cAAII,SAAS,GAAG,KAAKL,UAAL,CAAgB,KAAKA,UAAL,CAAgBE,SAAhB,CAA0B,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACjC,EAAL,IAAW,MAAI,CAACmB,mBAApB;AAAA,WAA9B,CAAhB,CAAhB;AACAgB,mBAAS,CAACC,QAAV,GAAqBD,SAAS,CAACC,QAAV,GAAqB,KAAKhB,cAA/C;;AAEA,cAAGe,SAAS,CAACE,IAAV,IAAkB,aAArB,EAAoC;AAClCF,qBAAS,CAACG,MAAV,GAAmB,SAAnB;AACD;;AAED,eAAKrB,kBAAL,CAAwBsB,UAAxB,CAAmCJ,SAAnC;AACD;;;yCAEgB;AAAA;;AACf,iBAAO,KAAKL,UAAL,CAAgBE,SAAhB,CAA0B,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACjC,EAAL,IAAW,MAAI,CAACmB,mBAApB;AAAA,WAA9B,CAAP;AACH;;;;;;;uBA5CYH,e,EAAe,+I,EAAA,sJ;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,a;AAAA,05B;AAAA;AAAA;ACd5B;;AACI;;AAII;;AACI;;AAA+C;;AAAM;;AACrD;;AACI;;AAAyB;;AAAO;;AACpC;;AACJ;;AAEJ;;AACI;;AACI;;AACI;;AACA;;AACI;;AAAO;;AAAS;;AACZ;;AACI;;AACJ;;AACR;;AAEJ;;AACI;;AAAO;;AAAI;;AACP;;AAAQ;AAAA;AAAA;;AAEJ;;AAKJ;;AACR;;AACA;;AAEQ;;AAAgC;;AAAe;;AAC/C;;AACR;;AACA;;AAEI;;AAAgC;;AAAkB;;AAClD;;AAAqB;AAAA;AAAA;;AAArB;;AACJ;;AACA;;AACJ;;AACA;;AACI;;AACI;;AACI;;AAAgC;;AAAY;;AAC5C;;AACJ;;AACJ;;AACJ;;AAEA;;AAEA;;AACI;;AAAsE;;AAAM;;AAC5E;;AAA8C;AAAA,mBAAS,IAAAwB,YAAA,EAAT;AAAuB,WAAvB;;AAAyB;;AAAO;;AAClF;;AAEJ;;AACA;;AAEJ;;;;AA9CoC;;AAAA;;AAMR;;AAAA;;AAEU;;AAAA;;AAUf;;AAAA;;AAKc;;AAAA;;;;;;;;;sED5BxBxB,e,EAAe;cAP3B,uDAO2B;eAPjB;AACTT,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAOiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEd5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;;;;;;;ACqBgB;;AAAmE;;AAAkB;;;;;;AAMnF;;AAA0E;;AAAsB;;;;;;AAAnD;;AAA6B;;AAAA;;;;;;AA0BxE;;AAAoE;;AAAmB;;;;;;AAA/C;;AAA4B;;AAAA;;;;;;;;AAN1E;;AAEE;;AAAmC;;AAAmB;;AACtD;;AACE;;AAA8B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA9B;;AACA;;AAA6C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC3C;;AACF;;AACF;;AACF;;;;;;;;AALkC;;AAAA;;AACe;;AAAA;;AACnC;;AAAA;;;;;;AAOV;;AAA6E;;AAAsB;;;;;;AAArD;;AAA+B;;AAAA;;;;;;;;AAK/E;;AACE;;AAAO;;AAAW;;AAClB;;AAA4B;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA5B;;AACJ;;;;;;;;AADgC;;AAAA;;;;;;;;;;;;;;AAtDxC;;AAEM;;AACE;;AAAI;;AAAY;;AAClB;;AACE;;AACE;;AAAO;;AAAM;;AACb;;AAA8C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA9C;;AACA;;AACF;;AACA;;AAEE;;AAAuC;;AAAS;;AAChD;;AAAsC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpC;;AACF;;AACF;;AACA;;AACE;;AAAO;;AAAM;;AACb;;AAAmB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAnB;;AACF;;AACA;;AACE;;AAAO;;AAAM;;AACb;;AACA;;AAA8D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA9D;;AACA;;AACE;;AAAiD;;AAAC;;AACpD;;AACA;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAUA;;AACE;;AAAO;;AAAoB;;AAC3B;;AAAoB;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClB;;AACF;;AACF;;AACA;;AAEE;;AAIF;;AACF;;AACF;;AAEJ;;;;;;;;;;;;AA5DwE;;AAG5D;;AAAA;;AAI4C;;AAAA;;AACvC;;AAAA;;AAK+B;;AAAA;;AAC5B;;AAAA;;AAKS;;AAAA;;AAK2C;;AAAA;;AAU7C;;AAAA;;AAYG;;AAAA;;AACV;;AAAA;;AAKL;;AAAA;;MD/CrB;;;QAEagC,gB;AAsBX,gCAAoBC,iBAApB,EACoBxB,gBADpB,EAEoByB,kBAFpB,EAGoBC,eAHpB,EAGsD;AAAA;;AAHlC,aAAAF,iBAAA,GAAAA,iBAAA;AACA,aAAAxB,gBAAA,GAAAA,gBAAA;AACA,aAAAyB,kBAAA,GAAAA,kBAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AApBpB,aAAAhB,MAAA,GAAS,EAAT,CAoBsD,CAnBtD;;AAEA,aAAAiB,WAAA,GAAsB,CACpB;AACEjB,gBAAM,EAAE,IADV;AAEES,cAAI,EAAE,IAFR;AAGED,kBAAQ,EAAE,IAHZ;AAIEU,mBAAS,EAAE,IAJb;AAKEC,qBAAW,EAAE,IALf;AAMEC,gBAAM,EAAE,IANV;AAOEC,gBAAM,EAAE,IAPV;AAQEC,kBAAQ,EAAE,IARZ;AASEZ,gBAAM,EAAE;AATV,SADoB,CAAtB;AAiByD;;;;mCAEjD;AAAA;;AACN,eAAKpB,gBAAL,CAAsBG,iBAAtB,GAA0CC,SAA1C,CAAoD,UAAAC,KAAK,EAAI;AAC3D,kBAAI,CAACC,UAAL,GAAkBD,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGA,eAAKe,kBAAL,CAAwBQ,kBAAxB,GAA6C7B,SAA7C,CAAuD,UAAAC,KAAK,EAAI;AAC9D,kBAAI,CAAC6B,WAAL,GAAmB7B,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAnB;AACD,WAFD;AAGA,eAAKgB,eAAL,CAAqBS,eAArB,GAAuC/B,SAAvC,CAAiD,UAAAC,KAAK,EAAI;AACxD,kBAAI,CAAC2B,QAAL,GAAgB3B,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAhB;AACD,WAFD;AAID;;;mCAEU;AACb;AACI,cAAIK,IAAJ;;AAFS,qDAGG,KAAKY,WAHR;AAAA;;AAAA;AAGT,gEAA8B;AAA1BZ,kBAA0B;AAC5BA,kBAAI,CAACqB,YAAL,GAAoB,IAAIC,IAAJ,GAAWC,WAAX,EAApB;;AAEA,kBAAGvB,IAAI,CAACI,IAAL,IAAa,aAAhB,EAA+B;AAC7BJ,oBAAI,CAACG,QAAL,GAAgB,CAAhB;AACAH,oBAAI,CAACiB,QAAL,GAAgB,QAAhB;AACD;;AAED,mBAAKR,iBAAL,CAAuBe,WAAvB,CAAmCxB,IAAnC;AACD;AAZQ;AAAA;AAAA;AAAA;AAAA;;AAaT,eAAKyB,IAAL,CAAUC,KAAV;AACA,eAAKd,WAAL,GACA;AACA,eAAKA,WAAL,GAAmB,CACjB;AACEjB,kBAAM,EAAE,IADV;AAEES,gBAAI,EAAE,IAFR;AAGED,oBAAQ,EAAE,IAHZ;AAIEU,qBAAS,EAAE,IAJb;AAKEC,uBAAW,EAAE,IALf;AAMEC,kBAAM,EAAE,IANV;AAOEC,kBAAM,EAAE,IAPV;AAQEC,oBAAQ,EAAE,IARZ;AASEZ,kBAAM,EAAE;AATV,WADiB,CAFnB;AAeD,S,CAED;;;;sCACc;AACZ,eAAKoB,IAAL,CAAUC,KAAV;AACA,eAAKd,WAAL,GAAmB,CACjB;AACEjB,kBAAM,EAAE,IADV;AAEES,gBAAI,EAAE,IAFR;AAGED,oBAAQ,EAAE,IAHZ;AAIEU,qBAAS,EAAE,IAJb;AAKEC,uBAAW,EAAE,IALf;AAMEC,kBAAM,EAAE,IANV;AAOEC,kBAAM,EAAE,IAPV;AAQEC,oBAAQ,EAAE,IARZ;AASEZ,kBAAM,EAAE;AATV,WADiB,CAAnB;AAaD;;;sCAEasB,C,EAAW;AACvB,oCAAUC,KAAK,CAAC,CAACD,CAAF,CAAL,CAAU/D,IAAV,EAAV;AACD;;;sCAEa;AACZ,eAAKgD,WAAL,CAAiBiB,IAAjB,CACE;AACElC,kBAAM,EAAE,IADV;AAEES,gBAAI,EAAE,IAFR;AAGED,oBAAQ,EAAE,IAHZ;AAIEU,qBAAS,EAAE,IAJb;AAKEC,uBAAW,EAAE,IALf;AAMEC,kBAAM,EAAE,IANV;AAOEC,kBAAM,EAAE,IAPV;AAQEC,oBAAQ,EAAE,IARZ;AASEZ,kBAAM,EAAE;AATV,WADF,EADY,CAcZ;AACD;;;qCAEY;AACX,eAAKO,WAAL,CAAiBkB,GAAjB,GADW,CAEX;AACD;;;;;;;uBAjHUtB,gB,EAAgB,+I,EAAA,sJ,EAAA,wJ,EAAA,kJ;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;;;;;;;;;;;;;;;ACpB7B;;AACE;;AAIE;;AACE;;AAA+C;;AAAO;;AACtD;;AAAoE;AAAA,mBAAS,IAAAuB,WAAA,EAAT;AAAsB,WAAtB;;AAClE;;AAAyB;;AAAO;;AAClC;;AACF;;AAEA;;AACE;;AA+DF;;AACI;;AACE;;AAA8C;AAAA,mBAAS,IAAAP,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAS;;AAC/E;;AAAqF;AAAA,mBAAS,IAAAQ,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAW;;AAC3H;;AACE;;AAAgD;AAAA,mBAAS,IAAAD,WAAA,EAAT;AAAsB,WAAtB;;AAA6C;;AAAM;;AAEnG;;AAAoE;AAAA,mBAAS,IAAAE,QAAA,EAAT;AAAmB,WAAnB;;AAA0C;;AAAQ;;AAC1H;;AACA;;AAEF;;AACF;;;;;;AA3E8B;;AAAA;;AAkE4B;;AAAA;;AAIJ;;AAAA;;;;;;;;;sED/DzCzB,gB,EAAgB;cAR5B,uDAQ4B;eARlB;AACTlC,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAQkB,Q;;;;;;;;;;;;gBAC1B,uD;iBAAU,G;;;;;;;;;;;;;;;;;;;;AErBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,kE,CAAA;;;;;;;;;;;;;;AC8CU;;AACE;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAe;;AACnB;;AAAI;;AAAuC;;AAC3C;;AAAI;;AAAoB;;AACxB;;AAAkG;;AAAiB;;AACnH;;AACE;;AAAoC;;AAAQ;;AAC9C;;AACF;;;;;;AARM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AAA8F;;AAAA;;;;;;AANtG;;AACE;;AAUF;;;;;;;;AAVkB;;AAAA;;MDjC1B;;;QACa0D,mB;AAOX,mCAAoBlD,kBAApB,EAA2D;AAAA;;AAAvC,aAAAA,kBAAA,GAAAA,kBAAA;AAHpB,aAAAmD,YAAA,GAAuB,EAAvB;AACA,aAAAC,UAAA,GAAqB,EAArB;AAE8D,O,CAEhE;;;;;mCACU;AAAA;;AACN,eAAKpD,kBAAL,CAAwBY,iBAAxB,GAA4CP,SAA5C,CAAsD,UAAAC,KAAK,EAAI;AAC7D,kBAAI,CAACO,UAAL,GAAkBP,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGD;;;;;;;uBAdUuC,mB,EAAmB,+I;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA;AAAA;;;;;;;;;;;;;;;ACbhC;;AAGA;;AACE;;AACE;;AACE;;AAA8F;;AAAO;;AACrG;;AAAgG;;AAAS;;AACzG;;AAA6F;;AAAM;;AACrG;;AACF;;AACF;;AAEA;;AAEI;;AACE;;AACE;;AAEE;;AAAgB;;AAAiD;AAAA;AAAA;;AAAuE;;AAAxI;;AACA;;AAKA;;AACA;;AACA;;AACA;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAM;;AACtB;;AACF;;AACF;;AAEA;;AAEE;;AAYF;;AACJ;;AAGF;;AACE;;AAKF;;AACE;;AACF;;AAEA;;AACE;;AACF;;AAEA;;AACE;;AACF;;;;AAzD2E;;AAAA;;AAyBrD;;AAAA;;;;;;;;;sED/BTA,mB,EAAmB;cAN/B,uDAM+B;eANrB;AACT5D,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAMqB,Q;;;;;;gBAC7B,uD;iBAAU,G;;;;;;;;;;;;;;;;;;;;AEfb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;;;;;ACqBoB;;AAA0E;;AAAsB;;;;;;AAAnD;;AAA6B;;AAAA;;;;;;AAU1E;;AAAkE;;AAAiB;;;;;;AAArC;;AAAoB;;AAAA;;;;;;AAFpE;;AAEE;;AACF;;;;;;;;;;AADU;;AAAA;;;;;;AAOZ;;AAAiC;;AAAmF;;;;;;AAAnF;;AAAA;;MDxBjD;;;QACa6D,kB;AAOX,kCAAoBrD,kBAApB,EACoBC,gBADpB,EACuD;AAAA;;AADnC,aAAAD,kBAAA,GAAAA,kBAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA,CAAmC,CALvD;;AACA,aAAAqD,aAAA,GAAwB,IAAxB;AACA,aAAAC,eAAA,GAA0B,CAA1B;AAIe,O,CAGjB;;;;;mCACU;AAAA;;AAEN,eAAKtD,gBAAL,CAAsBG,iBAAtB,GAA0CC,SAA1C,CAAoD,UAAAC,KAAK,EAAI;AAC3D,kBAAI,CAACC,UAAL,GAAkBD,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGA,eAAKX,kBAAL,CAAwBY,iBAAxB,GAA4CP,SAA5C,CAAsD,UAAAC,KAAK,EAAI;AAC7D,kBAAI,CAACO,UAAL,GAAkBP,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACE,MAAF,GAAWD,CAAC,CAACC,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGD,S,CAED;;;;oCACY6C,W,EAAqB;AAC/B,eAAK3C,UAAL,CAAgBE,SAAhB,CAA0B,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC9C,gBAAGD,IAAI,CAACjC,EAAL,IAAWyE,WAAd,EAA0B;AACxB,qBAAO,IAAP;AACD;AACF,WAJD;AAKD,S,CAEA;;;;uCACc;AAAA;;AACb,cAAItC,SAAS,GAAG,KAAKL,UAAL,CAAgB,KAAKA,UAAL,CAAgBE,SAAhB,CAA0B,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACjC,EAAL,IAAW,MAAI,CAACuE,aAApB;AAAA,WAA9B,CAAhB,CAAhB;AACApC,mBAAS,CAACC,QAAV,IAAsB,KAAKoC,eAA3B;AACA,eAAKvD,kBAAL,CAAwBsB,UAAxB,CAAmCJ,SAAnC;AACD;;;yCAEgB;AAAA;;AACb,iBAAO,KAAKL,UAAL,CAAgBE,SAAhB,CAA0B,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAACjC,EAAL,IAAW,MAAI,CAACuE,aAApB;AAAA,WAA9B,CAAP;AACH;;;;;;;uBAzCUD,kB,EAAkB,+I,EAAA,sJ;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,q4B;AAAA;AAAA;ACf/B;;AACE;;AAIE;;AACE;;AAA+C;;AAAS;;AACxD;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;AAIA;;AACE;;AACE;;AACE;;AACE;;AACI;;AAAO;;AAAS;;AACd;;AACE;;AACF;;AACN;;AAEA;;AACI;;AAAO;;AAAI;;AACX;;AAA6B;AAAA;AAAA;;AAE3B;;AAIF;;AACJ;;AACA;;AAEI;;AAAgC;;AAAe;;AAC/C;;AACJ;;AACA;;AAEE;;AAAgC;;AAAmB;;AACnD;;AAAqB;AAAA;AAAA;;AAArB;;AACF;;AACF;;AACF;;AAGF;;AAEA;;AACE;;AAAsE;;AAAM;;AAC5E;;AAA8C;AAAA,mBAAS,IAAAI,YAAA,EAAT;AAAuB,WAAvB;;AAA0B;;AAAQ;;AAClF;;AACF;;AACF;;AACF;;;;AApC4B;;AAAA;;AAMiB;;AAAA;;AAEb;;AAAA;;AASb;;AAAA;;AAKgB;;AAAA;;;;;;;;;sED5BtBJ,kB,EAAkB;cAP9B,uDAO8B;eAPpB;AACT/D,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAOoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEf/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOakE,c;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,uV;AAAA;AAAA;ACP3B;;AACE;;AACE;;AACE;;AACE;;AACA;;AACE;;AAAuB;;AAAa;;AACpC;;AACE;;AACE;;AAAO;;AAAmB;;AAC1B;;AACF;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AACF;;AACA;;AAAO;;AAAY;;AAAoB;;AAAI;;AAC3C;;AAA4C;;AAAQ;;AACtD;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;sEDhBaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTpE,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOamE,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,kV;AAAA;AAAA;ACP5B;;AACE;;AAAiC;;AAAY;;AAC7C;;AACE;;AACF;;AAiBF;;;;;;;;sEDdaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTrE,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaoE,iB;AAKX,iCAA6BC,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAC3B,aAAKC,mBAAL,GAA2BD,GAAG,CAACE,UAAJ,CAA0B,WAA1B,CAA3B;AACA,aAAKxD,UAAL,GAAkB,KAAKuD,mBAAL,CAAyBE,eAAzB,GAA2CC,IAA3C,CAChB,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA1D,CAAC,EAAI;AAC9B,gBAAM2D,IAAI,GAAG3D,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMrF,EAAE,GAAG0B,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcvF,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASqF,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADgB,CAAlB;AAOD;;;;4CAEmB;AAClB,iBAAO,KAAK7D,UAAZ;AACD;;;;;;;uBAlBUqD,iB,EAAiB,gI;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVW,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACT9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,iB;AAKX,iCAA6BX,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAE3B,aAAKY,cAAL,GAAsBZ,GAAG,CAACE,UAAJ,CAAqB,YAArB,CAAtB;AACA,aAAKzD,KAAL,GAAa,KAAKmE,cAAL,CAAoBT,eAApB,GAAsCC,IAAtC,CACX,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA1D,CAAC,EAAI;AAC9B,gBAAM2D,IAAI,GAAG3D,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMrF,EAAE,GAAG0B,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcvF,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASqF,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADW,CAAb;AAOD;;;;4CAEmB;AAClB,iBAAO,KAAK9D,KAAZ;AACD;;;oCAEWY,S,EAAiB;AAC3B,eAAKuD,cAAL,CAAoBC,GAApB,CAAwBxD,SAAxB;AACAyD,iBAAO,CAACC,GAAR,CAAY1D,SAAZ;AACD;;;mCAEU2D,W,EAAmB;AAC5B,iBAAO,KAAKJ,cAAL,CAAoBH,GAApB,CAAwBO,WAAW,CAAC9F,EAApC,EAAwC+F,MAAxC,CAA+CD,WAA/C,CAAP;AACD;;;;;;;uBA5BUL,iB,EAAiB,gI;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVD,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACT9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaQ,kB;AAKX,kCAA6BlB,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAC3B,aAAKmB,oBAAL,GAA4BnB,GAAG,CAACE,UAAJ,CAAoB,aAApB,CAA5B;AACA,aAAK5B,WAAL,GAAmB,KAAK6C,oBAAL,CAA0BhB,eAA1B,GAA4CC,IAA5C,CACjB,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA1D,CAAC,EAAI;AAC9B,gBAAM2D,IAAI,GAAG3D,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMrF,EAAE,GAAG0B,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcvF,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASqF,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADiB,CAAnB;AAOD;;;;6CAEoB;AACnB,iBAAO,KAAKjC,WAAZ;AACD;;;;;;;uBAlBU4C,kB,EAAkB,gI;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVR,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACR/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaU,e;AAKX,+BAA6BpB,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAC3B,aAAKqB,iBAAL,GAAyBrB,GAAG,CAACE,UAAJ,CAAoB,UAApB,CAAzB;AACA,aAAK9B,QAAL,GAAgB,KAAKiD,iBAAL,CAAuBlB,eAAvB,GAAyCC,IAAzC,CACd,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA1D,CAAC,EAAI;AAC9B,gBAAM2D,IAAI,GAAG3D,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMrF,EAAE,GAAG0B,CAAC,CAAC4D,OAAF,CAAUC,GAAV,CAAcvF,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASqF,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADc,CAAhB;AAOD;;;;0CAEiB;AAChB,iBAAO,KAAKnC,QAAZ;AACD;;;;;;;uBAlBUgD,e,EAAe,gI;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVV,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMY,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzBzF,cAAQ,EAAE;AACR0F,cAAM,EAAE,yCADA;AAERC,kBAAU,EAAE,gCAFJ;AAGRC,mBAAW,EAAE,uCAHL;AAIRC,iBAAS,EAAE,gBAJH;AAKRC,qBAAa,EAAE,4BALP;AAMRC,yBAAiB,EAAE,aANX;AAORC,aAAK,EAAE,0CAPC;AAQRC,qBAAa,EAAE;AARP;AAFe,KAApB;AAcP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACzBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYR,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBS,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAInB,OAAO,CAACoB,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\n<!-- <app-login></app-login> -->\n<app-navbar></app-navbar>\n<app-inventario></app-inventario>\n\n<!-- <router-outlet></router-outlet> -->\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\n\r\n// IMPORTACIONES PARA FIREBASE\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\r\nimport { EgresoComponent } from './components/inventario/egreso/egreso.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    InventarioComponent,\r\n    IngresoComponent,\r\n    NavbarComponent,\r\n    ReingresoComponent,\r\n    EgresoComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAnalyticsModule,\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n    FormsModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-egreso',\r\n  templateUrl: './egreso.component.html',\r\n  styleUrls: ['./egreso.component.css']\r\n})\r\n\r\n\r\nexport class EgresoComponent implements OnInit {\r\n\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  idItemElegidoEgreso: string = null;\r\n  cantidadEgreso: number = 0;\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService)\r\n              { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n}\r\n//Busca item a egresar por filtro, y guarda el id del mismo\r\nbuscarIndex(itemElegidoEgreso: string) {\r\n  this.inventario.findIndex(function(item, index) {\r\n    if(item.id == itemElegidoEgreso){\r\n      return true;\r\n    }\r\n  })\r\n}\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\negresarItems() {\r\n    let nuevoItem = this.inventario[this.inventario.findIndex(item => item.id == this.idItemElegidoEgreso)];\r\n    nuevoItem.cantidad = nuevoItem.cantidad - this.cantidadEgreso;\r\n\r\n    if(nuevoItem.tipo == \"Herramienta\") {\r\n      nuevoItem.estado = \"En Obra\";\r\n    }\r\n\r\n    this.servicioInventario.editarItem(nuevoItem);\r\n  }\r\n\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegidoEgreso);\r\n}\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n\r\n    <!--Modal de egreso de producto-->\r\n\r\n        <div class=\"modal-header bg-warning\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Egreso</h5>\r\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n                <div class=\"row\">\r\n                <div class=\"col-3\">\r\n                    <label>Categoría</label>\r\n                        <select class=\"form-control\" ngModel name=\"selectTipo\" #selectTipo=\"ngModel\">\r\n                            <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                </div>\r\n            <!--Filtro por Item de egreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                    <select [(ngModel)]='idItemElegidoEgreso' class=\"form-control\" name=\"tipo\">\r\n                        <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                        <ng-container *ngFor=\"let item of inventario\">\r\n                        <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                        <option *ngIf=\"item.tipo == selectTipo.value\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                        </ng-container>\r\n\r\n                    </select>\r\n            </div>\r\n            <div class=\"col-3\">\r\n                    <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                    <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                    <p *ngIf=\"idItemElegidoEgreso != null\">{{inventario[regresarIndice()].cantidad}} {{inventario[regresarIndice()].unidades}}</p>\r\n            </div>\r\n            <div class=\"col-3\">\r\n                <!--Label e input de cantidad a egresar (se escribe la cantidad a egresar)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad a egresar</label>\r\n                <input type=\"number\" [(ngModel)]=\"cantidadEgreso\" name=\"nombre\" class=\"form-control\">\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <label for=\"exampleInputEmail1\">Obra destino</label>\r\n                    <input name=\"obra\" class=\"form-control\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        </div>\r\n        <!--Footer de Modal de egresar, con botones de cerrar y-->\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\"  data-dismiss=\"modal\">Cerrar</button>\r\n            <button type=\"button\" class=\"btn btn-warning\" (click)=\"egresarItems()\">Egresar</button>\r\n        </div>\r\n\r\n    </form>\r\n    </div>\r\n\r\n</div>\r\n\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport * as firebase from 'firebase';\r\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\r\n\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\n\r\n// ViewChild del form de ingreso, y funcion inventarioService\r\n\r\nexport class IngresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  nombre = \"\";\r\n  // cantidadItems = 1;\r\n\r\n  nuevosItems: Item[] = [\r\n    {\r\n      nombre: null,\r\n      tipo: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n\r\n  constructor(private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n//Se agrega nuevoItem al inventario existente, y se borran los campos//\r\n    var item: Item;\r\n    for(item of this.nuevosItems) {\r\n      item.fechaIngreso = new Date().toISOString();\r\n\r\n      if(item.tipo == \"Herramienta\") {\r\n        item.cantidad = 1;\r\n        item.unidades = \"Unidad\";\r\n      }\r\n\r\n      this.inventarioService.agregarItem(item);\r\n    }\r\n    this.form.reset();\r\n    this.nuevosItems =\r\n    // this.cantidadItems = 1;\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  //Al cerrar el modal, se reinician los campos\r\n  cerrarModal() {\r\n    this.form.reset();\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  repetirNVeces(n: number) {\r\n    return[...Array(+n).keys()];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n    // this.cantidadItems++;\r\n  }\r\n\r\n  restarItem() {\r\n    this.nuevosItems.pop()\r\n    // this.cantidadItems--;\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de ingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-success text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\r\n      <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" (click)='cerrarModal()' aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n          <!--Nombre de producto-->\r\n            <div class=\"form-group\">\r\n              <h3>Item {{i+1}}</h3>\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <label>Nombre</label>\r\n                <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" name=\"nombre\" class=\"form-control\">\r\n                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingresa un nombre.</small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select required class=\"form-control\" [(ngModel)]=\"nuevosItems[i].tipo\" name=\"tipo\" #cat=\"ngModel\">\r\n                  <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-2\">\r\n                <label>Serial</label>\r\n                <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" name=\"serial\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input onkeypress=\"return event.charCode >= 48\" type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" name=\"precio\" class=\"form-control\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\" *ngIf=\"cat.value == 'Consumible' || cat.value == 'Producto'\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                <div class=\"input-group\">\r\n                  <input required type=\"number\" [(ngModel)]=\"nuevosItems[i].cantidad\" name=\"cantidad\" class=\"form-control\">\r\n                  <select required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" name=\"unidades\" class=\"form-control\">\r\n                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <label>Ubicación en almacén</label>\r\n                <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" name=\"ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                  <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                <div *ngIf=\"cat.value == 'Consumible' || cat.value == 'Producto'\" class=\"form-group\">\r\n                  <label>Vencimiento</label>\r\n                  <input class=\"form-control\" [(ngModel)]=\"nuevosItems[i].vencimiento\" name=\"vencimiento\" type=\"date\">\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n    <!--Footer de Modal con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">Más Items</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" (click)=\"restarItem()\">Menos Items</button>\r\n      </div>\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\" data-dismiss=\"modal\">Cerrar</button>\r\n        <!-- !f.valid significa cuando el form no sea valido -->\r\n        <button type=\"button\" class=\"btn btn-success\" [disabled]='!f.valid' (click)=\"onSubmit()\" data-dismiss=\"modal\">Ingresar</button>\r\n    </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../models/item.model';\r\nimport { InventarioService } from '../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  inventario: Item[];\r\n  filtroNombre: string = \"\";\r\n  filtroTipo: string = \"\";\r\n\r\n  constructor(private servicioInventario: InventarioService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n\r\n<!--Botones de ingreso y reingreso de productos-->\r\n<div class=\"row mb-2\">\r\n  <div class=\"col\">\r\n    <div class=\"btn-group\">\r\n      <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">Ingreso</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">Reingreso</button>\r\n      <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#modalEgreso\">Egreso</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n    <table class=\"table shadow\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\"><input class=\"w-75 form-control form-control-sm\" [(ngModel)]=\"filtroNombre\" type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n          <th scope=\"col\">\r\n            <!-- <select placeholder=\"Categoria\" class=\"form-control form-control-sm\" name=\"\">\r\n              <option value=\"Prueba\">Prueba</option>\r\n            </select> -->\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventario\">\r\n          <tr scope=\"row\" *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" class=\"bg-light\">\r\n            <td>{{ item.nombre }}</td>\r\n            <td>{{ item.tipo }}</td>\r\n            <td>{{ item.cantidad }} {{ item.unidades }}</td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible', 'text-danger': item.estado=='Dañado'}\">{{ item.estado }}</td>\r\n            <td>\r\n              <button class=\"btn btn-info btn-sm\">Detalles</button>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n  </div>\r\n\r\n\r\n\r\n<!-- Modal Ingreso-->\r\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-ingreso></app-ingreso>\r\n</div>\r\n<!-- Modal Reingreso-->\r\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-reingreso></app-reingreso>\r\n</div>\r\n<!-- Modal Egreso-->\r\n<div class=\"modal fade\" id=\"modalEgreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-egreso></app-egreso>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\n//Se declaran las variables a utilizar en reingreso\r\nexport class ReingresoComponent implements OnInit {\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  idItemElegido: string = null;\r\n  cantidadIngreso: number = 0;\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService)\r\n              { }\r\n\r\n\r\n//Se obtiene inventario en orden alfabetico, y se imprime en la tabla//\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  //Compara items de acuerdo a la seleccion del usuario en el Filtro de la tabla, y guarda el id del item seleccionado//\r\n  buscarIndex(itemElegido: string) {\r\n    this.inventario.findIndex(function(item, index) {\r\n      if(item.id == itemElegido){\r\n        return true;\r\n      }\r\n    })\r\n  }\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  agregarItems() {\r\n    let nuevoItem = this.inventario[this.inventario.findIndex(item => item.id == this.idItemElegido)];\r\n    nuevoItem.cantidad += this.cantidadIngreso;\r\n    this.servicioInventario.editarItem(nuevoItem);\r\n  }\r\n\r\n  regresarIndice() {\r\n      return this.inventario.findIndex(item => item.id == this.idItemElegido);\r\n  }\r\n\r\n\r\n}\r\n\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de reingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-primary text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\r\n      <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!--Filtro por Tipo de reingreso-->\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <label>Categoría</label>\r\n                  <select class=\"form-control\" ngModel name=\"selectTipo\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n            </div>\r\n            <!--Filtro por Item de reingreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select class=\"form-control\" [(ngModel)]=\"idItemElegido\" name=\"tipo\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                    <option *ngIf=\"item.tipo == selectTipo.value\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n            <div class=\"col-3\">\r\n                <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                <p *ngIf=\"idItemElegido != null\">{{inventario[regresarIndice()].cantidad}} {{inventario[regresarIndice()].unidades}}</p>\r\n            </div>\r\n            <div class=\"col-3\">\r\n              <!--Label e input de cantidad a ingresar (se escribe la cantidad a ingresar)-->\r\n              <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n              <input type=\"number\" [(ngModel)]=\"cantidadIngreso\" name=\"nombre\" class=\"form-control\">\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\"  data-dismiss=\"modal\">Cerrar</button>\r\n        <button type=\"button\" class=\"btn btn-success\" (click)=\"agregarItems()\" >Ingresar</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">GrupoCDV-360</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n      </li>\n    </ul>\n  </div> -->\n</nav>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Categoria } from '../models/categoria.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  categoriasColeccion: AngularFirestoreCollection<Categoria>\n  categorias: Observable<Categoria[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.categoriasColeccion = afs.collection<Categoria>('categoria');\n    this.categorias = this.categoriasColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Categoria;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerCategorias() {\n    return this.categorias;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Item } from '../models/item.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventarioService {\n\n  itemsColeccion: AngularFirestoreCollection<Item>;\n  items: Observable<Item[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n\n    this.itemsColeccion = afs.collection<Item>('inventario');\n    this.items = this.itemsColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Item;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerInventario() {\n    return this.items;\n  }\n\n  agregarItem(nuevoItem: Item) {\n    this.itemsColeccion.add(nuevoItem);\n    console.log(nuevoItem);\n  }\n\n  editarItem(itemEditado: Item) {\n    return this.itemsColeccion.doc(itemEditado.id).update(itemEditado);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UbicacionesService {\n\n  ubicacionesColeccion: AngularFirestoreCollection<any>\n  ubicaciones: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ubicacionesColeccion = afs.collection<any>('ubicaciones');\n    this.ubicaciones = this.ubicacionesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUbicaciones() {\n    return this.ubicaciones;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  unidadesColeccion: AngularFirestoreCollection<any>\n  unidades: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.unidadesColeccion = afs.collection<any>('unidades');\n    this.unidades = this.unidadesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUnidades() {\n    return this.unidades;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtYNyuJH5IxYQaG-JX866zpdZ7vT7FIiw\",\n    authDomain: \"grupo360-21212.firebaseapp.com\",\n    databaseURL: \"https://grupo360-21212.firebaseio.com\",\n    projectId: \"grupo360-21212\",\n    storageBucket: \"grupo360-21212.appspot.com\",\n    messagingSenderId: \"42315631196\",\n    appId: \"1:42315631196:web:afc7162df29b7595d43499\",\n    measurementId: \"G-BSEHC8XG3G\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.html","webpack:///src/app/components/inventario/inventario.component.ts","webpack:///src/app/components/inventario/inventario.component.html","webpack:///src/app/components/inventario/reingreso/reingreso.component.ts","webpack:///src/app/components/inventario/reingreso/reingreso.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/inventario.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","IngresoComponent","inventarioService","nuevoItem","nombre","form","value","tipo","cantidad","agregarItem","onSubmit","InventarioComponent","servicioInventario","filtroNombre","filtroTipo","items","obtenerInventario","subscribe","inventario","sort","a","b","console","log","ReingresoComponent","idItemElegido","cantidadIngreso","itemElegido","findIndex","item","index","editarItem","agregarItems","LoginComponent","NavbarComponent","InventarioService","afs","itemsColeccion","collection","snapshotChanges","pipe","actions","map","data","payload","doc","add","itemEditado","update","providedIn","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\n<!-- <app-login></app-login> -->\n<app-navbar></app-navbar>\n<app-inventario></app-inventario>\n\n<!-- <router-outlet></router-outlet> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { InventarioComponent } from './components/inventario/inventario.component';\n\n// IMPORTACIONES PARA FIREBASE\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { environment } from 'src/environments/environment';\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    InventarioComponent,\n    IngresoComponent,\n    NavbarComponent,\n    ReingresoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { InventarioService } from '../../../services/inventario.service';\nimport { NgForm } from '@angular/forms';\nimport { Item } from 'src/app/models/item.model';\n\n@Component({\n  selector: 'app-ingreso',\n  templateUrl: './ingreso.component.html',\n  styleUrls: ['./ingreso.component.css']\n})\nexport class IngresoComponent implements OnInit {\n  @ViewChild('f') form: NgForm;\n\n  constructor(private inventarioService: InventarioService) { }\n\n  ngOnInit(): void {\n  }\n\n  onSubmit() {\n    let nuevoItem: Item = {\n      nombre: this.form.value.nombre,\n      tipo: this.form.value.tipo,\n      cantidad: this.form.value.cantidad\n    }\n\n    this.inventarioService.agregarItem(nuevoItem);\n\n    this.form.value.nombre = \"\";\n    this.form.value.tipo = \"\";\n    this.form.value.cantidad = 0;\n\n  }\n\n}\n","<div class=\"modal-dialog\">\n  <div class=\"modal-content\">\n\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <form #f=\"ngForm\">\n      <div class=\"modal-body\">\n\n          <div class=\"form-group\">\n            <label for=\"exampleInputEmail1\">Nombre</label>\n            <input type=\"text\" ngModel name=\"nombre\" class=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\">\n          </div>\n\n          <div class=\"form-group\">\n            <div class=\"row\">\n              <div class=\"col-5\">\n                <label for=\"exampleInputPassword1\">Cantidad</label>\n                <input type=\"number\" ngModel name=\"cantidad\" class=\"form-control\" id=\"exampleInputPassword1\">\n              </div>\n              <div class=\"col-7\">\n                <label for=\"exampleFormControlSelect1\">Tipo</label>\n                <select class=\"form-control\" ngModel name=\"tipo\" id=\"exampleFormControlSelect1\">\n                  <option value=\"Herramienta Eléctrica\">Herramienta Eléctrica</option>\n                  <option value=\"Herramienta Civil\">Herramienta Civil</option>\n                  <option value=\"Herramienta Promería\">Herramienta Promería</option>\n                  <option value=\"Herramienta Medición\">Herramienta Medición</option>\n                  <option value=\"Consumible Eléctrico\">Consumible Eléctrico</option>\n                  <option value=\"Consumible Civil\">Consumible Civil</option>\n                  <option value=\"Consumible Pintura\">Consumible Pintura</option>\n                  <option value=\"Consumible Iluminación\">Consumible Iluminación</option>\n                  <option value=\"Consumible Impermeabilización\">Consumible Impermeabilización</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n      </div>\n\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">Ingresar</button>\n    </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Item } from '../../models/item.model';\nimport { InventarioService } from '../../services/inventario.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-inventario',\n  templateUrl: './inventario.component.html',\n  styleUrls: ['./inventario.component.css']\n})\n\nexport class InventarioComponent implements OnInit {\n  @ViewChild('f') form: NgForm;\n\n  inventario: Item[];\n  filtroNombre: string = \"\";\n  filtroTipo: string = \"\";\n\n  constructor(private servicioInventario: InventarioService) { }\n\n  ngOnInit(): void {\n    this.servicioInventario.obtenerInventario().subscribe(items => {\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\n    })\n  }\n\n  items: Item[] = [\n    {id: '1234', nombre: 'Martillo', tipo: 'Herramienta', cantidad: 3},\n    {id: '3435', nombre: 'Taladro', tipo: 'Herramienta', cantidad: 2},\n    {id: '787', nombre: 'Cable', tipo: 'Consumible', cantidad: 200}\n  ]\n\n  imprimirInventario() {\n\n    console.log(this.inventario);\n\n  }\n\n\n}\n","\n<div class=\"container\">\n<button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">Ingreso</button>\n<button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">Reingreso</button>\n\n\n\n  <table class=\"table shadow\">\n    <thead class=\"thead-dark\">\n      <tr>\n        <th scope=\"col\">ID</th>\n        <th scope=\"col\">Nombre</th>\n        <th scope=\"col\">Tipo</th>\n        <th scope=\"col\">Estado</th>\n        <th scope=\"col\">Cantidad</th>\n        <th></th>\n      </tr>\n    </thead>\n    <thead class=\"thead-dark\">\n      <tr>\n        <th scope=\"col\"></th>\n        <th scope=\"col\"><input [(ngModel)]=\"filtroNombre\" type=\"text\" placeholder=\"Filtro por nombre\"></th>\n        <th scope=\"col\"></th>\n        <th scope=\"col\"></th>\n        <th scope=\"col\"></th>\n        <th></th>\n      </tr>\n    </thead>\n    <tbody>\n\n    <ng-container *ngFor=\"let item of inventario\">\n      <tr scope=\"row\" *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" class=\"bg-light\">\n        <td>{{ item.id }}</td>\n        <td>{{ item.nombre }}</td>\n        <td>{{ item.tipo }}</td>\n        <td> VACIO </td>\n        <td>{{ item.cantidad }}</td>\n        <td>\n          <button class=\"btn btn-info btn-sm\">Detalles</button>\n        </td>\n      </tr>\n    </ng-container>\n\n    </tbody>\n  </table>\n\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <app-ingreso></app-ingreso>\n</div>\n\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <app-reingreso></app-reingreso>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { InventarioService } from '../../../services/inventario.service';\nimport { Item } from 'src/app/models/item.model';\n\n@Component({\n  selector: 'app-reingreso',\n  templateUrl: './reingreso.component.html',\n  styleUrls: ['./reingreso.component.css']\n})\nexport class ReingresoComponent implements OnInit {\n  inventario: Item[];\n  selectTipo: string;\n  idItemElegido: string = null;\n  cantidadIngreso: number = 0;\n\n  constructor(private servicioInventario: InventarioService) { }\n\n\n\n  ngOnInit(): void {\n    this.servicioInventario.obtenerInventario().subscribe(items => {\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\n    })\n  }\n\n  buscarIndex(itemElegido: string) {\n    this.inventario.findIndex(function(item, index) {\n      if(item.id == itemElegido){\n        return true;\n      }\n    })\n  }\n\n  agregarItems() {\n    let nuevoItem = this.inventario[this.inventario.findIndex(item => item.id == this.idItemElegido)];\n    nuevoItem.cantidad += this.cantidadIngreso;\n    this.servicioInventario.editarItem(nuevoItem);\n  }\n\n\n\n\n\n\n}\n","<div class=\"modal-dialog\">\n  <div class=\"modal-content\">\n\n    <div class=\"modal-header\">\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n\n    <form #f=\"ngForm\">\n      <div class=\"modal-body\">\n        <div class=\"form-group\">\n          <div class=\"row\">\n            <div class=\"col\">\n                <label>Tipo</label>\n                <select class=\"form-control\"\n                  [(ngModel)]=\"selectTipo\"\n                  name=\"tipo\">\n                  <option value=\"Herramienta Eléctrica\">Herramienta Eléctrica</option>\n                  <option value=\"Herramienta Civil\">Herramienta Civil</option>\n                  <option value=\"Herramienta Promería\">Herramienta Promería</option>\n                  <option value=\"Herramienta Medición\">Herramienta Medición</option>\n                  <option value=\"Consumible Eléctrico\">Consumible Eléctrico</option>\n                  <option value=\"Consumible Civil\">Consumible Civil</option>\n                  <option value=\"Consumible Pintura\">Consumible Pintura</option>\n                  <option value=\"Consumible Iluminación\">Consumible Iluminación</option>\n                  <option value=\"Consumible Impermeabilización\">Consumible Impermeabilización</option>\n                </select>\n            </div>\n            <div class=\"col\">\n                <label>Item</label>\n                <select class=\"form-control\" [(ngModel)]=\"idItemElegido\" name=\"tipo\">\n                  <ng-container *ngFor=\"let item of inventario\">\n                    <option *ngIf=\"item.tipo == selectTipo\" value='{{item.id}}'>{{ item.nombre }}</option>\n                  </ng-container>\n                </select>\n            </div>\n          </div>\n\n\n\n        </div>\n          <div class=\"form-group\">\n            <div class=\"row\">\n              <div class=\"col\">\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\n                <input\n                  disabled\n                  type=\"number\"\n                  ngModel\n                  name=\"nombre\"\n                  class=\"form-control\">\n              </div>\n              <div class=\"col\">\n                <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\n                <input type=\"number\" [(ngModel)]=\"cantidadIngreso\" name=\"nombre\" class=\"form-control\">\n              </div>\n            </div>\n          </div>\n\n\n\n\n\n      </div>\n\n    <div class=\"modal-footer\">\n      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"agregarItems()\" >Ingresar</button>\n    </div>\n    </form>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">GrupoCDV-360</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n      </li>\n    </ul>\n  </div> -->\n</nav>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Item } from '../models/item.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventarioService {\n\n  itemsColeccion: AngularFirestoreCollection<Item>;\n  items: Observable<Item[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n\n    this.itemsColeccion = afs.collection<Item>('inventario');\n    this.items = this.itemsColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Item;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerInventario() {\n    return this.items;\n  }\n\n  agregarItem(nuevoItem: Item) {\n    this.itemsColeccion.add(nuevoItem);\n  }\n\n  editarItem(itemEditado: Item) {\n    return this.itemsColeccion.doc(itemEditado.id).update(itemEditado);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtYNyuJH5IxYQaG-JX866zpdZ7vT7FIiw\",\n    authDomain: \"grupo360-21212.firebaseapp.com\",\n    databaseURL: \"https://grupo360-21212.firebaseio.com\",\n    projectId: \"grupo360-21212\",\n    storageBucket: \"grupo360-21212.appspot.com\",\n    messagingSenderId: \"42315631196\",\n    appId: \"1:42315631196:web:afc7162df29b7595d43499\",\n    measurementId: \"G-BSEHC8XG3G\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
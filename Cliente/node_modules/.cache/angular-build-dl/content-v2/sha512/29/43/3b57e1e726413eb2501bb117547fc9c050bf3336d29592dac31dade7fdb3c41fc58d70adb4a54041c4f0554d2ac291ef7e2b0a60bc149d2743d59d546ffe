{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/egresos/egresos.component.ts","webpack:///src/app/components/egresos/egresos.component.html","webpack:///src/app/components/ingresos/ingresos.component.ts","webpack:///src/app/components/ingresos/ingresos.component.html","webpack:///src/app/components/inventario/egreso/egreso.component.ts","webpack:///src/app/components/inventario/egreso/egreso.component.html","webpack:///src/app/components/inventario/ingreso/ingreso.component.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.html","webpack:///src/app/components/inventario/inventario.component.ts","webpack:///src/app/components/inventario/inventario.component.html","webpack:///src/app/components/inventario/modificar/modificar.component.ts","webpack:///src/app/components/inventario/modificar/modificar.component.html","webpack:///src/app/components/inventario/reingreso/reingreso.component.ts","webpack:///src/app/components/inventario/reingreso/reingreso.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/categorias.service.ts","webpack:///src/app/services/egresos.service.ts","webpack:///src/app/services/eliminados.service.ts","webpack:///src/app/services/ingresos.service.ts","webpack:///src/app/services/inventario.service.ts","webpack:///src/app/services/ubicaciones.service.ts","webpack:///src/app/services/unidades.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","EgresosComponent","egresosService","inventarioService","categoriaService","eliminadosService","obtenerEgresos","subscribe","items","egresos","sort","a","b","fecha","obtenerInventario","inventario","nombre","obtenerCategorias","categorias","obtenerEliminados","eliminados","idItem","findIndex","item","itemNombre","find","console","log","tipo","IngresosComponent","ingresosService","oculto","obtenerIngresos","ingresos","opciones","margin","filename","image","type","quality","html2canvas","jsPDF","unit","format","orientation","contenido","document","getElementById","from","set","save","descargarPDF","EgresoComponent","servicioInventario","servicioEgresos","faSignOutAlt","faTimesCircle","faMinusCircle","faPlusCircle","cantidadEgreso","valido","idsEgreso","cantidad","obra","responsable","itemCiclo","itemEgreso","estado","editarItem","egreso","nombreItem","categoriaItem","unidades","Date","toISOString","reponsable","agregarEgreso","form","reset","indice","push","pop","cantActual","borrarForm","agregarItem","restarItem","egresarItems","IngresoComponent","ubicacionesService","unidadesService","faSignInAlt","nuevosItems","ubicacion","vencimiento","serial","precio","obtenerUbicaciones","ubicaciones","obtenerUnidades","idAUsar","generarId","toString","revisarDisponibilidad","agregarIngreso","modalidad","n","Array","Math","random","objeto","revisarCantidad","cerrarModal","onSubmit","InventarioComponent","servicioCategorias","servicioUbicaciones","servicioEliminados","faExclamationCircle","faPencilAlt","faInfoCircle","datosInfo","itemBorrar","itemAveriado","idItemElegido","filtroTipo","faSearch","eliminarItem","eliminacion","agregarEliminado","alElegirItem","ModificarComponent","idItemElegidoModificar","itemElegido","onModificar","ReingresoComponent","cantidadIngreso","idsReingreso","nuevoItem","itemInv","reingresarItems","LoginComponent","NavbarComponent","faWarehouse","faUser","CategoriasService","afs","categoriasColeccion","collection","snapshotChanges","pipe","actions","map","data","payload","doc","providedIn","EgresosService","egresosColeccion","nuevoEgreso","add","EliminadosService","eliminadosColeccion","nuevoEliminado","IngresosService","ingresosColeccion","nuevoIngreso","InventarioService","itemsColeccion","itemEditado","update","UbicacionesService","ubicacionesColeccion","UnidadesService","unidadesColeccion","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport {EgresosComponent}  from './components/egresos/egresos.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: InventarioComponent},\r\n  { path: 'inventario', component: InventarioComponent },\r\n  { path: 'ingresos', component: IngresosComponent },\r\n  {path: 'egresos', component: EgresosComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\r\n<!-- <app-login></app-login> -->\r\n<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\n\r\n// IMPORTACIONES PARA FIREBASE\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\r\nimport { EgresoComponent } from './components/inventario/egreso/egreso.component';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\n\r\n// IMPORT DE ICONOSDE FONTAWESOME\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { EgresosComponent } from './components/egresos/egresos.component';\r\nimport { ModificarComponent } from './components/inventario/modificar/modificar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    InventarioComponent,\r\n    IngresoComponent,\r\n    NavbarComponent,\r\n    ReingresoComponent,\r\n    EgresoComponent,\r\n    IngresosComponent,\r\n    EgresosComponent,\r\n    ModificarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAnalyticsModule,\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n    FormsModule,\r\n    FontAwesomeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Egreso } from 'src/app/models/egreso.model';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { InventarioService } from 'src/app/services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\nimport { Eliminacion } from 'src/app/models/eliminacion.model';\r\n\r\n@Component({\r\n  selector: 'app-egresos',\r\n  templateUrl: './egresos.component.html',\r\n  styleUrls: ['./egresos.component.css']\r\n})\r\nexport class EgresosComponent implements OnInit {\r\n\r\n  egresos: Egreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  eliminados: Eliminacion[];\r\n\r\n  constructor(private egresosService: EgresosService,\r\n              private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private eliminadosService: EliminadosService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.egresosService.obtenerEgresos().subscribe(items => {\r\n    this.egresos = items.sort((a, b) => (a.fecha < b.fecha) ? 1 : ((a.fecha > b.fecha) ? -1 : 0));\r\n  })\r\n  this.inventarioService.obtenerInventario().subscribe(items => {\r\n    this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n  this.categoriaService.obtenerCategorias().subscribe(items => {\r\n    this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n  this.eliminadosService.obtenerEliminados().subscribe(items => {\r\n    this.eliminados = items.sort((a, b) => (a.fecha < b.fecha) ? 1 : -1);\r\n  })\r\n  }\r\n\r\n  regresarIndice(idItem: string) {\r\n      return this.inventario.findIndex(item => item.id == idItem);\r\n\r\n}\r\n\r\n//FUNCIONES DE FILTRO DE TABLA DE EGRESOS\r\n\r\n    //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n    regresarNombre(id: string) {\r\n      var itemNombre = this.inventario.find(item => item.id == id);\r\n      console.log(itemNombre);\r\n      return itemNombre.nombre;\r\n    }\r\n\r\n    //BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n    regresarCategoria(id: string) {\r\n      return this.inventario.find(item => item.id == id).tipo;\r\n    }\r\n\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <h1>Egresos</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <!--Tabla de inventario en donde se muestran los egresos generales-->\r\n        <table class=\"table shadow\">\r\n        <!--FILTROS DE LA TABLA DE EGRESOS-->\r\n        <thead class=\"thead bg-warning text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroObra=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por obra\"></th>\r\n            <th scope=\"col\"><input #filtroResponsable=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por responsable\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-warning\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Obra</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Egreso</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--NgFor que imprime egresos de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n            <ng-container *ngFor=\"let egreso of egresos\">\r\n\r\n            <tr *ngIf=\"((egreso.nombreItem.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value=='') &&\r\n                        (egreso.categoriaItem.toLocaleLowerCase().includes(filtroCategoria.value.toLocaleLowerCase()) || filtroCategoria.value=='') &&\r\n                        (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value=='') && \r\n                        (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value==''))\"\r\n\r\n            scope=\"row\" class=\"bg-light\">\r\n                <td>{{ egreso.nombreItem }} </td>\r\n                <td>{{ egreso.categoriaItem }}</td>\r\n                <td>{{ egreso.cantidad }} {{ egreso.unidades }}</td>\r\n                <td>{{ egreso.obra }}</td>\r\n                <td>{{ egreso.reponsable }}</td>\r\n                <td>{{ egreso.fecha | date:'short' }}</td>\r\n            </tr>\r\n            <!-- *ngIf=\"(\r\n            (regresarNombre(egreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLocaleLowerCase()) || filtroNombre.value == '')\r\n\r\n            )\" -->\r\n            <!-- && -->\r\n            <!-- (regresarCategoria(egreso.idItem).includes(filtroCategoria.value)|| filtroCategoria.value == null) -->\r\n            <!-- && -->\r\n            <!-- (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value =='') -->\r\n            <!-- && -->\r\n            <!-- (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value =='') -->\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    <div class=\"row\">\r\n        <h1>Eliminados</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <!--Tabla de inventario en donde se muestran los ELIMINADOS generales-->\r\n        <table class=\"table shadow\">\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Eliminación</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--NgFor que imprime egresos de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n            <ng-container *ngFor=\"let eliminacion of eliminados\">\r\n              <!-- *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" -->\r\n            <tr\r\n            scope=\"row\" class=\"bg-light\">\r\n                <td>{{ eliminacion.nombreItem }} </td>\r\n                <td>{{ eliminacion.categoriaItem }}</td>\r\n                <td>{{ eliminacion.cantidad }} {{ eliminacion.unidades }}</td>\r\n                <td>{{ eliminacion.IdUsuario }}</td>\r\n                <td>{{ eliminacion.fecha | date:'short' }}</td>\r\n            </tr>\r\n            <!-- *ngIf=\"(\r\n            (regresarNombre(egreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLocaleLowerCase()) || filtroNombre.value == '')\r\n\r\n            )\" -->\r\n            <!-- && -->\r\n            <!-- (regresarCategoria(egreso.idItem).includes(filtroCategoria.value)|| filtroCategoria.value == null) -->\r\n            <!-- && -->\r\n            <!-- (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value =='') -->\r\n            <!-- && -->\r\n            <!-- (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value =='') -->\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\nimport { InventarioService } from 'src/app/services/inventario.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingresos',\r\n  templateUrl: './ingresos.component.html',\r\n  styleUrls: ['./ingresos.component.css']\r\n})\r\nexport class IngresosComponent implements OnInit {\r\n  ingresos: Ingreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  oculto = true;\r\n\r\n  constructor(private ingresosService: IngresosService,\r\n              private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ingresosService.obtenerIngresos().subscribe(items => {\r\n      this.ingresos = items.sort((a, b) => (a.fecha < b.fecha) ? 1 : ((a.fecha > b.fecha) ? -1 : 0));\r\n    })\r\n    this.inventarioService.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre> b.nombre) ? 1: -1)\r\n    })\r\n  }\r\n\r\n  regresarIndice(idItem) {\r\n    return this.inventario.findIndex(item => item.id == idItem);\r\n}\r\n\r\n  //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n  regresarNombre(id: string) {\r\n    return this.inventario.find(item => item.id == id).nombre;\r\n  }\r\n\r\n//BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n  regresarCategoria(id: string) {\r\n    return this.inventario.find(item => item.id == id).tipo;\r\n  }\r\n\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Ingresos.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <button data-toggle=\"modal\" data-target=\"#exampleModal\" class=\"btn btn-primary\">Exportar a PDF</button>\r\n  <div class=\"row\">\r\n    <h1>Ingresos</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!--Tabla de inventario en donde se muestra el inventario general-->\r\n      <table class=\"table shadow\">\r\n        <thead data-html2canvas-ignore class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n              </select>\r\n          </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroModalidad=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroModalidad\">\r\n              <option value=\"\">Modalidad (Todas)</option>\r\n              <option value='Ingreso'> Ingreso </option>\r\n              <option value='Reingreso'> Reingreso </option>\r\n              </select>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Fecha Ingreso</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Modalidad</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n          <ng-container *ngFor=\"let ingreso of ingresos\">\r\n            <tr *ngIf=\"(\r\n              (ingreso.nombreItem.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n              &&\r\n              (ingreso.categoriaItem.includes(filtroCategoria.value) || filtroCategoria.value == null)\r\n              &&\r\n              (ingreso.modalidad==filtroModalidad.value || filtroModalidad.value == '')\r\n              )\" scope=\"row\" class=\"bg-light\">\r\n              <td>{{ ingreso.nombreItem }}</td>\r\n              <td>{{ ingreso.categoriaItem }}</td>\r\n              <td>{{ ingreso.cantidad }} {{ ingreso.unidades }}</td>\r\n              <td>\r\n                <div *ngIf=\"ingreso.precio != null; else sinPrecio\">\r\n                  {{ ingreso.precio | currency }}\r\n                </div>\r\n                <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                <ng-template #sinPrecio>\r\n                  N/A\r\n                </ng-template>\r\n              </td>\r\n\r\n              <td>{{ ingreso.fecha | date:'short'}}</td>\r\n              <td>{{ ingreso.IdUsuario }}</td>\r\n              <td>{{ ingreso.modalidad }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL PDF -->\r\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Ingresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-primary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                  <th scope=\"col\">Fecha Ingreso</th>\r\n                  <th scope=\"col\">Responsable</th>\r\n                  <th scope=\"col\">Modalidad</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n              <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n                <ng-container *ngFor=\"let ingreso of ingresos\">\r\n                  <tr>\r\n                    <td>{{ ingreso.nombreItem }}</td>\r\n                    <td>{{ ingreso.categoriaItem }}</td>\r\n                    <td>{{ ingreso.cantidad }} {{ ingreso.unidades }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"ingreso.precio != null; else sinPrecio\">\r\n                        {{ ingreso.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n\r\n                    <td>{{ ingreso.fecha | date:'short'}}</td>\r\n                    <td>{{ ingreso.IdUsuario }}</td>\r\n                    <td>{{ ingreso.modalidad }}</td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">Exportar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { Egreso } from 'src/app/models/egreso.model';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-egreso',\r\n  templateUrl: './egreso.component.html',\r\n  styleUrls: ['./egreso.component.css']\r\n})\r\n\r\n\r\nexport class EgresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n   //ICONOS FONTAWESOME\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  // idItemElegidoEgreso: string = null;\r\n  cantidadEgreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}];\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private servicioEgresos: EgresosService)\r\n              { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n}\r\n//Busca item a egresar por filtro, y guarda el id del mismo\r\n// buscarIndex(itemElegidoEgreso: string) {\r\n//   this.inventario.findIndex(function(item, index) {\r\n//     if(item.id == itemElegidoEgreso){\r\n//       return true;\r\n//     }\r\n//   })\r\n// }\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\negresarItems() {\r\n\r\n  for(let itemCiclo of this.idsEgreso) {\r\n    let itemEgreso = this.inventario[this.inventario.findIndex(item => item.id == itemCiclo.id)];\r\n\r\n    if(itemEgreso.tipo == \"Herramienta\") {\r\n      itemEgreso.estado = \"En Obra\";\r\n    }\r\n    else {\r\n      itemEgreso.cantidad = itemEgreso.cantidad - itemCiclo.cantidad;\r\n      if(itemEgreso.cantidad == 0){\r\n        itemEgreso.estado = \"Agotado\";\r\n      }\r\n    }\r\n    itemEgreso.responsable = itemCiclo.responsable;\r\n\r\n    this.servicioInventario.editarItem(itemEgreso);\r\n\r\n    let egreso: Egreso = {\r\n      idItem: itemEgreso.id,\r\n      nombreItem: itemEgreso.nombre,\r\n      categoriaItem: itemEgreso.tipo,\r\n      unidades: itemEgreso.unidades,\r\n      fecha: new Date().toISOString(),\r\n      obra: itemCiclo.obra,\r\n      reponsable: itemCiclo.responsable,\r\n    }\r\n    if(itemEgreso.tipo != 'Herramienta'){\r\n      egreso.cantidad = itemCiclo.cantidad;\r\n      // CUANDO ES HERRAMIENTA, SE COLOCA \"1 UNIDAD\" DE DEFAULT\r\n    } else {\r\n      egreso.cantidad = 1;\r\n    }\r\n\r\n    this.servicioEgresos.agregarEgreso(egreso);\r\n  }\r\n    this.form.reset();\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsEgreso[indice].id);\r\n}\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}]\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsEgreso.push({id: '', cantidad: null, obra: null, responsable: null});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsEgreso.pop();\r\n  }\r\n\r\n  borrarId(indice: number) {\r\n    this.idsEgreso[indice].id = '';\r\n  }\r\n\r\n  revisarCantidad(cantActual: number) {\r\n    for(let item of this.idsEgreso) {\r\n      if(item.cantidad > cantActual || item.cantidad == null || item.cantidad == 0){\r\n        this.valido = false;\r\n        return;\r\n      }\r\n    }\r\n    this.valido = true;\r\n\r\n    console.log('Funciona');\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n\r\n    <!--Modal de egreso de producto-->\r\n\r\n        <div class=\"modal-header bg-warning\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Egreso</h5>\r\n            <button (click)=\"borrarForm()\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div *ngFor=\"let item of idsEgreso; let i=index\" class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n                <div class=\"row\">\r\n                <div class=\"col-3\">\r\n                <label>Categoría</label>\r\n                <select (change)='borrarId(i);' class=\"form-control\" ngModel [name]=\"'selectTipo'+[i]\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n                </div>\r\n            <!--Filtro por Item de egreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select [(ngModel)]='idsEgreso[i].id' class=\"form-control\" [name]=\"'idItem'+[i]\">\r\n                <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                <ng-container *ngFor=\"let item of inventario\">\r\n                <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                <option *ngIf=\"item.tipo == selectTipo.value && item.estado == 'Disponible'\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                </ng-container>\r\n                </select>\r\n            </div>\r\n            <div *ngIf=\"selectTipo.value == 'Consumible' || selectTipo.value == 'Producto'\" class=\"col-3\">\r\n            <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n            <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n            <p *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n            </div>\r\n            <div *ngIf=\"selectTipo.value == 'Consumible' || selectTipo.value == 'Producto'\" class=\"col-3\">\r\n            <!--Label e input de cantidad a egresar (se escribe la cantidad a egresar)-->\r\n            <label for=\"exampleInputEmail1\">Cantidad a egresar</label>\r\n            <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\"\r\n              onkeypress=\"return event.charCode > 48\"\r\n              min=\"1\"\r\n              [max]=\"inventario[regresarIndice(i)].cantidad\" type=\"number\"\r\n              [(ngModel)]=\"idsEgreso[i].cantidad\"\r\n              [name]=\"'cantidadEgreso'+[i]\"\r\n              class=\"form-control\"\r\n              (keyup)='revisarCantidad(inventario[regresarIndice(i)].cantidad)'>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <label for=\"exampleInputEmail1\">Obra destino</label>\r\n                    <input [(ngModel)]='idsEgreso[i].obra' [name]=\"'obra'+[i]\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"col\">\r\n                    <label for=\"exampleInputEmail1\">Responsable</label>\r\n                    <input [(ngModel)]='idsEgreso[i].responsable' [name]=\"'responsable'+[i]\" class=\"form-control\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <!--Footer de Modal de egresar, con botones de cerrar y-->\r\n        <div class=\"modal-footer\">\r\n            <div class=\"btn-group\">\r\n            <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n            </button>\r\n            <button [hidden]=\"idsEgreso.length == 1\" type=\"button\" class=\"btn btn-secondary\" (click)=\"restarItem()\">\r\n                <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n            </button>\r\n            </div>\r\n            <button type=\"button\" class=\"btn btn-secondary\"  data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n            <button\r\n                type=\"button\"\r\n                class=\"btn btn-warning\"\r\n                data-dismiss=\"modal\"\r\n                (click)=\"egresarItems()\"\r\n                [disabled]='!valido'>\r\n                <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n    </div>\r\n\r\n</div>\r\n\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport * as firebase from 'firebase';\r\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { ObjectUnsubscribedError } from 'rxjs';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\n\r\n// ViewChild del form de ingreso, y funcion inventarioService\r\n\r\nexport class IngresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  inventario: Item[];\r\n  nombre = \"\";\r\n  valido: boolean = true;\r\n  // cantidadItems = 1;\r\n\r\n  nuevosItems: Item[] = [\r\n    {\r\n      nombre: null,\r\n      tipo: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n\r\n  constructor(private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService,\r\n              private ingresosService: IngresosService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inventarioService.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n//Se agrega nuevoItem al inventario existente, y se borran los campos//\r\n    for(var item of this.nuevosItems) {\r\n      var idAUsar = this.generarId().toString();\r\n\r\n      // REVISA SI EL ID ESTA DISPONIBLE Y DE NO ESTARLO LO CAMBIA\r\n      while(!this.revisarDisponibilidad(idAUsar)){\r\n        idAUsar = this.generarId().toString();\r\n      }\r\n\r\n      item.id = idAUsar;\r\n\r\n      if(item.tipo == \"Herramienta\") {\r\n        item.cantidad = 1;\r\n        item.unidades = \"Unidad\";\r\n      }\r\n\r\n      this.inventarioService.agregarItem(item);\r\n\r\n      this.ingresosService.agregarIngreso(\r\n        {\r\n          idItem: item.id,\r\n          nombreItem: item.nombre,\r\n          categoriaItem: item.tipo,\r\n          unidades: item.unidades,\r\n          fecha: new Date().toISOString(),\r\n          cantidad: item.cantidad,\r\n          precio: item.precio,\r\n          modalidad: \"Ingreso\"\r\n        }\r\n      )\r\n    }\r\n    this.form.reset();\r\n    this.nuevosItems =\r\n    // this.cantidadItems = 1;\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  //Al cerrar el modal, se reinician los campos\r\n  cerrarModal() {\r\n    this.form.reset();\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  repetirNVeces(n: number) {\r\n    return[...Array(+n).keys()];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n    // this.cantidadItems++;\r\n  }\r\n\r\n  restarItem() {\r\n    this.nuevosItems.pop()\r\n    // this.cantidadItems--;\r\n  }\r\n\r\n  generarId() {\r\n    return (Math.random() * 1000000000 + 1);\r\n  }\r\n\r\n  // RERTORNA TRUE SI EL ID ESTA DISPONIBLE, SI NO RETORNA FALSE\r\n  revisarDisponibilidad(id: string) {\r\n    for(var objeto of this.inventario) {\r\n      if(objeto.id == id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.nuevosItems){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  restablecerCantidad(indice: number) {\r\n    if(this.nuevosItems[indice].tipo == \"Herramienta\") {\r\n      this.nuevosItems[indice].cantidad = 1;\r\n    }\r\n\r\n    this.revisarCantidad();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de ingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-success text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\r\n      <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" (click)='cerrarModal()' aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n          <!--Nombre de producto-->\r\n            <div class=\"form-group\">\r\n              <h3>Item {{i+1}}</h3>\r\n              <!-- <div class=\"form-check\">\r\n                <input #itemExistente=\"ngModel\" class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" ngModel name=\"checkboxExistente\" >\r\n                <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                  Item Existente\r\n                </label>\r\n              </div>\r\n              <div>PRUEBA</div> -->\r\n            <div >\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <label>Nombre</label>\r\n                <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" [name]=\"'nombre' + [i]\" class=\"form-control\">\r\n                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select (change)='restablecerCantidad(i);' #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-control\" [(ngModel)]=\"nuevosItems[i].tipo\" [name]=\"'cat' + [i]\">\r\n                  <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n                <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n              </div>\r\n              <div class=\"col-2\">\r\n                <label>Serial</label>\r\n                <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" [name]=\"'serial' + [i]\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\" *ngIf=\"nuevosItems[i].tipo == 'Consumible' || nuevosItems[i].tipo == 'Producto'\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    onkeypress=\"return event.charCode >= 46\"\r\n                    min=\"1\"\r\n                    #cantidad=\"ngModel\"\r\n                    required\r\n                    type=\"number\"\r\n                    [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                    [name]=\"'cantidad' + [i]\"\r\n                    class=\"form-control\"\r\n                    (keyup)='revisarCantidad()'>\r\n                  <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" [name]=\"'unidades' + [i]\" class=\"form-control\">\r\n                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n                <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <label>Ubicación en almacén</label>\r\n                <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" [name]=\"'ubicacion' + [i]\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                  <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                <div *ngIf=\"nuevosItems[i].tipo == 'Consumible' || nuevosItems[i].tipo == 'Producto'\" class=\"form-group\">\r\n                  <label>Vencimiento</label>\r\n                  <input class=\"form-control\" [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n              </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n    <!--Footer de Modal con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n            <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n          </button>\r\n          <button type=\"button\" [hidden]=\"nuevosItems.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" (click)=\"restarItem()\">\r\n            <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n          </button>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\" data-dismiss=\"modal\">\r\n          <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n        </button>\r\n        <!-- !f.valid significa cuando el form no sea valido -->\r\n        <button [disabled]='!f.valid || !valido' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n          <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n      </button>\r\n    </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../models/item.model';\r\nimport { InventarioService } from '../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\nimport { Eliminacion } from 'src/app/models/eliminacion.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n\r\n  datosInfo: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  }\r\n\r\n  itemBorrar = {\r\n    id: null,\r\n    nombre: null\r\n  }\r\n\r\n  //VARIABLE PARA MODEL DE AVERIA\r\n  itemAveriado: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  //VARIABLE PARA HACER LAS BUSQUEDA POR ID DEL ITEM DE AVERIA\r\n  idItemElegido:string = null;\r\n\r\n  filtroTipo: string = \"\";\r\n  faSearch = faSearch;\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioEliminados: EliminadosService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioCategorias.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioUbicaciones.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  //RECIBE EL ITEM DE LA FILA, E IMPRIME DICHOS DATOS EN UNA VARIABLE\r\n  asignarDetalles(item: Item) {\r\n    this.datosInfo = item;\r\n  }\r\n\r\n  // ASIGNA LOS DATOS DEL ITEM A BORRAR EN LA VARIABLE itemBorrar\r\n  asignarBorrar(id, nombre) {\r\n    this.itemBorrar.id = id;\r\n    this.itemBorrar.nombre = nombre;\r\n  }\r\n  // ELIMINA EL ITEM SELECCIONADO DE LA BD CUANDO EL USUARIO ACEPTA EN EL MODAL\r\n  eliminarItem() {\r\n\r\n    this.servicioInventario.eliminarItem(this.itemBorrar.id);\r\n    var eliminacion: Eliminacion = {\r\n      idItem: this.itemBorrar.id,\r\n      nombreItem: this.itemBorrar.nombre,\r\n      categoriaItem: this.inventario.find(item => item.id == this.itemBorrar.id).tipo,\r\n      unidades: this.inventario.find(item => item.id == this.itemBorrar.id).unidades,\r\n      fecha: new Date().toISOString(),\r\n      cantidad: this.inventario.find(item => item.id == this.itemBorrar.id).cantidad\r\n    }\r\n    this.servicioEliminados.agregarEliminado(eliminacion);\r\n  }\r\n\r\n  //BUSCA ITEM PARA REPORTAR AVERIA\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegido);\r\n}\r\n  regresarItem(id: string) {\r\n    return this.inventario.find(item => item.id == id);\r\n}\r\n\r\n  //CREA ITEM TEMPORAL EN DONDE COLOCARA NUEVOS ESTADOS\r\n  alElegirItem(idItem: string) {\r\n  this.itemAveriado = this.inventario.find(item => item.id == idItem);\r\n}\r\n\r\n  reportarAveria() {\r\n    this.itemAveriado.estado = \"Dañado\";\r\n    this.servicioInventario.editarItem(this.itemAveriado);\r\n    //SE BORRAN LOS CAMPOS DEL FORMULARIO\r\n    this.form.reset();\r\n  }\r\n  reportarReparado() {\r\n    this.itemAveriado.estado = \"Disponible\";\r\n    this.servicioInventario.editarItem(this.itemAveriado);\r\n    //SE BORRAN LOS CAMPOS DEL FORMULARIO\r\n    this.form.reset();\r\n  }\r\n\r\n  //BORRA FORMMULARIO DE AVERIA\r\n  borrarForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n<!--Botones de ingreso y reingreso de productos-->\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <h1>Inventario</h1>\r\n  </div>\r\n  <div class=\"col\">\r\n    <div class=\"btn-group float-left\">\r\n      <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">\r\n        <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingreso\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">\r\n        <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Reingreso\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#modalEgreso\">\r\n        <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egreso\r\n      </button>\r\n    </div>\r\n    <div class=\"btn-group float-right\">\r\n      <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#modalModificar\">\r\n        <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#modalReporte\">\r\n        <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n    <table class=\"table shadow\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\">\r\n            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n          </th>\r\n\r\n          <th scope=\"col\">\r\n            <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\">\r\n            <select #filtroUbicacion=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroUbicacion\">\r\n              <option value=\"\">Ubicación (Todas)</option>\r\n              <option *ngFor=\"let ubicacion of ubicaciones\" [value]=\"ubicacion.nombre\">{{ ubicacion.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!-- *ngIf=\"(item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase() || item.tipo == filtroCategoria.value)) || filtroNombre.value == ''\" -->\r\n\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventario\">\r\n          <ng-container *ngIf=\"item.cantidad != 0\">\r\n            <tr\r\n              scope=\"row\"\r\n              *ngIf=\"(\r\n                (item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (item.tipo == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (item.ubicacion == filtroUbicacion.value || filtroUbicacion.value == '')\r\n              )\"\r\n            class=\"bg-light\">\r\n            <td>{{ item.nombre }}</td>\r\n            <td>{{ item.tipo }}</td>\r\n            <td><span [ngClass]=\"{'text-danger': item.estado=='En Obra'}\">{{ item.cantidad }} {{ item.unidades }}</span></td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible',\r\n                            'text-danger': item.estado=='Dañado',\r\n                            'text-info': item.estado=='En Obra'}\">{{ item.estado }}</td>\r\n            <td>\r\n              <div class=\"btn-group\">\r\n                <button (click)=\"asignarDetalles(item)\" type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#modalInfo\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Detalles\r\n              </button>\r\n              <button (click)=\"asignarBorrar(item.id, item.nombre)\" type=\"button\" class=\"btn btn-danger btn-sm\" data-toggle=\"modal\" data-target=\"#modalEliminar\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Eliminar\r\n              </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </ng-container>\r\n\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n<!-- INICIO MODAL ELIMINAR -->\r\n<div class=\"modal\" tabindex=\"-1\" id=\"modalEliminar\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-danger\">\r\n        <h5 class=\"modal-title text-white\">Eliminar Item</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>¿Estás seguro que deseas eliminar <strong>{{ itemBorrar.nombre }}</strong>?. <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\r\n        <button (click)=\"eliminarItem()\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR -->\r\n<!-- MODAL DE INFO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n          <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.id }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.serial != null\">\r\n                <th>Serial</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.serial }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Categoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.tipo }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidad }} {{datosInfo.unidades }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.ubicacion != null\">\r\n                <th>Ubicación</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.ubicacion }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.responsable != null && datosInfo.fecha != null\">\r\n                <th>Primer ingreso por</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.responsable }} ({{ datosInfo.fecha }})</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.estado != null\">\r\n                <th>Estado</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.estado }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.vencimiento != null\">\r\n                <th>Vencimiento</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.vencimiento }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.precio != null\">\r\n                <th>Precio</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.precio |currency}}</td>\r\n              </tr>\r\n              <tr><th></th><td></td><td></td></tr>\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO -->\r\n  </div>\r\n\r\n<!--MODAL DE REPORTE DE PRODUCTO-->\r\n<div class=\"modal fade\" id=\"modalReporte\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n  <div class=\"modal-content\">\r\n\r\n      <div class=\"modal-header bg-danger text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reporte</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!--Filtro por Tipo de reingreso-->\r\n      <div class=\"modal-body\">\r\n      <form #f=\"ngForm\">\r\n          <h3>Item</h3>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                  <label>Categoría</label>\r\n                    <select class=\"form-control\" ngModel name=\"selectTipoReporte\" #selectTipoReporte=\"ngModel\">\r\n                      <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                    </select>\r\n              </div>\r\n              <div class=\"col\">\r\n                  <label>Item</label>\r\n                  <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class='form-control' ngModel name=\"id\">\r\n                    <!--NG FOR QUE COLOCA LA LISTA DE INVENTARIO-->\r\n                    <ng-container *ngFor=\"let item of inventario\">\r\n                      <!--NG IF QUE FILTRA LA LISTA FINAL POR EL TIPO-->\r\n                      <ng-container *ngIf=\"item.tipo == selectTipoReporte.value && item.estado != 'En Obra'\">\r\n                        <option value='{{item.id}}'>{{ item.nombre }}</option>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n\r\n            <button data-dismiss=\"modal\" *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Dañado'\" type=\"button\" class=\"btn btn-primary\"  (click)=\"reportarReparado()\">\r\n              <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Reparado\r\n            </button>\r\n            <button *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Disponible'\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\" (click)=\"reportarAveria()\">\r\n              <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Dañado\r\n            </button>\r\n\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- Modal Ingreso-->\r\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-ingreso></app-ingreso>\r\n</div>\r\n<!-- Modal Reingreso-->\r\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-reingreso></app-reingreso>\r\n</div>\r\n<!-- Modal Egreso-->\r\n<div class=\"modal fade\" id=\"modalEgreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-egreso></app-egreso>\r\n</div><!-- Modal Modificar-->\r\n<div class=\"modal fade\" id=\"modalModificar\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-modificar></app-modificar>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service'\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service'\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-modificar',\r\n  templateUrl: './modificar.component.html',\r\n  styleUrls: ['./modificar.component.css']\r\n})\r\nexport class ModificarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  inventario: Item[];\r\n  idItemElegidoModificar: string = null;\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  alElegirItem(idItem: string) {\r\n    this.itemElegido = this.inventario.find(item => item.id == idItem);\r\n  }\r\n\r\n  //ENCUENTRA EL ID DEL ITEM A MODIFICAR\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegidoModificar);\r\n  }\r\n\r\n  onModificar() {\r\n    this.servicioInventario.editarItem(this.itemElegido);\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"modal-header bg-info text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modificar</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <h5>Seleccione el item a modificar:</h5>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <label>Categoría</label>\r\n                        <select class=\"form-control\" ngModel name=\"selectTipoModificar\" #selectTipoModificar=\"ngModel\">\r\n                          <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label>Item</label>\r\n                        <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class=\"form-control\" ngModel name=\"item\">\r\n                          <ng-container *ngFor=\"let item of inventario\">\r\n                            <option *ngIf=\"item.tipo == selectTipoModificar.value\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                          </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n                <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS-->\r\n                <div class=\"form-group\">\r\n                    <h5>Modifique los datos que desee:</h5>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-3\">\r\n                            <label>Nombre</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.nombre\" name=\"nombre\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <label>Categoría</label>\r\n                            <select required class=\"form-control\" [(ngModel)]=\"itemElegido.tipo\" name=\"categoria\">\r\n                                <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <label>Cantidad y Unidades</label>\r\n                            <div class=\"input-group\">\r\n                                <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" onkeypress=\"return event.charCode > 48\" min=\"1\" [(ngModel)]=\"itemElegido.cantidad\" required type=\"number\" name=\"cantidad\" class=\"form-control\">\r\n                                <select [disabled]=\"itemElegido.tipo == 'Herramienta'\" required type=\"text\" placeholder=\"0\"  name=\"unidades\" [(ngModel)]=\"itemElegido.unidades\" class=\"form-control\">\r\n                                <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-2\">\r\n                            <label>Ubicación</label>\r\n                            <select type=\"text\"  name=\"ubicacion\" [(ngModel)]=\"itemElegido.ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                                <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <label>Serial</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.serial\" name=\"serial\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Fecha de Vencimiento</label>\r\n                            <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" class=\"form-control\" [(ngModel)]=\"itemElegido.vencimiento\" name=\"vencimiento\" type=\"date\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Estado</label>\r\n                            <select type=\"text\" [(ngModel)]=\"itemElegido.estado\" name=\"estado\" class=\"form-control\">\r\n                                <option>Disponible</option>\r\n                                <option>En Obra</option>\r\n                                <option>Dañado</option>\r\n                                <option>Agotado</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Precio</label>\r\n                            <input onkeypress=\"return event.charCode > 48\" min=\"0\" type=\"number\" [(ngModel)]=\"itemElegido.precio\" name=\"precio\" class=\"form-control\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        <!--Footer de Modal con botones de cerrar y modificar-->\r\n        <div class=\"modal-footer\">\r\n            <button (click)=\"f.reset()\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n            <button (click)=\"onModificar()\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-info\">\r\n                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n</div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\n//Se declaran las variables a utilizar en reingreso\r\nexport class ReingresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  cantidadIngreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsReingreso = [\r\n    {id: \"\", cantidad: 1}\r\n  ];\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ingresosService: IngresosService)\r\n              { }\r\n\r\n\r\n//Se obtiene inventario en orden alfabetico, y se imprime en la tabla//\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsReingreso[indice].id);\r\n}\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  reingresarItems() {\r\n    for(let item of this.idsReingreso) {\r\n      let nuevoItem = this.inventario.find(itemInv => itemInv.id == item.id);\r\n      // let nuevoItem = this.inventario[this.inventario.findIndex(itemInv => itemInv.id == item.id)];\r\n      if(nuevoItem.tipo != \"Herramienta\") {\r\n        nuevoItem.cantidad += item.cantidad;\r\n      }\r\n      nuevoItem.estado = \"Disponible\"\r\n      this.servicioInventario.editarItem(nuevoItem);\r\n\r\n      this.ingresosService.agregarIngreso(\r\n        {\r\n          idItem: nuevoItem.id,\r\n          nombreItem: nuevoItem.nombre,\r\n          categoriaItem: nuevoItem.tipo,\r\n          unidades: nuevoItem.unidades,\r\n          fecha: new Date().toISOString(),\r\n          cantidad: nuevoItem.cantidad,\r\n          modalidad: \"Reingreso\",\r\n          precio: null\r\n        }\r\n      )\r\n    }\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n  }\r\n\r\n\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsReingreso.push({id: \"\", cantidad: 1});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsReingreso.pop();\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.idsReingreso){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de reingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-primary text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\r\n      <button (click)=\"borrarForm()\" type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!--Filtro por Tipo de reingreso-->\r\n\r\n    <form #f=\"ngForm\">\r\n      <div *ngFor=\"let item of idsReingreso; let i=index\" class=\"modal-body\">\r\n        <h3>Item {{i+1}}</h3>\r\n        <div class=\"form-group\">\r\n          <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <label>Categoría</label>\r\n                  <select class=\"form-control\" ngModel [name]=\"'selectTipo'+[i]\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n            </div>\r\n            <!--Filtro por Item de reingreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select class=\"form-control\" [(ngModel)]=\"idsReingreso[i].id\" [name]=\"'selectId'+[i]\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                    <ng-container *ngIf=\"item.tipo == selectTipo.value\">\r\n                      <option *ngIf=\"(item.tipo == 'Herramienta' && item.estado == 'En Obra') || (item.tipo != 'Herramienta')\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n                <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                <p *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n              </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n                <!--Label e input de cantidad a ingresar (se escribe la cantidad a ingresar)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                <input\r\n                  *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\"\r\n                  onkeypress=\"return event.charCode >= 46\"\r\n                  min=\"1\"\r\n                  type=\"number\"\r\n                  (keyup)='revisarCantidad()'\r\n                  [(ngModel)]=\"idsReingreso[i].cantidad\"\r\n                  [name]=\"'cantidad'+[i]\"\r\n                  class=\"form-control\">\r\n              </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n      <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n            <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n          </button>\r\n          <button type=\"button\" [hidden]=\"idsReingreso.length == 1\" class=\"btn btn-secondary\" [disabled]=\"idsReingreso.length == 1\" (click)=\"restarItem()\">\r\n            <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n          </button>\r\n        </div>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n          </button>\r\n          <button [disabled]='!valido' type=\"button\" class=\"btn btn-success\" (click)=\"reingresarItems()\" data-dismiss=\"modal\">\r\n            <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n          </button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { faWarehouse, faUsersSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n    faWarehouse = faWarehouse;\r\n    faSignInAlt = faSignInAlt;\r\n    faSignOutAlt = faSignOutAlt;\r\n    faUser = faUser;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  <nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n      <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 50px; width: 100%; margin: 0; padding: 0\">\r\n      <strong> GrupoCDV</strong>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/inventario\"> <fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/ingresos\"> <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresos </a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/egresos\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresos</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"#\"> <fa-icon [icon]=\"faUser\"></fa-icon> Usuario</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Features</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n  </div> -->\r\n  </nav>\r\n\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Categoria } from '../models/categoria.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  categoriasColeccion: AngularFirestoreCollection<Categoria>\n  categorias: Observable<Categoria[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.categoriasColeccion = afs.collection<Categoria>('categoria');\n    this.categorias = this.categoriasColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Categoria;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerCategorias() {\n    return this.categorias;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Egreso } from '../models/egreso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EgresosService {\n  egresosColeccion: AngularFirestoreCollection<Egreso>;\n  egresos: Observable<Egreso[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.egresosColeccion = afs.collection<Egreso>('egresos');\n    this.egresos = this.egresosColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Egreso;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerEgresos() {\n    return this.egresos;\n  }\n\n  agregarEgreso(nuevoEgreso: Egreso) {\n    this.egresosColeccion.add(nuevoEgreso);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Eliminacion } from '../models/eliminacion.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EliminadosService {\n  eliminadosColeccion: AngularFirestoreCollection<Eliminacion>;\n  eliminados: Observable<Eliminacion[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.eliminadosColeccion = afs.collection<Eliminacion>('eliminados');\n    this.eliminados = this.eliminadosColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Eliminacion;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n  obtenerEliminados() {\n    return this.eliminados;\n  }\n\n  agregarEliminado(nuevoEliminado: Eliminacion) {\n    this.eliminadosColeccion.add(nuevoEliminado);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Ingreso } from '../models/ingreso.model';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n  ingresosColeccion: AngularFirestoreCollection<Ingreso>;\n  ingresos: Observable<Ingreso[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ingresosColeccion = afs.collection<Ingreso>('ingresos');\n    this.ingresos = this.ingresosColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Ingreso;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerIngresos() {\n    return this.ingresos;\n  }\n\n  agregarIngreso(nuevoIngreso: Ingreso) {\n    this.ingresosColeccion.add(nuevoIngreso);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { Item } from '../models/item.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventarioService {\r\n\r\n  itemsColeccion: AngularFirestoreCollection<Item>;\r\n  items: Observable<Item[]>\r\n\r\n  constructor(private readonly afs: AngularFirestore) {\r\n\r\n    this.itemsColeccion = afs.collection<Item>('inventario');\r\n    this.items = this.itemsColeccion.snapshotChanges().pipe(\r\n      map(actions => actions.map(a => {\r\n        const data = a.payload.doc.data() as Item;\r\n        const id = a.payload.doc.id;\r\n        return { id, ...data };\r\n      }))\r\n    )\r\n  }\r\n\r\n  obtenerInventario() {\r\n    return this.items;\r\n  }\r\n\r\n  agregarItem(nuevoItem: Item) {\r\n    this.itemsColeccion.doc(nuevoItem.id).set(nuevoItem);\r\n  }\r\n\r\n  editarItem(itemEditado: Item) {\r\n    return this.itemsColeccion.doc(itemEditado.id).update(itemEditado);\r\n  }\r\n\r\n  eliminarItem(id: string) {\r\n    return this.itemsColeccion.doc(id).delete();\r\n  }\r\n\r\n  }\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UbicacionesService {\n\n  ubicacionesColeccion: AngularFirestoreCollection<any>\n  ubicaciones: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ubicacionesColeccion = afs.collection<any>('ubicaciones');\n    this.ubicaciones = this.ubicacionesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUbicaciones() {\n    return this.ubicaciones;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  unidadesColeccion: AngularFirestoreCollection<any>\n  unidades: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.unidadesColeccion = afs.collection<any>('unidades');\n    this.unidades = this.unidadesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUnidades() {\n    return this.unidades;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtYNyuJH5IxYQaG-JX866zpdZ7vT7FIiw\",\n    authDomain: \"grupo360-21212.firebaseapp.com\",\n    databaseURL: \"https://grupo360-21212.firebaseio.com\",\n    projectId: \"grupo360-21212\",\n    storageBucket: \"grupo360-21212.appspot.com\",\n    messagingSenderId: \"42315631196\",\n    appId: \"1:42315631196:web:afc7162df29b7595d43499\",\n    measurementId: \"G-BSEHC8XG3G\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
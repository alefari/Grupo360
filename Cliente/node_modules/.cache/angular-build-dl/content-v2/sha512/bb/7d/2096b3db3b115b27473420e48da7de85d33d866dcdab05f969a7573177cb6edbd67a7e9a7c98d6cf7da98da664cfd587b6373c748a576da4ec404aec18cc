{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/inventario/ingreso/ingreso.component.ts","./src/app/components/inventario/ingreso/ingreso.component.html","./src/app/components/inventario/inventario.component.ts","./src/app/components/inventario/inventario.component.html","./src/app/components/inventario/reingreso/reingreso.component.ts","./src/app/components/inventario/reingreso/reingreso.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/categorias.service.ts","./src/app/services/inventario.service.ts","./src/app/services/ubicaciones.service.ts","./src/app/services/unidades.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\n<!-- <app-login></app-login> -->\n<app-navbar></app-navbar>\n<app-inventario></app-inventario>\n\n<!-- <router-outlet></router-outlet> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { InventarioComponent } from './components/inventario/inventario.component';\n\n// IMPORTACIONES PARA FIREBASE\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { environment } from 'src/environments/environment';\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    InventarioComponent,\n    IngresoComponent,\n    NavbarComponent,\n    ReingresoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\n\r\n// ViewChild del form de ingreso, y funcion inventarioService\r\n\r\nexport class IngresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  nombre = \"\";\r\n  // cantidadItems = 1;\r\n\r\n  nuevosItems: Item[] = [\r\n    {\r\n      nombre: null,\r\n      tipo: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n    }\r\n  ];\r\n\r\n  constructor(private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n//Se agrega nuevoItem al inventario existente, y se borran los campos//\r\n    var item: Item;\r\n    for(item of this.nuevosItems) {\r\n      this.inventarioService.agregarItem(item);\r\n    }\r\n    this.form.reset();\r\n    this.nuevosItems =\r\n    // this.cantidadItems = 1;\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n      }\r\n    ]\r\n  }\r\n\r\n  //Al cerrar el modal, se reinician los campos\r\n  cerrarModal() {\r\n    this.form.reset();\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n      }\r\n    ]\r\n  }\r\n\r\n  repetirNVeces(n: number) {\r\n    return[...Array(+n).keys()];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n      }\r\n    )\r\n    // this.cantidadItems++;\r\n  }\r\n\r\n  restarItem() {\r\n    this.nuevosItems.pop()\r\n    // this.cantidadItems--;\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de ingreso de producto-->\r\n\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\r\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\" *ngFor=\"let item of nuevosItems; let i = index\">\r\n          <!--Nombre de producto-->\r\n            <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-5\">\r\n                <label>Nombre</label>\r\n                <input type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" name=\"nombre\" class=\"form-control\">\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select class=\"form-control\" [(ngModel)]=\"nuevosItems[i].tipo\" name=\"tipo\" #cat=\"ngModel\">\r\n                  <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Serial</label>\r\n                <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" name=\"serial\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"number\" [(ngModel)]=\"nuevosItems[i].cantidad\" name=\"cantidad\" class=\"form-control\">\r\n                  <select type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" name=\"unidades\" class=\"form-control\">\r\n                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" name=\"precio\" class=\"form-control\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-5\">\r\n                <label>Ubicación en almacén</label>\r\n                <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" name=\"ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                  <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div *ngIf=\"cat.value == 'Consumible' || cat.value == 'Producto'\" class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <label>Vencimiento</label>\r\n                  <input class=\"form-control\" [(ngModel)]=\"nuevosItems[i].vencimiento\" name=\"vencimiento\" type=\"date\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n        <hr>\r\n      </div>\r\n\r\n    <!--Footer de Modal con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"agregarItem()\">Más Items</button>\r\n      <button type=\"button\" class=\"btn btn-success\" [disabled]=\"nuevosItems.length == 1\" (click)=\"restarItem()\">Menos Items</button>\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\" data-dismiss=\"modal\">Cerrar</button>\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\" data-dismiss=\"modal\">Ingresar</button>\r\n    </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../models/item.model';\r\nimport { InventarioService } from '../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  inventario: Item[];\r\n  filtroNombre: string = \"\";\r\n  filtroTipo: string = \"\";\r\n\r\n  constructor(private servicioInventario: InventarioService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n\r\n<!--Botones de ingreso y reingreso de productos-->\r\n<div class=\"row\">\r\n  <div class=\"btn-group\">\r\n    <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">Ingreso</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">Reingreso</button>\r\n\r\n  </div>\r\n\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n    <table class=\"table shadow\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\"><input [(ngModel)]=\"filtroNombre\" type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventario\">\r\n          <tr scope=\"row\" *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" class=\"bg-light\">\r\n            <td>{{ item.nombre }}</td>\r\n            <td>{{ item.tipo }}</td>\r\n            <td>{{ item.cantidad }}</td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td>{{ item.estado }}</td>\r\n            <td>\r\n              <button class=\"btn btn-info btn-sm\">Detalles</button>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n\r\n\r\n</div>\r\n  </div>\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-ingreso></app-ingreso>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-reingreso></app-reingreso>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\n//Se declaran las variables a utilizar en reingreso//\r\nexport class ReingresoComponent implements OnInit {\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  idItemElegido: string = null;\r\n  cantidadIngreso: number = 0;\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService)\r\n              { }\r\n\r\n\r\n//Se obtiene inventario en orden alfabetico, y se imprime en la tabla//\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  //Compara items de acuerdo a la seleccion del usuario en el Filtro de la tabla, y guarda el id del item seleccionado//\r\n  buscarIndex(itemElegido: string) {\r\n    this.inventario.findIndex(function(item, index) {\r\n      if(item.id == itemElegido){\r\n        return true;\r\n      }\r\n    })\r\n  }\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  agregarItems() {\r\n    let nuevoItem = this.inventario[this.inventario.findIndex(item => item.id == this.idItemElegido)];\r\n    nuevoItem.cantidad += this.cantidadIngreso;\r\n    this.servicioInventario.editarItem(nuevoItem);\r\n  }\r\n\r\n  regresarIndice() {\r\n     return this.inventario.findIndex(item => item.id == this.idItemElegido);\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"modal-dialog\">\r\n  <div class=\"modal-content\">\r\n\r\n        <!--Modal de reingreso de producto-->\r\n\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\r\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!--Filtro por Tipo de reingreso-->\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n                <label>Categoría</label>\r\n                  <select class=\"form-control\" ngModel name=\"selectTipo\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n            </div>\r\n\r\n            <!--Filtro por Item de reingreso-->\r\n\r\n            <div class=\"col\">\r\n                <label>Item</label>\r\n                <select class=\"form-control\" [(ngModel)]=\"idItemElegido\" name=\"tipo\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                    <option *ngIf=\"item.tipo == selectTipo.value\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                <p *ngIf=\"idItemElegido != null\">{{inventario[regresarIndice()].cantidad}} {{inventario[regresarIndice()].unidades}}</p>\r\n              </div>\r\n              <!--Label e input de cantidad a ingresar (se escribe la cantidad a ingresar)-->\r\n              <div class=\"col\">\r\n                <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                <input type=\"number\" [(ngModel)]=\"cantidadIngreso\" name=\"nombre\" class=\"form-control\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n      <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\"  data-dismiss=\"modal\">Cerrar</button>\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"agregarItems()\" >Ingresar</button>\r\n    </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">GrupoCDV-360</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n      </li>\n    </ul>\n  </div> -->\n</nav>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Categoria } from '../models/categoria.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  categoriasColeccion: AngularFirestoreCollection<Categoria>\n  categorias: Observable<Categoria[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.categoriasColeccion = afs.collection<Categoria>('categoria');\n    this.categorias = this.categoriasColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Categoria;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerCategorias() {\n    return this.categorias;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Item } from '../models/item.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventarioService {\n\n  itemsColeccion: AngularFirestoreCollection<Item>;\n  items: Observable<Item[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n\n    this.itemsColeccion = afs.collection<Item>('inventario');\n    this.items = this.itemsColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Item;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerInventario() {\n    return this.items;\n  }\n\n  agregarItem(nuevoItem: Item) {\n    this.itemsColeccion.add(nuevoItem);\n    console.log(nuevoItem);\n  }\n\n  editarItem(itemEditado: Item) {\n    return this.itemsColeccion.doc(itemEditado.id).update(itemEditado);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UbicacionesService {\n\n  ubicacionesColeccion: AngularFirestoreCollection<any>\n  ubicaciones: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ubicacionesColeccion = afs.collection<any>('ubicaciones');\n    this.ubicaciones = this.ubicacionesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUbicaciones() {\n    return this.ubicaciones;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  unidadesColeccion: AngularFirestoreCollection<any>\n  unidades: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.unidadesColeccion = afs.collection<any>('unidades');\n    this.unidades = this.unidadesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUnidades() {\n    return this.unidades;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtYNyuJH5IxYQaG-JX866zpdZ7vT7FIiw\",\n    authDomain: \"grupo360-21212.firebaseapp.com\",\n    databaseURL: \"https://grupo360-21212.firebaseio.com\",\n    projectId: \"grupo360-21212\",\n    storageBucket: \"grupo360-21212.appspot.com\",\n    messagingSenderId: \"42315631196\",\n    appId: \"1:42315631196:web:afc7162df29b7595d43499\",\n    measurementId: \"G-BSEHC8XG3G\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
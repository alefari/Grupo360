{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-interceptor.service.ts","./src/app/auth/auth.guard.ts","./src/app/auth/auth.service.ts","./src/app/auth/roles.guard.ts","./src/app/auth/user.model.ts","./src/app/modulo_inventario/components/egresar/egresar.component.ts","./src/app/modulo_inventario/components/egresar/egresar.component.html","./src/app/modulo_inventario/components/egresos/egresos.component.ts","./src/app/modulo_inventario/components/egresos/egresos.component.html","./src/app/modulo_inventario/components/ingresar/ingresar.component.ts","./src/app/modulo_inventario/components/ingresar/ingresar.component.html","./src/app/modulo_inventario/components/ingresos/ingresos.component.ts","./src/app/modulo_inventario/components/ingresos/ingresos.component.html","./src/app/modulo_inventario/components/inventario-base/inventario-base.component.ts","./src/app/modulo_inventario/components/inventario-base/inventario-base.component.html","./src/app/modulo_inventario/components/inventario/inventario.component.ts","./src/app/modulo_inventario/components/inventario/inventario.component.html","./src/app/modulo_inventario/components/modificar/modificar.component.ts","./src/app/modulo_inventario/components/modificar/modificar.component.html","./src/app/modulo_inventario/components/reingreso/reingreso.component.ts","./src/app/modulo_inventario/components/reingreso/reingreso.component.html","./src/app/modulo_inventario/inventario-routing.module.ts","./src/app/services/categorias.service.ts","./src/app/services/egresos.service.ts","./src/app/services/eliminados.service.ts","./src/app/services/estados.service.ts","./src/app/services/ingresos.service.ts","./src/app/services/inventario-sql.service.ts","./src/app/services/modalidades.service.ts","./src/app/services/subcategorias.service.ts","./src/app/services/ubicaciones.service.ts","./src/app/services/unidades.service.ts","./src/app/services/usuarios.service.ts","./src/app/shared/login/login.component.ts","./src/app/shared/login/login.component.html","./src/app/shared/menu/menu.component.ts","./src/app/shared/menu/menu.component.html","./src/app/shared/navbar/navbar.component.ts","./src/app/shared/navbar/navbar.component.html","./src/app/shared/sin-auth/sin-auth.component.ts","./src/app/shared/sin-auth/sin-auth.component.html","./src/app/shared/usuario/usuario.component.ts","./src/app/shared/usuario/usuario.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { RolesGuard } from './auth/roles.guard';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { MenuComponent } from './shared/menu/menu.component';\r\nimport { SinAuthComponent } from './shared/sin-auth/sin-auth.component';\r\nimport { UsuarioComponent } from './shared/usuario/usuario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/menu', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'menu', canActivate: [AuthGuard], component: MenuComponent },\r\n  { path: 'usuario/:id', canActivate: [AuthGuard], component: UsuarioComponent },\r\n  { path: 'noAuth', component: SinAuthComponent },\r\n\r\n  {\r\n    path: 'inventario',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import(\"./modulo_inventario/inventario.module\").then(m => m.InventarioModule)\r\n  },\r\n  {\r\n    path: 'procura',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import(\"./modulo_procura/procura.module\").then(m => m.ProcuraModule)\r\n  },\r\n  {\r\n    path: 'administrador',\r\n    canActivate: [AuthGuard, RolesGuard],\r\n    loadChildren: () => import(\"./modulo_administrador/administrador.module\").then(m => m.AdministradorModule),\r\n    data: { allowedRoles: [1] }\r\n  }\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    this.auth.autoLogin()\n  }\n\n}\n","<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './shared/login/login.component';\r\n\r\nimport { NavbarComponent } from './shared/navbar/navbar.component';\r\n\r\n// IMPORT DE ICONOSDE FONTAWESOME\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { InventarioRoutingModule } from './modulo_inventario/inventario-routing.module';\r\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\r\nimport { MenuComponent } from './shared/menu/menu.component';\r\nimport { UsuarioComponent } from './shared/usuario/usuario.component';\nimport { SinAuthComponent } from './shared/sin-auth/sin-auth.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    MenuComponent,\r\n    UsuarioComponent,\r\n    SinAuthComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    InventarioRoutingModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpHandler, HttpHeaders, HttpInterceptor, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { AuthService } from \"./auth.service\";\r\nimport { exhaustMap, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private auth: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return this.auth.user.pipe(\r\n      take(1),\r\n      exhaustMap(user => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n        const modifiedReq = req.clone({\r\n          headers: new HttpHeaders().set('x-access-token', user.token)\r\n        })\r\n        return next.handle(modifiedReq);\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, take } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n    ): boolean | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\r\n      return this.auth.user.pipe(\r\n        take(1),\r\n        map(user => {\r\n          const isAuth = !!user;\r\n          return (isAuth) ? true : this.router.createUrlTree(['/login'])\r\n        }\r\n        ))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\nimport { BehaviorSubject, throwError} from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { User } from './user.model';\r\nimport { Router } from '@angular/router';\r\n\r\ninterface AuthResponseData {\r\n  token: string,\r\n  cedula: number,\r\n  expiresIn: number,\r\n  roles: number[]\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  user = new BehaviorSubject<User>(null);\r\n  private tokenExpirationTimer: any;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  signIn(cedula: number, password: string) {\r\n    return this.http.post<AuthResponseData>(`${this.API_URI}/auth/signin`, { cedula: cedula, password: password })\r\n    .pipe(\r\n      tap(resData => {\r\n        const expirationDate = new Date(new Date().getTime() + +resData.expiresIn * 1000);\r\n        const user = new User(\r\n          resData.cedula,\r\n          resData.token,\r\n          expirationDate,\r\n          resData.roles\r\n        );\r\n        this.user.next(user);\r\n        this.autoLogout(+resData.expiresIn * 1000)\r\n        localStorage.setItem('userData', JSON.stringify(user));\r\n        this.router.navigate(['/menu']);\r\n      })\r\n    )\r\n  }\r\n\r\n  signUp() {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.user.next(null);\r\n    this.router.navigate(['/login']);\r\n    localStorage.removeItem('userData');\r\n    if(this.tokenExpirationTimer) {\r\n      clearTimeout(this.tokenExpirationTimer);\r\n    }\r\n    this.tokenExpirationTimer = null;\r\n  }\r\n\r\n  autoLogout(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expirationDuration);\r\n  }\r\n\r\n  autoLogin() {\r\n    const userData: {\r\n      cedula: number,\r\n      _token: string,\r\n      _tokenExpirationDate: string,\r\n      roles: number[]\r\n    } = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    if(!userData) {\r\n      return;\r\n    }\r\n\r\n    const loadedUser = new User(\r\n      userData.cedula,\r\n      userData._token,\r\n      new Date(userData._tokenExpirationDate),\r\n      userData.roles\r\n    );\r\n\r\n    if(loadedUser.token) {\r\n      this.user.next(loadedUser);\r\n      const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\r\n      this.autoLogout(expirationDuration);\r\n    }\r\n  }\r\n\r\n  changePassword(cedula: number, newPass: string) {\r\n    return this.http.put(`${this.API_URI}/auth/changePassword`, { cedula: cedula, password: newPass });\r\n  }\r\n\r\n  hasPermission(rol: number) {\r\n    if(this.user.value.roles.includes(rol)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const allowedRoles = next.data.allowedRoles;\n    let rolesUser = this.auth.user.getValue().roles;\n    if(allowedRoles.some((r: number)=> rolesUser.includes(r))) {\n      return true;\n    }\n    else {\n      return this.router.createUrlTree(['/noAuth']);\n    }\n  }\n\n}\n","export class User {\r\n\r\n  constructor(\r\n    public cedula: number,\r\n    private _token: string,\r\n    private _tokenExpirationDate: Date,\r\n    public roles: number[]) {\r\n  }\r\n\r\n\r\n  get token() {\r\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//SERVICIOS DE BD\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { Router } from '@angular/router';\r\nimport { asapScheduler } from 'rxjs';\r\nimport { RouterLink } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-egresar',\r\n  templateUrl: './egresar.component.html',\r\n  styleUrls: ['./egresar.component.css']\r\n})\r\n\r\n\r\nexport class EgresarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n   //ICONOS FONTAWESOME\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n    // selectTipo: string;\r\n  // idItemElegidoEgreso: string = null;\r\n\r\n  //VARIABLES QUE CONTINENE INFO DE BD\r\n  inventario: any = [];\r\n  categorias: any = [];\r\n  unidades: any = [];\r\n  ubicaciones: any = [];\r\n  subcategorias: any = [];\r\n  estados: any = [];\r\n  listaEgresos: any = [];\r\n\r\n  cantidadEgreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsEgreso = [\r\n    {id: '', cantidad: +1, obra: null, responsable: null}\r\n  ];\r\n\r\n  constructor(private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioInventario: InventarioSQLService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioEgresos: EgresosService,\r\n              private router: Router,\r\n              private auth: AuthService){ }\r\n\r\n  ngOnInit(): void {\r\n      this.servicioCategorias.getCategorias().subscribe(\r\n        res => {this.categorias = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioSubcategorias.getSubcategorias().subscribe(\r\n        res => {this.subcategorias = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioInventario.getInventario().subscribe(\r\n        res => {this.inventario = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioUnidades.getUnidades().subscribe(\r\n        res => {this.unidades = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioUbicaciones.getUbicaciones().subscribe(\r\n        res => {this.ubicaciones = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioEstados.getEstados().subscribe(\r\n        res => {this.estados = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioEgresos.getEgresos().subscribe(\r\n        res => {this.listaEgresos = res;},\r\n        err => console.log(err));\r\n  }\r\n  //BUSCA ITEM A EGRESAR LUEGO DE HABER SELECCINADO\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsEgreso[indice].id);\r\n  }\r\n\r\n  egresarItems() {\r\n  //CICLO for QUE EGRESA ITEMS MULTIPLES\r\n    for(let itemCiclo of this.idsEgreso) {\r\n\r\n      let itemEgreso = Object.assign({},this.inventario.find(itemInv => itemInv.id == itemCiclo.id));\r\n      let itemListaEgresos = Object.assign({},itemEgreso);\r\n\r\n      //CAMPOS FALTANTES EN EGRESO\r\n      itemListaEgresos.obra = itemCiclo.obra;\r\n      itemListaEgresos.cantidad = itemCiclo.cantidad;\r\n\r\n      itemEgreso.cantidad = itemEgreso.cantidad - itemCiclo.cantidad;\r\n      itemEgreso.cantidadObra = itemEgreso.cantidadObra + itemCiclo.cantidad;\r\n      itemEgreso.categoria = this.categorias.find(cat => cat.nombre == itemEgreso.categoria).id;\r\n      itemEgreso.subcategoria = this.subcategorias.find(subcat => subcat.nombre == itemEgreso.subcategoria).id;\r\n      itemEgreso.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == itemEgreso.ubicacion).id;\r\n      itemEgreso.unidades = this.unidades.find(und => und.nombre == itemEgreso.unidades).id;\r\n      itemEgreso.estado = this.estados.find(est => est.nombre == itemEgreso.estado).id;\r\n\r\n      //COMUNICACION CON SERVICIO (UPDATE)\r\n      this.servicioInventario.updateItem(itemEgreso.id, itemEgreso, true).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          console.log(res[\"text\"]);\r\n          this.registrarEgreso(+itemEgreso.id, itemListaEgresos);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n    this.idsEgreso = [\r\n      {id: \"\", cantidad: 1, responsable: null, obra: null}\r\n    ];\r\n  }\r\n\r\n  //FUNCION QUE REGISTRA EGRESO EN BD CON ID DE ITEM EN INVENTARIO\r\n  registrarEgreso(id: any, itemListaEgresos: any) {\r\n    let egreso = {\r\n      nombre_item_egresado: itemListaEgresos.nombre,\r\n      id_categoria_item_egresado: +this.categorias.find(cat => cat.nombre == itemListaEgresos.categoria).id,\r\n      id_unidad_item_egresado: +this.unidades.find(unid => unid.nombre == itemListaEgresos.unidades).id,\r\n      cantidad: +itemListaEgresos.cantidad,\r\n      obra: itemListaEgresos.obra,\r\n      cedula_responsable_egreso: this.auth.user.getValue().cedula,\r\n    }\r\n    this.servicioEgresos.createEgreso(egreso).subscribe(\r\n      res => { console.log(res); },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n    //FUNCION PARA BORRAR FORMULARIO\r\n    borrarForm() {\r\n      this.form.reset();\r\n      this.idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}]\r\n\r\n      this.router.navigate(['inventario']);\r\n    }\r\n\r\n    //FUNCIONES DE EGRESO MULTIPLE\r\n    agregarItem() {\r\n      this.idsEgreso.push({id: '', cantidad: null, obra: null, responsable: null});\r\n    }\r\n    restarItem() {\r\n      this.idsEgreso.pop();\r\n    }\r\n\r\n    //FUNCIUON QUE REVISA CANTIDAD VALIDA\r\n    revisarCantidad(cantActual: number) {\r\n      for(let item of this.idsEgreso) {\r\n        if(item.cantidad > cantActual || item.cantidad == null || item.cantidad <= 0){\r\n          this.valido = false;\r\n          return;\r\n        }\r\n      }\r\n      this.valido = true;\r\n    }\r\n\r\n    borrarId(indice: number) {\r\n      this.idsEgreso[indice].id = '';\r\n    }\r\n\r\n  }\r\n\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-egresar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Egresar Producto</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                    <div *ngFor=\"let item of idsEgreso; let i=index\">\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Item {{i+1}}</h5>\r\n                        </div>\r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-3 mb-4\">\r\n                                <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select (change)='borrarId(i);' required class=\"form-select mt-2\" ngModel [name]=\"'selectCat'+[i]\" #selectCat=\"ngModel\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectCat.valid && selectCat.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Subcategoría</label>\r\n                                    <select (change)='borrarId(i);' required class=\"form-select mt-2\" ngModel [name]=\"'selectSubcat'+[i]\" #selectSubcat=\"ngModel\">\r\n                                        <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectSubcat.valid && selectSubcat.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Item</label>\r\n                                    <select [(ngModel)]='idsEgreso[i].id' required class=\"form-select mt-2\" [name]=\"'idItem'+[i]\" #selectItem='ngModel'>\r\n                                    <!--FILTRO DE ITEM POR CAT Y SUBCAT-->\r\n                                        <ng-container *ngFor=\"let item of inventario\">\r\n                                        <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                                        <option *ngIf=\"item.categoria == selectCat.value && item.subcategoria == selectSubcat.value && item.estado == 'Disponible'\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                        </ng-container>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectItem.valid && selectItem.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                                </div>\r\n                                <div class=\"col-3 mb-2\">\r\n                                <!--LABEL E INPUT DE CANTIDAD ACTUAL EN INVENTARIO-->\r\n                                    <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                                    <p *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <!--LABEL E INPUT CON CANTIDAD A EGRESAR-->\r\n                                <div class=\"col-4\">\r\n                                        <label for=\"exampleInputEmail1\">Cantidad a egresar</label>\r\n                                        <div class=\"input-group\">\r\n                                        <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\"\r\n                                        onkeypress=\"return event.charCode >= 48\"\r\n                                        min=\"1\"\r\n                                        [max]=\"inventario[regresarIndice(i)].cantidad\" type=\"number\"\r\n                                        [(ngModel)]=\"idsEgreso[i].cantidad\"\r\n                                        [name]=\"'cantidadEgreso'+[i]\"\r\n                                        class=\"form-control mt-2\"\r\n                                        (keyup)='revisarCantidad(inventario[regresarIndice(i)].cantidad)'>\r\n                                        <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\" [placeholder]=\"inventario[regresarIndice(i)].unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label for=\"exampleInputEmail1\">Obra destino</label>\r\n                                    <input [(ngModel)]='idsEgreso[i].obra' [name]=\"'obra'+[i]\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label for=\"exampleInputEmail1\">Responsable</label>\r\n                                    <input [(ngModel)]='idsEgreso[i].responsable' [name]=\"'responsable'+[i]\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <!-- BOTONES DEL FORMULARIO DE EGRESO -->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class='modal-footer'>\r\n                            <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                            </button>\r\n                            <button [hidden]=\"idsEgreso.length == 1\" type=\"button\" class=\"btn btn-secondary\" (click)=\"restarItem()\">\r\n                                <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                            </button>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-warning\"\r\n                                (click)=\"egresarItems()\"\r\n                                [disabled]='!valido || !f.valid'>\r\n                                <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { EgresosService } from '../../../services/egresos.service'\r\nimport { CategoriasService } from '../../../services/categorias.service'\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\n\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-egresos',\r\n  templateUrl: './egresos.component.html',\r\n  styleUrls: ['./egresos.component.css']\r\n})\r\nexport class EgresosComponent implements OnInit {\r\n\r\n  egresos: any = [];\r\n  categorias: any = [];\r\n  oculto = true;\r\n  fechaDesde: Date;\r\n  fechaHasta: string;\r\n  listaEliminados: any =[];\r\n\r\n  faFileDownload = faFileDownload;\r\n  faTimesCircle = faTimesCircle; \r\n\r\n  constructor(private servicioEgresos: EgresosService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioEliminados: EliminadosService) { }\r\n\r\n  ngOnInit(): void {\r\n    // DESCARGA DE INFORMACION DE BD, E INYECCION EN VARIABLES LOCALES\r\n    this.servicioEgresos.getEgresos().subscribe(\r\n      res => {this.egresos = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEliminados.getEliminados().subscribe(\r\n      res => {this.listaEliminados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n    //SE DESCARGA EL PDF DE EGRESOS\r\n    descargarPDF() {\r\n      const opciones = {\r\n        margin: 1,\r\n        filename: 'Egresos.pdf',\r\n        image: {type: 'jpeg', quality: 1},\r\n        html2canvas: {},\r\n        jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n      };\r\n\r\n      const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n      html2pdf()\r\n        .from(contenido)\r\n        .set(opciones)\r\n        .save();\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfEgresos\" class=\"btn btn-warning float-end\">\r\n        <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF</button>\r\n    <div class=\"row\">\r\n        <h1>Egresos</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <table class=\"table shadow table-striped\">\r\n        <!--FILTROS DE LA TABLA DE EGRESOS-->\r\n        <thead class=\"thead bg-warning text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroObra=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por obra\"></th>\r\n            <th scope=\"col\"><input #filtroResponsable=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por responsable\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-warning\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Obra</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Egreso</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--Ng For IMPRIME DATA DE EGRESOS, Y USA FILTROS PARA REDUCIR-->\r\n            <ng-container *ngFor=\"let egreso of egresos\">\r\n\r\n            <tr *ngIf=\"(egreso.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (egreso.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (egreso.responsable.toLocaleLowerCase().includes(filtroResponsable.value.toLowerCase()) || filtroResponsable.value == '')\r\n                &&\r\n                (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLowerCase()) || filtroObra.value == '')\r\n                \"scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td>{{ egreso.nombre | titlecase }} </td>\r\n                <td>{{ egreso.categoria }}</td>\r\n                <td>{{ egreso.cantidad }} {{ egreso.unidad }}</td>\r\n                <td>{{ egreso.obra }}</td>\r\n                <td>{{ egreso.responsable }}</td>\r\n                <td>{{ egreso.fecha | date:'short' }}</td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n\r\n<!--INICIO DE TABLA DE BD ELIMINADOS-->\r\n    <div class=\"row\">\r\n        <h1>Eliminados</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <table class=\"table shadow table-striped\">\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombreEliminados=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre eliminados\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoriaEliminados=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoriaEliinados\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Eliminación</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <ng-container *ngFor=\"let eliminado of listaEliminados\">\r\n            <tr\r\n            *ngIf=\"(\r\n            (eliminado.nombre.toLocaleLowerCase().includes(filtroNombreEliminados.value.toLocaleLowerCase()) || filtroNombreEliminados.value == '')\r\n            &&\r\n            (eliminado.categoria.includes(filtroCategoriaEliminados.value)|| filtroCategoriaEliminados.value == null))\"\r\n            scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td> {{ eliminado.nombre | titlecase }} </td>\r\n                <td> {{ eliminado.categoria }} </td>\r\n                <td> {{ eliminado.cantidad }} {{ eliminado.unidad }} </td>\r\n                <td> {{ eliminado.responsable }} </td>\r\n                <td> {{ eliminado.fecha | date:'short'}} </td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n<!-- FIN TABLA DE ELIMINADOS -->\r\n\r\n<!-- MODAL PDF EGRESOS -->\r\n<div class=\"modal fade\" id=\"pdfEgresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n            <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-warning\">\r\n                <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n        </div>\r\n        <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n            <h4>Egresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n                <thead class=\"thead bg-warning\">\r\n                <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Categoría</th>\r\n                    <th scope=\"col\">Cantidad</th>\r\n                    <th scope=\"col\">Obra</th>\r\n                    <th scope=\"col\">Responsable</th>\r\n                    <th scope=\"col\">Fecha Egreso</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n                <ng-container *ngFor=\"let egreso of egresos\">\r\n                    <tr>\r\n                    <td>{{ egreso.nombre | titlecase }}</td>\r\n                    <td>{{ egreso.categoria }}</td>\r\n                    <td>{{ egreso.cantidad }} {{ egreso.unidad }}</td>\r\n                    <td>{{ egreso.obra }}</td>\r\n                    <td>{{ egreso.responsable }}</td>\r\n                    <td>{{ egreso.fecha | date:'short' }}</td>\r\n                </tr>\r\n                </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//SERVICIOS BD\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingresar',\r\n  templateUrl: './ingresar.component.html',\r\n  styleUrls: ['./ingresar.component.css']\r\n})\r\n\r\nexport class IngresarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  itemExistenteVar: boolean[] = [];\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faSignInAlt = faSignInAlt;\r\n\r\n  respuesta: any;\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  inventario: any = [];\r\n  nombre = \"\";\r\n  valido: boolean = true;\r\n\r\n  nuevosItems: any[] = [\r\n    {\r\n      id: null,\r\n      nombre: null,\r\n      categoria: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n  idItem: any;\r\n\r\n  constructor(private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private inventarioService: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private ingresosService: IngresosService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => this.categorias = res,\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => this.subcategorias = res,\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => this.ubicaciones = res,\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => this.unidades = res,\r\n      err => console.log(err)\r\n    );\r\n    this.inventarioService.getInventario().subscribe(\r\n      res => this.inventario = res,\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let indice: number = 0;\r\n    for(var item of this.nuevosItems) {\r\n\r\n      if(!this.itemExistenteVar[indice]) {\r\n        this.inventarioService.createItem(item).subscribe(\r\n          res => {\r\n            console.log(res[\"text\"]);\r\n            this.registrarIngreso(res[\"id\"], item, 1);\r\n          },\r\n          err => { console.log(err); }\r\n        );\r\n      }\r\n\r\n      else if (this.itemExistenteVar[indice]) {\r\n        let itemOriginal = this.inventario.find(itemInventario => itemInventario.id == item.id);\r\n\r\n        let itemModificar = {\r\n          cantidad: itemOriginal.cantidad + item.cantidad,\r\n          precio: itemOriginal.precio + item.precio,\r\n          descripcion: this.nuevosItems[indice].descripcion\r\n        };\r\n        this.inventarioService.updateItem(itemOriginal.id, itemModificar, false).subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.registrarIngreso(item.id, {cantidad: item.cantidad, precio: item.precio, categoria: item.categoria, unidades: item.unidades, nombre:item.nombre}, 3);\r\n          },\r\n          err => { console.log(err); }\r\n        );\r\n      }\r\n      indice++;\r\n    }\r\n    this.router.navigate(['inventario']);\r\n    }\r\n\r\n    registrarIngreso(id: any, item: any, modalidad: number) {\r\n      let ingreso = {\r\n        nombre_item_ingresado: item.nombre,\r\n        id_categoria_item_ingresado: +item.categoria,\r\n        id_unidad_item_ingresado: +item.unidades,\r\n        id_modalidad: +modalidad,\r\n        cantidad: +item.cantidad,\r\n        cedula_responsable_ingreso: this.auth.user.getValue().cedula,\r\n        precio: +item.precio\r\n      }\r\n      this.ingresosService.createIngreso(ingreso).subscribe(\r\n        res => { console.log(res); },\r\n        err => { console.log(err); }\r\n      );\r\n    }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevosItems = [{nombre: null,\r\n                        categoria: null,\r\n                        cantidad: null,\r\n                        ubicacion: null,\r\n                        vencimiento: null,\r\n                        serial: null,\r\n                        precio: null,\r\n                        unidades: null,\r\n                        estado: \"Disponible\"}];\r\n    this.router.navigate(['inventario']);\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        categoria: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.nuevosItems){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  regresarItem(id: any) {\r\n    return this.inventario.find(itemInv => itemInv.id == id);\r\n  }\r\n\r\n  actDescripcion(valor: any, index: number) {\r\n    this.nuevosItems[index].descripcion = valor.target.value;\r\n  }\r\n\r\n}\r\n","<div class=\"margin-top-form\">\r\n  <div class=\"container\">\r\n    <div class=\"body form-body-style\">\r\n      <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Ingreso</h3>\r\n        </div>  \r\n      </div>\r\n      <div class=\"container pe-5 ps-5 pt-2\">\r\n        <form #f=\"ngForm\">\r\n          <div class=\"pt-2\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n              <!-- <h3>Item {{i+1}}</h3> -->\r\n              <div class=\"form-check form-switch\">\r\n                <input class=\"form-check-input\" #itemExistente=\"ngModel\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" [(ngModel)]='itemExistenteVar[i]' [name]=\"'checkboxExistente' + [i]\">\r\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\"></label>\r\n                <strong>Item Existente</strong>\r\n              </div>\r\n                <!--Nombre de producto-->\r\n                <div *ngIf=\"!itemExistenteVar[i]\" class=\"\">\r\n                  <div class=\"row mt-3 mb-4\">\r\n                    <div class=\"col-4\">\r\n                        <label>Nombre</label>\r\n                        <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" [name]=\"'nombre' + [i]\" class=\"form-control mt-2\">\r\n                        <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <!--Label y Select del tipo de producto-->\r\n                      <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                      <select #cat=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].categoria\" [name]=\"'cat' + [i]\">\r\n                        <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.id }}\">{{ categoria.nombre }}</option>\r\n                      </select>\r\n                      <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                      <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                        <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.id }}\">{{ subcategoria.nombre }}</option>\r\n                      </select>\r\n                      <small *ngIf=\"!subcat.valid && subcat.touched\" class=\"text-danger\">Ingrese una subcategoria.<br></small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label>Serial</label>\r\n                      <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" [name]=\"'serial' + [i]\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label>Precio</label>\r\n                      <div class=\"input-group\">\r\n                      <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control mt-2\">\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text mt-2\" id=\"basic-addon1\">$</span>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                <div class=\"row mb-4\">\r\n                  <div class=\"col-3\">\r\n                    <!--Cantidad de producto-->\r\n                    <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        #cantidad=\"ngModel\"\r\n                        required\r\n                        type=\"number\"\r\n                        [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                        [name]=\"'cantidad' + [i]\"\r\n                        class=\"form-control mt-2\"\r\n                        (keyup)='revisarCantidad()'>\r\n                      <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" [name]=\"'unidades' + [i]\" class=\"form-select mt-2\">\r\n                        <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                      </select>\r\n                    </div>\r\n                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                    <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <label>Ubicación en almacén</label>\r\n                    <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" [name]=\"'ubicacion' + [i]\" class=\"form-select mt-2\" aria-describedby=\"emailHelp\">\r\n                      <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.id }}\">{{ ubicacion.nombre }}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-2\" >\r\n                    <div class=\"form-group\">\r\n                      <label>Vencimiento</label>\r\n                      <input class=\"form-control mt-2\" [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-5\">\r\n                    <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                    <div class=\"form-group\">\r\n                      <label>Descripción</label>\r\n                      <input class=\"form-control mt-2\" >\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n\r\n                <!-- INICIO DEL FORM DE ITEM EXISTENTE -->\r\n                <div *ngIf=\"itemExistenteVar[i]\">\r\n                <div class=\"row mt-3 mb-3\">\r\n                  <div class=\"col-3\">\r\n                    <!--Label y Select del tipo de producto-->\r\n                    <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                    <select #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].categoria\" [name]=\"'cat' + [i]\">\r\n                      <ng-container *ngFor=\"let categoria of categorias\">\r\n                        <option value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                      </ng-container>\r\n\r\n                    </select>\r\n                    <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                    <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                      <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.nombre }}\">{{ subcategoria.nombre }}</option>\r\n                    </select>\r\n                    <small *ngIf=\"!subcat.valid && subcat.touched\" class=\"text-danger\">Ingrese una subcategoria.<br></small>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <label>Nombre</label>\r\n                    <select #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].id\" [name]=\"'nombre' + [i]\" class=\"form-select mt-2\">\r\n                      <ng-container *ngFor=\"let item of inventario\">\r\n                        <option *ngIf=\"item.categoria == cat.value && item.subcategoria == subcat.value\" value=\"{{ item.id }}\">{{ item.nombre }}</option>\r\n                      </ng-container>\r\n                    </select>\r\n                      <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Seleccione un nombre.</small>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                  <div class=\"col-3\">\r\n                    <!--Cantidad de producto-->\r\n                    <label for=\"exampleInputPassword1\">Cantidad a Ingresar</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        #cantidad=\"ngModel\"\r\n                        required\r\n                        type=\"number\"\r\n                        [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                        [name]=\"'cantidad' + [i]\"\r\n                        class=\"form-control mt-2\"\r\n                        (keyup)='revisarCantidad()'>\r\n                        <input *ngIf=\"nombre.value != undefined\" [placeholder]=\"regresarItem(nombre.value).unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                    </div>\r\n                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <label>Precio</label>\r\n                    <div class=\"input-group\">\r\n                    <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control mt-2\">\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text mt-2\" id=\"basic-addon1\">$</span>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                      <label>Vencimiento</label>\r\n                      <input class=\"form-control mt-2\" disabled [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n                  </div>\r\n                  <div class=\"col-5\">\r\n                    <label>Descripción</label>\r\n                    <input\r\n                      class=\"form-control mt-2\"\r\n                      [ngModel]=\"((nombre.value != undefined) ? regresarItem(nombre.value).descripcion : '')\"\r\n                      [name]=\"'descripcion' + [i]\"\r\n                      (keyup)=\"actDescripcion($event, i)\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n\r\n        <!--Footer de Modal con botones de cerrar e ingresar-->\r\n        <div class=\"form-footer-style\">\r\n          <div class=\"modal-footer\">\r\n                <div class=\"btn-group\">\r\n                    <button disabled type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                      <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                    </button>\r\n                    <button type=\"button\" [hidden]=\"nuevosItems.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" disabled (click)=\"nuevosItems.pop()\">\r\n                      <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                    </button>\r\n                </div>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                      <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                    </button>\r\n                    <!-- !f.valid significa cuando el form no sea valido -->\r\n                    <button [disabled]='!f.valid || !valido' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n                      <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n                  </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { ModalidadesService } from 'src/app/services/modalidades.service';\r\n\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-ingresos',\r\n  templateUrl: './ingresos.component.html',\r\n  styleUrls: ['./ingresos.component.css']\r\n})\r\nexport class IngresosComponent implements OnInit {\r\n  ingresos: any = [];\r\n  categorias: any = [];\r\n  modalidades: any = [];\r\n  oculto = true;\r\n  fechaDesde: Date;\r\n  fechaHasta: Date;\r\n\r\n  faFileDownload = faFileDownload;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  constructor(private servicioIngresos: IngresosService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioModalidades: ModalidadesService) {\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    // DESCARGA DE INFORMACION DE BD, E INYECCION EN VARIABLES LOCALES\r\n    this.servicioIngresos.getIngresos().subscribe(\r\n      res => {this.ingresos = res;},\r\n      err => console.log(err));\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioModalidades.getModalidades().subscribe(\r\n      res => {this.modalidades = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION DESCARGAR PDF DE INGRESOS\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Ingresos.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  dateAString(date: Date) {\r\n    let stringFecha: string = \"\";\r\n    stringFecha += date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getUTCDate();\r\n    console.log(stringFecha);\r\n    return stringFecha;\r\n  }\r\n\r\n    //FUNCIONES DE FILTRO POR FECHA (NO SIRVIERON)\r\n  changeFirstInput(e){\r\n    this.fechaDesde = e.target.value;\r\n    console.log(this.ingresos.filter(o => new Date(o.date) >= this.fechaDesde &&\r\n                                      new Date(o.date) <= this.fechaHasta  ));\r\n  }\r\n  changeSecondInput(e){\r\n    this.fechaHasta = e.target.value;\r\n    console.log(this.ingresos.filter(o => new Date(o.date) >= this.fechaDesde &&\r\n                                      new Date(o.date) <= this.fechaHasta  ));\r\n  } \r\n}\r\n","<div class=\"container\">\r\n  <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfIngresos\" class=\"btn btn-primary float-end\">\r\n    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF </button>\r\n  <div class=\"row\">\r\n    <h1>Ingresos</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!--Tabla de inventario en donde se muestra el inventario general-->\r\n      <table class=\"table shadow table-striped\">\r\n        <thead data-html2canvas-ignore class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n              </select>\r\n            </th>\r\n            <th></th>\r\n            <th colspan=\"3\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">Desde:</div>\r\n                <!--FILTRO POR FECHAS DE TABLA DE INGRESOS-->\r\n                <div class=\"col\">\r\n                  <input [(ngModel)]=\"fechaDesde\"\r\n                  (change)=\"changeFirstInput($event)\"\r\n                  class=\"form-control form-control-sm\" type=\"date\" value=\"\"\r\n                  name=\"fechaDesde\"></div>\r\n                <div class=\"col-2\">Hasta:</div>\r\n                <div class=\"col\"><input [(ngModel)]=\"fechaHasta\" class=\"form-control form-control-sm\" type=\"date\" [value]=\"fechaHasta\" name=\"fechaHasta\"></div>\r\n              </div>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <select #filtroModalidad=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroModalidad\">\r\n              <option value=\"\">Modalidad (Todas)</option>\r\n              <option *ngFor=\"let mod of modalidades\" [value]=\"mod.nombre\">{{ mod.nombre }}</option>\r\n              </select>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Fecha Ingreso</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Modalidad</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n          <ng-container *ngFor=\"let ingreso of ingresos\">\r\n            <tr *ngIf=\"(ingreso.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n            &&\r\n            (ingreso.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n            &&\r\n            (ingreso.modalidad.toLocaleLowerCase().includes(filtroModalidad.value.toLowerCase()) || filtroModalidad.value == '')\r\n            \"scope=\"row\" class=\"bg-light linea-tabla\">\r\n              <td>{{ ingreso.nombre | titlecase }}</td>\r\n              <td>{{ ingreso.categoria }}</td>\r\n              <td>{{ ingreso.cantidad }} {{ ingreso.unidad }}</td>\r\n              <td>\r\n                <div *ngIf=\"ingreso.precio != null && ingreso.precio != 0 && ingreso.modalidad != 'Reingreso'; else sinPrecio\">\r\n                  {{ ingreso.precio | currency }}\r\n                </div>\r\n                <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                <ng-template #sinPrecio>\r\n                  N/A\r\n                </ng-template>\r\n              </td>\r\n              <td>{{ ingreso.fecha | date:'dd-MM-yyyy h:m a'}}</td>\r\n              <td>{{ ingreso.responsable | titlecase }}</td>\r\n              <td>{{ ingreso.modalidad }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL PDF -->\r\n<div class=\"modal fade\" id=\"pdfIngresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n          <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-header\">\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Ingresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-primary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                  <th scope=\"col\">Responsable</th>\r\n                  <th scope=\"col\">Modalidad</th>\r\n                  <th scope=\"col\">Fecha Ingreso</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <ng-container *ngFor=\"let ingreso of ingresos\">\r\n                  <tr>\r\n                    <td>{{ ingreso.nombre | titlecase }}</td>\r\n                    <td>{{ ingreso.categoria }}</td>\r\n                    <td>{{ ingreso.cantidad }} {{ ingreso.unidad }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"ingreso.precio != null && ingreso.precio != 0 && ingreso.modalidad != 'Reingreso'; else sinPrecio\">\r\n                        {{ ingreso.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n                    <td>{{ ingreso.responsable }}</td>\r\n                    <td>{{ ingreso.modalidad }}</td>\r\n                    <td>{{ ingreso.fecha | date:'short'}}</td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventario-base',\n  templateUrl: './inventario-base.component.html',\n  styleUrls: ['./inventario-base.component.css']\n})\nexport class InventarioBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../inventario-models/item.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n// IMPORTS DE BD\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n  faSearch = faSearch;\r\n  faFileDownload = faFileDownload;\r\n\r\n  oculto = true;\r\n\r\n  datosInfo: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    unidades: null,\r\n    ubicacion: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n  }\r\n\r\n  itemBorrar = {\r\n    id: null,\r\n    nombre: null\r\n  }\r\n\r\n  //VARIABLE PARA HACER LAS BUSQUEDA POR ID DEL ITEM DE AVERIA\r\n  idItemElegido:string = null;\r\n\r\n  filtroTipo: string = \"\";\r\n\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  estados: any = [];\r\n  unidades: any = [];\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEliminados: EliminadosService,\r\n              public auth: AuthService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {\r\n        this.inventarioSQL = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {\r\n        this.categorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {\r\n        this.subcategorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {\r\n        this.ubicaciones = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {\r\n        this.estados = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {\r\n        this.unidades = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  //RECIBE EL ITEM DE LA FILA, E IMPRIME DICHOS DATOS EN UNA VARIABLE\r\n  asignarDetalles(item: Item) {\r\n    this.datosInfo = item;\r\n  }\r\n\r\n  // ASIGNA LOS DATOS DEL ITEM A BORRAR EN LA VARIABLE itemBorrar\r\n  asignarBorrar(id, nombre) {\r\n    this.itemBorrar.id = id;\r\n    this.itemBorrar.nombre = nombre;\r\n  }\r\n  // ELIMINA EL ITEM SELECCIONADO DE LA BD CUANDO EL USUARIO ACEPTA EN EL MODAL\r\n  eliminarItem() {\r\n\r\n    this.servicioInventarioSQL.deleteItem(this.itemBorrar.id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n      let eliminacion = {\r\n        nombre: this.itemBorrar.nombre,\r\n        cantidad: +this.inventarioSQL.find(item => item.id == this.itemBorrar.id).cantidad,\r\n        cedula_responsable_eliminado: +10470050,\r\n        id_categoria: +this.categorias.find(categoria => categoria.nombre == this.inventarioSQL.find(item => item.id == this.itemBorrar.id).categoria).id,\r\n        id_unidad: +this.unidades.find(unidad => unidad.nombre == this.inventarioSQL.find(item => item.id == this.itemBorrar.id).unidades).id,\r\n      }\r\n      // COMUNICACION CON EL SERVICIO QUE INSERTA ELIMINADO EN BD\r\n      this.servicioEliminados.createEliminado(eliminacion).subscribe(\r\n        res => { console.log(res); },\r\n        err => { console.log(err); }\r\n      );\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE INVENTARIO\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Inventario.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n<!--Botones de ingreso y reingreso de productos-->\r\n  <div class=\"row px-4\">\r\n    <div class=\"container mt-lg-2\">\r\n      <h1>Inventario</h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"row px-4\">\r\n    <div class=\"mb-2\">\r\n      <div class=\"btn-group float-end\">\r\n        <button type=\"button\" class=\"btn btn-success cool-btn\" routerLink='ingresar'>\r\n          <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-info cool-btn text-white\" routerLink='reingreso' >\r\n          <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Reingreso\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-warning cool-btn\" routerLink='egresar'>\r\n          <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egreso\r\n        </button>\r\n        <button *ngIf=\"auth.hasPermission(1)\" type=\"button\" class=\"btn btn-primary text-white cool-btn\" routerLink='modificar'>\r\n          <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n        </button>\r\n        <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfInventario\" class=\"btn btn-secondary float-right\">\r\n          <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF\r\n        </button>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row px-4\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-sm shadow table-striped\">\r\n      <thead class=\"table-dark \">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\">\r\n            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n          </th>\r\n          <th scope=\"col\">\r\n            <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\">\r\n            <select #filtroUbicacion=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroUbicacion\">\r\n              <option value=\"\">Ubicación (Todas)</option>\r\n              <option *ngFor=\"let ubicacion of ubicaciones\" [value]=\"ubicacion.nombre\">{{ ubicacion.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Subcategoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!-- *ngIf=\"(item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase() || item.tipo == filtroCategoria.value)) || filtroNombre.value == ''\" -->\r\n\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventarioSQL\">\r\n          <ng-container *ngIf=\"item.cantidad != 0\">\r\n            <tr\r\n              class=\"table-sm\"\r\n              scope=\"row\"\r\n              *ngIf=\"(\r\n                (item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (item.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (item.ubicacion == filtroUbicacion.value || filtroUbicacion.value == '')\r\n              )\"\r\n            class=\"bg-light linea-tabla\">\r\n            <td>{{ item.nombre | titlecase }}</td>\r\n            <td>{{ item.categoria }}</td>\r\n            <td>{{ item.subcategoria }}</td>\r\n            <td><span [ngClass]=\"{'text-danger': item.estado=='En Obra'}\">{{ item.cantidad }} {{ item.unidades }}</span></td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible',\r\n                            'text-danger': item.estado=='Dañado',\r\n                            'text-info': item.estado=='En Obra'}\"> <span *ngIf=\"item.estado=='En Obra'\">{{ item.cantidadObra }}</span> {{ item.estado }}</td>\r\n            <td>\r\n              <div class=\"btn-group\">\r\n                <button (click)=\"asignarDetalles(item)\" type=\"button\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Detalles\r\n              </button>\r\n              <button *ngIf=\"auth.hasPermission(1)\" (click)=\"asignarBorrar(item.id, item.nombre)\" type=\"button\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Eliminar\r\n              </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </ng-container>\r\n\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n</div>\r\n\r\n<!-- INICIO MODAL ELIMINAR -->\r\n<div class=\"modal\" tabindex=\"-1\" id=\"modalEliminar\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-danger\">\r\n        <h5 class=\"modal-title text-white\">Eliminar Item</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>¿Estás seguro que deseas eliminar <strong>{{ itemBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n        <button (click)=\"eliminarItem()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR -->\r\n\r\n<!-- MODAL DE INFO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n          <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.id }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.serial != null\">\r\n                <th>Serial</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.serial }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Categoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.categoria }}</td>\r\n              </tr>\r\n              <tr>\r\n              <tr>\r\n                <th>Subcategoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.subcategoria }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidad }} {{datosInfo.unidades }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.cantidadObra != null && datosInfo.cantidadObra !=0\">\r\n                <th>Cantidad en Obra</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidadObra }} {{datosInfo.unidades }} en obra</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.ubicacion != null\">\r\n                <th>Ubicación</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.ubicacion }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.estado != null\">\r\n                <th>Estado</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.estado }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.vencimiento != null\">\r\n                <th>Vencimiento</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.vencimiento | date}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.precio != null\">\r\n                <th>Precio</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.precio |currency}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.descripcion != null\">\r\n                <th>Descripcion</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.descripcion | lowercase}}</td>\r\n              </tr>\r\n              <tr><th></th><td></td><td></td></tr>\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO -->\r\n</div>\r\n\r\n<!-- MODAL PDF DE INVENTARIO-->\r\n<div class=\"modal fade\" id=\"pdfInventario\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n          <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Inventario</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-secondary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <ng-container *ngFor=\"let itemPDF of inventarioSQL\">\r\n                  <ng-container *ngIf=\"itemPDF.cantidad != 0\">\r\n                  <tr>\r\n                    <td>{{ itemPDF.nombre }}</td>\r\n                    <td>{{ itemPDF.categoria }}</td>\r\n                    <td>{{ itemPDF.cantidad }} {{ itemPDF.unidades }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"itemPDF.precio != null; else sinPrecio\">\r\n                        {{ itemPDF.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n                  </tr>\r\n                </ng-container>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { Categoria } from 'src/app/modulo_inventario/inventario-models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\n\r\n// IMPORTS DE BD\r\nimport { InventarioSQLService } from '../../../services/inventario-sql.service';\r\nimport { CategoriasService } from '../../../services/categorias.service';\r\nimport { UbicacionesService } from '../../../services/ubicaciones.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modificar',\r\n  templateUrl: './modificar.component.html',\r\n  styleUrls: ['./modificar.component.css']\r\n})\r\nexport class ModificarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  //VARIABLES QUE CONTIENEN BASES DE DATOS\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n    private servicioCategorias: CategoriasService,\r\n    private servicioSubcategorias: SubcategoriasService,\r\n    private servicioUbicaciones: UbicacionesService,\r\n    private servicioUnidades: UnidadesService,\r\n    private servicioEstados: EstadosService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {this.inventarioSQL = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n    //ENCUENTRA EL ID DEL ITEM A MODIFICAR\r\n  alElegirItem(idItem: string) {\r\n    // this.itemElegido = this.inventarioSQL.find(item => item.id == idItem);\r\n    this.itemElegido = Object.assign({}, this.inventarioSQL.find(item => item.id == idItem));\r\n  }\r\n\r\n  onModificar() {\r\n    this.itemElegido.categoria = this.categorias.find(cat => cat.nombre == this.itemElegido.categoria).id;\r\n    this.itemElegido.subcategoria = this.subcategorias.find(subcat => subcat.nombre == this.itemElegido.subcategoria).id;\r\n    this.itemElegido.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == this.itemElegido.ubicacion).id;\r\n    this.itemElegido.unidades = this.unidades.find(und => und.nombre == this.itemElegido.unidades).id;\r\n    this.itemElegido.estado = this.estados.find(est => est.nombre == this.itemElegido.estado).id;\r\n\r\n    this.servicioInventarioSQL.updateItem(this.itemElegido.id, this.itemElegido, true).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate(['inventario']);\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-modificar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Modificar</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-3'>\r\n                <form #f=\"ngForm\">\r\n                    <div class=\"container \">\r\n                        <h5>Seleccione el item a modificar:</h5>\r\n                    </div> \r\n                    <div class=\"container\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select class=\"form-select mt-2\" ngModel required name=\"selectCategoriaModificar\" #selectCategoriaModificar=\"ngModel\">\r\n                                <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectCategoriaModificar.valid && selectCategoriaModificar.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Subcategoría</label>\r\n                                <select class=\"form-select mt-2\" ngModel required name=\"selectSubcategoriaModificar\" #selectSubcategoriaModificar=\"ngModel\">\r\n                                <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.nombre }}\">{{ subcategoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectSubcategoriaModificar.valid && selectSubcategoriaModificar.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <label>Item</label>\r\n                                <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class=\"form-select mt-2\" ngModel required name=\"item\" #selectItemModif='ngModel'>\r\n                                <ng-container *ngFor=\"let item of inventarioSQL\">\r\n                                    <option\r\n                                    *ngIf=\"item.categoria == selectCategoriaModificar.value &&\r\n                                    item.subcategoria == selectSubcategoriaModificar.value\"\r\n                                    value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                    </ng-container>\r\n                                </select>\r\n                                <small *ngIf=\"!selectItemModif.valid && selectItemModif.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                            </div>\r\n                        </div>\r\n                    <hr>\r\n                    <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS-->\r\n                    <div class=\"container mt-2\">\r\n                        <h5>Modifique los datos que desee:</h5>\r\n                    </div> \r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Nombre</label>\r\n                                <input required type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.nombre\"\r\n                                name=\"nombre\" class=\"form-control mt-2\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select required class=\"form-select mt-2\"\r\n                                [(ngModel)]=\"itemElegido.categoria\"\r\n                                name=\"categoria\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Subcategoría</label>\r\n                                <select required class=\"form-select mt-2\"\r\n                                [(ngModel)]=\"itemElegido.subcategoria\"\r\n                                name=\"subcategoria\">\r\n                                    <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Precio</label>\r\n                                <input onkeypress=\"return event.charCode > 48\" min=\"0\" type=\"number\"\r\n                                [(ngModel)]=\"itemElegido.precio\"\r\n                                name=\"precio\" class=\"form-control mt-2\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Cantidad y Unidades</label>\r\n                                <div class=\"input-group\">\r\n                                    <input onkeypress=\"return event.charCode > 48\" min=\"1\" [(ngModel)]=\"itemElegido.cantidad\" type=\"number\" name=\"cantidad\" class=\"form-control mt-2\">\r\n                                    <select type=\"text\" placeholder=\":itemElegido.unidad\"  name=\"unidades\" [(ngModel)]=\"itemElegido.unidades\" class=\"form-select mt-2\">\r\n                                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Ubicación</label>\r\n                                <select type=\"text\" name=\"ubicacion\" [(ngModel)]=\"itemElegido.ubicacion\" class=\"form-select mt-2\" aria-describedby=\"emailHelp\">\r\n                                    <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Estado</label>\r\n                                <select type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.estado\"\r\n                                name=\"estado\" class=\"form-select mt-2\">\r\n                                    <option *ngFor='let estado of estados' value=\"{{ estado.nombre }}\">{{ estado.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <label>Serial</label>\r\n                                <input type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.serial\"\r\n                                name=\"serial\" class=\"form-control mt-2\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-9\">\r\n                                <label>Descripción</label>\r\n                                <input\r\n                                class=\"form-control mt-2\"\r\n                                [(ngModel)]=\"itemElegido.descripcion\"\r\n                                [name]=\"'descripcion'\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Fecha de Vencimiento</label>\r\n                                <input class=\"form-control mt-2\"\r\n                                [(ngModel)]=\"itemElegido.vencimiento\"\r\n                                name=\"vencimiento\" type=\"date\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--BOTONES FUNCIONES MODIFICAR-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button (click)=\"borrarForm()\" type=\"button\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid' (click)=\"onModificar()\" type=\"button\" class=\"btn btn-primary text-white\">\r\n                                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { Categoria } from 'src/app/modulo_inventario/inventario-models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Ingreso } from 'src/app/modulo_inventario/inventario-models/ingreso.model';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\nexport class ReingresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  inventario: any = [];\r\n  categorias: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n  ubicaciones: any = [];\r\n  subcategorias: any = [];\r\n  cantidadIngreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsReingreso = [\r\n    {id: \"\", cantidad: 1}\r\n  ];\r\n\r\n  constructor(private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioInventario: InventarioSQLService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioIngresos: IngresosService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioInventario.getInventario().subscribe(\r\n      res => {this.inventario = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},);\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsReingreso[indice].id);\r\n  }\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  reingresarItems() {\r\n    for(let item of this.idsReingreso) {\r\n      let nuevoItem = Object.assign({},this.inventario.find(itemInv => itemInv.id == item.id));\r\n      let itemListaIngresos = Object.assign({},nuevoItem);\r\n\r\n      if(item.cantidad == nuevoItem.cantidadObra) {\r\n        nuevoItem.estado = \"Disponible\";\r\n        nuevoItem.cantidadObra = 0;\r\n      }\r\n      else if(item.cantidad < nuevoItem.cantidadObra){\r\n        nuevoItem.estado = \"En Obra\";\r\n        nuevoItem.cantidadObra -= item.cantidad;\r\n      }\r\n\r\n      //CAMPOS FALTANTES EN INGRESO\r\n      itemListaIngresos.cantidad = item.cantidad;\r\n\r\n      nuevoItem.cantidad += item.cantidad;\r\n      nuevoItem.categoria = this.categorias.find(cat => cat.nombre == nuevoItem.categoria).id;\r\n      nuevoItem.subcategoria = this.subcategorias.find(subcat => subcat.nombre == nuevoItem.subcategoria).id;\r\n      nuevoItem.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == nuevoItem.ubicacion).id;\r\n      nuevoItem.unidades = this.unidades.find(und => und.nombre == nuevoItem.unidades).id;\r\n      nuevoItem.estado = this.estados.find(est => est.nombre == nuevoItem.estado).id;\r\n\r\n      this.servicioInventario.updateItem(nuevoItem.id, nuevoItem, true).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          console.log(res[\"text\"]);\r\n          this.registrarIngreso(+nuevoItem.id, itemListaIngresos);\r\n        },\r\n        err => {console.log(err);}\r\n      );\r\n\r\n    }\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n  }\r\n\r\n  // FUNCION QUE REGISTRA REINGRESO EN BD DE INGRESOS\r\n  registrarIngreso(id: any, itemListaIngresos){\r\n    let ingreso = {\r\n      nombre_item_ingresado: itemListaIngresos.nombre,\r\n      id_categoria_item_ingresado: +this.categorias.find(cat => cat.nombre == itemListaIngresos.categoria).id,\r\n      id_unidad_item_ingresado: +this.unidades.find(und => und.nombre == itemListaIngresos.unidades).id,\r\n      id_modalidad: +2,\r\n      cantidad: +itemListaIngresos.cantidad,\r\n      cedula_responsable_ingreso: this.auth.user.getValue().cedula,\r\n      precio: +itemListaIngresos.precio\r\n    }\r\n    this.servicioIngresos.createIngreso(ingreso).subscribe(\r\n      res => { console.log(res); },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n    this.router.navigate(['inventario']);\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsReingreso.push({id: \"\", cantidad: 1});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsReingreso.pop();\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.idsReingreso){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  restaurarValor(i: number) {\r\n    this.idsReingreso[i].cantidad = 1;\r\n    this.revisarCantidad();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"margin-top-form\">\r\n  <div class=\"container\">\r\n    <div class=\"body form-body-style\">\r\n      <div class=\"container pt-3 form-header-style header-color-reingreso\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Reingreso</h3>\r\n        </div>  \r\n      </div>\r\n      <div class='container pe-5 ps-5 pt-2'>\r\n        <form #f=\"ngForm\">\r\n          <div *ngFor=\"let item of idsReingreso; let i=index\">\r\n            <div class=\"container mt-2\">\r\n              <h5>Item {{i+1}}</h5>\r\n            </div>\r\n            <div class=\"container\">\r\n              <div class=\"row mt-3 mb-4\">\r\n                  <div class=\"col-2\">\r\n                      <label>Categoría</label>\r\n                        <select (change)=\"restaurarValor(i)\" required class=\"form-select mt-2\" ngModel [name]=\"'selectTipo'+[i]\" #selectCategoria=\"ngModel\">\r\n                          <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                        <small *ngIf=\"!selectCategoria.valid && selectCategoria.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                      <label>Subcategoria</label>\r\n                        <select required class=\"form-select mt-2\" ngModel [name]=\"'selectSubcategoria'+[i]\" #selectSubcategoria=\"ngModel\">\r\n                          <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                        </select>\r\n                        <small *ngIf=\"!selectSubcategoria.valid && selectSubcategoria.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                      <label>Item</label>\r\n                      <select #itemSelect=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"idsReingreso[i].id\" [name]=\"'selectId'+[i]\">\r\n                        <!--NGFOR QUE IMPRIME ITEMS DE BD-->\r\n                        <ng-container *ngFor=\"let item of inventario\">\r\n                          <!--FILTRO POR CATEGORIA DE ITEMS BD-->\r\n                          <ng-container *ngIf=\"item.categoria == selectCategoria.value && item.subcategoria == selectSubcategoria.value\">\r\n                            <option *ngIf=\"(item.categoria == 'Herramienta' && item.estado == 'En Obra') || (item.categoria != 'Herramienta')\" value='{{ item.id }}'>{{ item.nombre }}</option>\r\n                          </ng-container>\r\n                        </ng-container>\r\n                      </select>\r\n                      <small *ngIf=\"!itemSelect.valid && itemSelect.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <!--INPUT DE CANTIDAD (MUESTRA CANTIDAD EXISTENTE)-->\r\n                    <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                    <p *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\">{{ inventario[regresarIndice(i)].cantidad }} {{ inventario[regresarIndice(i)].unidades }}</p>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <!--INPUT DE CANTIDAD (INGRESO DE CANTIDAD)-->\r\n                    <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\"\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        type=\"number\"\r\n                        (keyup)='revisarCantidad()'\r\n                        [(ngModel)]=\"idsReingreso[i].cantidad\"\r\n                        [name]=\"'cantidad'+[i]\"\r\n                        class=\"form-control mt-2\">\r\n                        <input *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\" [placeholder]=\"inventario[regresarIndice(i)].unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--BOTONES DE FUNCIONES REINGRESO-->\r\n            <div class=\"form-footer-style\">\r\n              <div class=\"modal-footer\">\r\n                <div class=\"btn-group\">\r\n                  <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                  </button>\r\n                  <button type=\"button\" [hidden]=\"idsReingreso.length == 1\" class=\"btn btn-secondary\" [disabled]=\"idsReingreso.length == 1\" (click)=\"restarItem()\">\r\n                    <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                  </button>\r\n                </div>\r\n                  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                    <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                  </button>\r\n                  <button [disabled]='!valido || !f.valid' type=\"button\" class=\"btn btn-info text-white\" (click)=\"reingresarItems()\">\r\n                    <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n                  </button>\r\n              </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EgresarComponent } from './components/egresar/egresar.component';\r\nimport { EgresosComponent } from './components/egresos/egresos.component';\r\nimport { IngresarComponent } from './components/ingresar/ingresar.component';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\nimport { InventarioBaseComponent } from './components/inventario-base/inventario-base.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport { ModificarComponent } from './components/modificar/modificar.component';\r\nimport { ReingresoComponent } from './components/reingreso/reingreso.component';\r\n\r\nconst inventarioRoutes: Routes = [\r\n  { path: '', component: InventarioBaseComponent,\r\n    children: [\r\n      { path: '', component: InventarioComponent },\r\n      { path: 'egresar', component: EgresarComponent},\r\n      { path: 'egresos', component: EgresosComponent },\r\n      { path: 'ingresar', component: IngresarComponent},\r\n      { path: 'ingresos', component: IngresosComponent },\r\n      { path: 'reingreso', component: ReingresoComponent},\r\n      { path: 'modificar', component: ModificarComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(inventarioRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InventarioRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getCategorias() {\n    return this.http.get(`${this.API_URI}/categorias`);\n  }\n\n  getCategoria(id: string) {\n    return this.http.get(`${this.API_URI}/categorias/${id}`);\n  }\n\n  createCategoria(categoria: any) {\n    return this.http.post(`${this.API_URI}/categorias`, categoria);\n  }\n\n  deleteCategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/categorias/${id}`);\n  }\n\n  updateCategoria(id: string, categoria: string) {\n    return this.http.put(`${this.API_URI}/categorias/${id}`, categoria);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EgresosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEgresos() {\r\n    return this.http.get(`${this.API_URI}/egresos`);\r\n  }\r\n\r\n  // getItem(id: string) {\r\n  //   return this.http.get(`${this.API_URI}/herramientas/${id}`);\r\n  // }\r\n\r\n  createEgreso(egreso: any) {\r\n    return this.http.post(`${this.API_URI}/egresos`, egreso);\r\n  }\r\n\r\n  deleteEgreso(id: string) {\r\n    return this.http.delete(`${this.API_URI}/egresos/${id}`);\r\n  }\r\n\r\n  updateEgreso(id: string, egreso: any) {\r\n    return this.http.put(`${this.API_URI}/egresos/${id}`, egreso);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EliminadosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEliminados() {\r\n    return this.http.get(`${this.API_URI}/eliminados`);\r\n  }\r\n\r\n  createEliminado(eliminado: any) {\r\n    return this.http.post(`${this.API_URI}/eliminados`, eliminado);\r\n  }\r\n\r\n  deleteEliminado(id: string) {\r\n    return this.http.delete(`${this.API_URI}/eliminados/${id}`);\r\n  }\r\n\r\n  updateEliminado(id: string, eliminado: any) {\r\n    return this.http.put(`${this.API_URI}/eliminados/${id}`, eliminado);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstadosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEstados() {\r\n    return this.http.get(`${this.API_URI}/estados`);\r\n  }\r\n\r\n  getEstado(id: string) {\r\n    return this.http.get(`${this.API_URI}/estados/${id}`);\r\n  }\r\n\r\n  createEstado(estado: string) {\r\n    return this.http.post(`${this.API_URI}/estados`, estado);\r\n  }\r\n\r\n  deleteEstado(id: string) {\r\n    return this.http.delete(`${this.API_URI}/estados/${id}`);\r\n  }\r\n\r\n  updateEstado(id: string, estado: string) {\r\n    return this.http.put(`${this.API_URI}/estados/${id}`, estado);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Ingreso } from '../modulo_inventario/inventario-models/ingreso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getIngresos() {\n    return this.http.get(`${this.API_URI}/ingresos`);\n  }\n\n  // getItem(id: string) {\n  //   return this.http.get(`${this.API_URI}/herramientas/${id}`);\n  // }\n\n  createIngreso(ingreso: any) {\n    return this.http.post(`${this.API_URI}/ingresos`, ingreso);\n  }\n\n  deleteItem(id: string) {\n    return this.http.delete(`${this.API_URI}/ingresos/${id}`);\n  }\n\n  updateItem(id: string, ingreso: any) {\n    return this.http.put(`${this.API_URI}/ingresos/${id}`, ingreso);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Item } from '../modulo_inventario/inventario-models/item.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class InventarioSQLService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  getInventario() {\r\n    return this.http.get(`${this.API_URI}/herramientas`);\r\n  }\r\n\r\n  getItem(id: string) {\r\n    return this.http.get(`${this.API_URI}/herramientas/${id}`);\r\n  }\r\n\r\n  createItem(item: Item) {\r\n    let nuevoItem = {\r\n      nombre: item.nombre,\r\n      id_categoria: +item.categoria,\r\n      id_subcategoria: +item.subcategoria,\r\n      cantidad: item.cantidad,\r\n      id_unidad: +item.unidades,\r\n      id_ubicacion: +item.ubicacion,\r\n      id_estado: 1,\r\n      vencimiento: item.vencimiento,\r\n      serial: item.serial,\r\n      precio: item.precio,\r\n      descripcion: item.descripcion,\r\n      cantidadObra: item.cantidadObra\r\n    }\r\n    return this.http.post(`${this.API_URI}/herramientas`, nuevoItem);\r\n  }\r\n\r\n  deleteItem(id: string) {\r\n    return this.http.delete(`${this.API_URI}/herramientas/${id}`);\r\n  }\r\n\r\n  updateItem(id: string, item: any, full: boolean=true) {\r\n\r\n    if(full){\r\n      let nuevoItem = {\r\n        nombre: item.nombre,\r\n        id_categoria: +item.categoria,\r\n        id_subcategoria: +item.subcategoria,\r\n        cantidad: item.cantidad,\r\n        id_unidad: +item.unidades,\r\n        id_ubicacion: +item.ubicacion,\r\n        id_estado: +item.estado,\r\n        vencimiento: item.vencimiento,\r\n        serial: item.serial,\r\n        precio: item.precio,\r\n        descripcion: item.descripcion,\r\n        cantidadObra: item.cantidadObra\r\n      }\r\n      return this.http.put(`${this.API_URI}/herramientas/${id}`, nuevoItem);\r\n    }\r\n    else {\r\n      return this.http.put(`${this.API_URI}/herramientas/${id}`, item);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalidadesService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getModalidades() {\r\n    return this.http.get(`${this.API_URI}/modalidades`);\r\n  }\r\n\r\n  getModadlidad(id: string) {\r\n    return this.http.get(`${this.API_URI}/modalidades/${id}`);\r\n  }\r\n\r\n  createModalidad(modalidad: string) {\r\n    return this.http.post(`${this.API_URI}/modalidades`, modalidad);\r\n  }\r\n\r\n  deleteModalidad(id: string) {\r\n    return this.http.delete(`${this.API_URI}/modalidades/${id}`);\r\n  }\r\n\r\n  updateModalidad(id: string, modalidad: string) {\r\n    return this.http.put(`${this.API_URI}/modalidades/${id}`, modalidad);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubcategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getSubcategorias() {\n    return this.http.get(`${this.API_URI}/subcategorias`);\n  }\n\n  getSubcategoria(id: string) {\n    return this.http.get(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  createSubcategoria(subcategoria: any) {\n    return this.http.post(`${this.API_URI}/subcategorias`, subcategoria);\n  }\n\n  deleteSubcategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  updateSubcategoria(id: string, subcategoria: string) {\n    return this.http.put(`${this.API_URI}/subcategorias/${id}`, subcategoria);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UbicacionesService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUbicaciones() {\r\n    return this.http.get(`${this.API_URI}/ubicaciones`);\r\n  }\r\n\r\n  getUbicacion(id: string) {\r\n    return this.http.get(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  createUbicacion(categoria: any) {\r\n    return this.http.post(`${this.API_URI}/ubicaciones`, categoria);\r\n  }\r\n\r\n  deleteUbicacion(id: string) {\r\n    return this.http.delete(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  updateUbicacion(id: string, categoria: string) {\r\n    return this.http.put(`${this.API_URI}/ubicaciones/${id}`, categoria);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getUnidades() {\n    return this.http.get(`${this.API_URI}/unidades`);\n  }\n\n  getUnidad(id: string) {\n    return this.http.get(`${this.API_URI}/unidades/${id}`);\n  }\n\n  createUnidad(unidad: any) {\n    return this.http.post(`${this.API_URI}/unidades`, unidad);\n  }\n\n  deleteUnidad(id: string) {\n    return this.http.delete(`${this.API_URI}/unidades/${id}`);\n  }\n\n  updateUnidad(id: string, unidad: string) {\n    return this.http.put(`${this.API_URI}/unidades/${id}`, unidad);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuariosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsuarios() {\r\n    return this.http.get(`${this.API_URI}/empleados`);\r\n  }\r\n\r\n  getUsuario(id: string) {\r\n    return this.http.get(`${this.API_URI}/empleados/${id}`);\r\n  }\r\n\r\n  // createUsuario(categoria: any) {\r\n  //   return this.http.post(`${this.API_URI}/ubicaciones`, categoria);\r\n  // }\r\n\r\n  // deleteUbicacion(id: string) {\r\n  //   return this.http.delete(`${this.API_URI}/ubicaciones/${id}`);\r\n  // }\r\n\r\n  updateUsuario(id: string, usuario: string) {\r\n    return this.http.put(`${this.API_URI}/empleados/${id}`, usuario);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  isLoading = false;\r\n  error: string = null;\r\n\r\n  constructor(private router: Router, private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if(!form.valid) {\r\n      return;\r\n    }\r\n    this.error = null;\r\n    const cedula = form.value.cedula;\r\n    const password = form.value.password;\r\n\r\n    this.isLoading = true;\r\n\r\n    this.auth.signIn(cedula, password).subscribe(\r\n      resData => {\r\n        this.isLoading = false;\r\n      }, errorRes => {\r\n        this.error = 'Error: ' + errorRes.error.message;\r\n        this.isLoading = false;\r\n      });\r\n      form.reset();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row d-flex justify-content-center\">\r\n    <div class=\"col-10 col-sm-8 col-md-6 col-lg-5 col-xl-4 shadow mt-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col shadow bg-white d-flex justify-content-center\">\r\n          <div class=\"pt-4 pb-4\">\r\n            <img src=\"../../../assets/logo-gris.svg\" style=\"max-width: 450px; width: 100%\" class=\"card-img-top\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row bg-white\">\r\n        <div class=\"col\">\r\n          <div class=\"px-3 pt-2 pb-4\">\r\n\r\n            <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n              <p>{{ error }}</p>\r\n            </div>\r\n\r\n            <div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\r\n              <div\r\n                style=\"text-align: center; width: 3rem; height: 3rem;\"\r\n                class=\"spinner-border text-primary align-self-center\"\r\n                role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n\r\n          <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\r\n          <h5 class=\"mt-3 pb-1\">Inicia Sesión</h5>\r\n\r\n          <div class=\"pb-2\">\r\n            <label>Número de Cédula</label>\r\n            <input type=\"text\" class=\"form-control\" required ngModel name=\"cedula\">\r\n          </div>\r\n\r\n          <div class=\"pb-3\">\r\n            <label>Contraseña</label>\r\n            <input type=\"password\" class=\"form-control\" required ngModel name=\"password\">\r\n          </div>\r\n          <div class=\"pt-2 pb-3\">\r\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\r\n            <button type=\"submit\" [disabled]='!this.authForm.valid' class=\"btn btn-success float-end\">Ingresar</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit(): void {\n    // this.userSub = this.auth.user.subscribe(user => {\n    //   this.isAuthenticated = !!user;\n    //   // EQUIVALENTE A this.isAuthenticated = !user ? false : true;\n    // });\n  }\n\n}\n","<div class=\"container\">\r\n  <section>\r\n    <div class=\"content\">\r\n        <div class=\"row mb-3\">\r\n            <h2>Bienvenido, seleccione el módulo al que desee acceder</h2>\r\n        </div>\r\n    </div>\r\n  </section>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 text-center\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-lg-4 col-md-12 mb-4\">\r\n            <div class=\"card-section border rounded p-3 bg-white\">\r\n              <div class=\"card-header-style-within header-color-inventario rounded pb-5\">\r\n                <h2 class=\"card-header-title text-white text-center pt-3\">Inventario</h2>\r\n              </div>\r\n              <div class=\"card-body text-center\">\r\n                <h5 class=\"card-title\">Módulo de gestión de inventario</h5>\r\n                  <p class=\"card-text\">El usuario podrá realizar todas las <br> acciones referentes a los procesos de <br> gestión de inventario.</p>\r\n                  <a class=\"btn btn-color-inventario card-btn text-decoration-none\" routerLink='/inventario'>Continuar</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12 mb-4\" *ngIf=\"auth.hasPermission(1)\">\r\n            <div class=\"card-section border rounded p-3 bg-white\">\r\n              <div class=\"card-header-style-within header-color-administrador rounded pb-5\">\r\n                <h2 class=\"card-header-title text-white text-center pt-3\">Administrador</h2>\r\n              </div>\r\n              <div class=\"card-body text-center\">\r\n                <h5 class=\"card-title\">Módulo de administración</h5>\r\n                  <p class=\"card-text\">El usuario podrá realizar todas las <br>acciones referentes a los procesos de <br> administracion del sistema.</p>\r\n                  <a class=\"btn btn-color-administrador card-btn text-decoration-none\" routerLink='/administrador'>Continuar</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12 mb-4\">\r\n            <div class=\"card-section border rounded p-3 bg-white\">\r\n              <div class=\"card-header-style-within header-color-procura rounded pb-5\">\r\n                <h2 class=\"card-header-title text-white text-center pt-3\">Procura</h2>\r\n              </div>\r\n              <div class=\"card-body text-center\">\r\n                <h5 class=\"card-title\">Módulo de procura</h5>\r\n                  <p class=\"card-text\">El usuario podrá realizar todas las acciones referentes a los procesos de <br> abastecimientos de la empresa.</p>\r\n                  <a class=\"btn btn-color-procura card-btn text-decoration-none\" routerLink='/procura'>Continuar</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faWarehouse, faUsersSlash, faHome, faSignInAlt, faSignOutAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n  isAuthenticated = false;\r\n  private userSub: Subscription;\r\n  cedulaUser:number = null;\r\n\r\n    faWarehouse = faWarehouse;\r\n    faSignInAlt = faSignInAlt;\r\n    faSignOutAlt = faSignOutAlt;\r\n    faUser = faUser;\r\n    faHome = faHome;\r\n\r\n  constructor(private auth: AuthService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSub = this.auth.user.subscribe(user => {\r\n      this.isAuthenticated = !!user;\r\n      // EQUIVALENTE A this.isAuthenticated = !user ? false : true;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n  alPerfil() {\r\n    this.router.navigate([`usuario/${this.auth.user.getValue().cedula}`]);\r\n  }\r\n\r\n  onLogout() {\r\n    this.auth.logout();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand ps-5\" href=\"#\">\r\n      <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid me-2\" style=\"max-width: 50px; width: 100%; margin: 0; padding: 0\">\r\n      <strong> GrupoCDV</strong>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li class=\"nav-item ms-5\" *ngIf=\"isAuthenticated\">\r\n        <a class=\"nav-link\" routerLink=\"/menu\"> <fa-icon [icon]=\"faHome\"></fa-icon> Menú <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"d-flex\">\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('inventario')\">\r\n              <a class=\"nav-link\" routerLink=\"/inventario\"> <fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario <span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li class=\"nav-item me-2 \" *ngIf=\"isAuthenticated && router.url.includes('inventario')\">\r\n              <a class=\"nav-link\" routerLink=\"/inventario/ingresos\"> <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresos </a>\r\n            </li>\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('inventario')\">\r\n              <a class=\"nav-link\" routerLink=\"/inventario/egresos\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresos</a>\r\n            </li>\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('administrador')\">\r\n              <a class=\"nav-link\" routerLink=\"/administrador\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Menú Administrador</a>\r\n            </li>\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('procura')\">\r\n              <a class=\"nav-link\" routerLink=\"/procura\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Menú Procura</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown mx-5 pe-5\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <fa-icon [icon]=\"faUser\"></fa-icon> Usuario\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a role=\"button\" class=\"dropdown-item\" (click)='alPerfil()'>Perfil</a></li>\r\n                <li><hr class=\"dropdown-divider\"></li>\r\n                <li><a role=\"button\" class=\"dropdown-item\" (click)='onLogout()'>Cerrar Sesión</a></li>\r\n              </ul>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sin-auth',\n  templateUrl: './sin-auth.component.html',\n  styleUrls: ['./sin-auth.component.css']\n})\nexport class SinAuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    No tienes autrización\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\n\r\n@Component({\r\n  selector: 'app-usuario',\r\n  templateUrl: './usuario.component.html',\r\n  styleUrls: ['./usuario.component.css']\r\n})\r\nexport class UsuarioComponent implements OnInit {\r\n\r\n  cedula = null;\r\n  usuario = null;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private servicioUsuarios: UsuariosService,\r\n              private auth: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cedula = this.route.snapshot.params['id'];\r\n    this.servicioUsuarios.getUsuario(this.cedula).subscribe(\r\n      res => {\r\n        this.usuario = res[0];\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  changePass(form: NgForm) {\r\n    this.auth.changePassword(this.cedula, form.value.password).subscribe(\r\n      resData => {\r\n        console.log(resData);\r\n        form.reset();\r\n      }, errorRes => {\r\n        console.log(errorRes);\r\n      });;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <div *ngIf=\"usuario\" class=\"card shadow\">\n        <div class=\"card-header bg-info\">\n          <h5>Información personal</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5 col-lg-3\">\n              <img src=\"../../../assets/profileGeneric.png\" alt=\"profileGeneric\">\n            </div>\n\n            <div class=\"col\">\n              <h1>{{ usuario.nombre | titlecase }} {{ usuario.apellido | titlecase}}</h1>\n              <h2>{{ usuario.cargo | titlecase }}</h2> <br>\n              <h4>{{ cedula }}</h4>\n              <h4>{{ usuario.correo }}</h4>\n            </div>\n            <div class=\"col-3\">\n              <h5>Permisos</h5>\n              <ul>\n                <li>Inventario</li>\n                <li>Administración</li>\n              </ul>\n              <button type=\"button\" class=\"btn btn-warning\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Cambiar contraseña</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header bg-warning\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Cambiar contraseña</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <form #passForm=\"ngForm\" (ngSubmit)=\"changePass(passForm)\">\n        <div class=\"modal-body\">\n          <div class=\"mb-3\">\n            <label for=\"exampleFormControlInput1\" class=\"form-label\">Nueva contraseña:</label>\n            <input #pass=\"ngModel\" ngModel required type=\"password\" class=\"form-control\" id=\"contrasena\" name=\"password\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"exampleFormControlInput1\" class=\"form-label\">Repita la contraseña:</label>\n            <input #pass2=\"ngModel\" ngModel required type=\"password\" class=\"form-control\" id=\"contrasena2\" name=\"password2\">\n          </div>\n          <p *ngIf=\"this.pass.dirty && this.pass2.dirty  && (this.pass.value != this.pass2.value)\" class=\"text-danger\">Las contraseñas no coinciden</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n          <button [disabled]='!this.passForm.valid || (this.pass.value != this.pass2.value)' type=\"submit\" class=\"btn btn-warning\">Guardar nueva contraseña</button>\n        </div>\n      </form>\n\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  dirBackend: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
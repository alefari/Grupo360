{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.service.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/roles.guard.ts","webpack:///src/app/auth/user.model.ts","webpack:///src/app/modulo_inventario/components/egresar/egresar.component.ts","webpack:///src/app/modulo_inventario/components/egresar/egresar.component.html","webpack:///src/app/modulo_inventario/components/egresos/egresos.component.ts","webpack:///src/app/modulo_inventario/components/egresos/egresos.component.html","webpack:///src/app/modulo_inventario/components/ingresar/ingresar.component.ts","webpack:///src/app/modulo_inventario/components/ingresar/ingresar.component.html","webpack:///src/app/modulo_inventario/components/ingresos/ingresos.component.ts","webpack:///src/app/modulo_inventario/components/ingresos/ingresos.component.html","webpack:///src/app/modulo_inventario/components/inventario-base/inventario-base.component.ts","webpack:///src/app/modulo_inventario/components/inventario-base/inventario-base.component.html","webpack:///src/app/modulo_inventario/components/inventario/inventario.component.ts","webpack:///src/app/modulo_inventario/components/inventario/inventario.component.html","webpack:///src/app/modulo_inventario/components/modificar/modificar.component.ts","webpack:///src/app/modulo_inventario/components/modificar/modificar.component.html","webpack:///src/app/modulo_inventario/components/reingreso/reingreso.component.ts","webpack:///src/app/modulo_inventario/components/reingreso/reingreso.component.html","webpack:///src/app/modulo_inventario/inventario-routing.module.ts","webpack:///src/app/services/categorias.service.ts","webpack:///src/app/services/egresos.service.ts","webpack:///src/app/services/eliminados.service.ts","webpack:///src/app/services/estados.service.ts","webpack:///src/app/services/ingresos.service.ts","webpack:///src/app/services/inventario-sql.service.ts","webpack:///src/app/services/modalidades.service.ts","webpack:///src/app/services/subcategorias.service.ts","webpack:///src/app/services/ubicaciones.service.ts","webpack:///src/app/services/unidades.service.ts","webpack:///src/app/services/usuarios.service.ts","webpack:///src/app/shared/login/login.component.ts","webpack:///src/app/shared/login/login.component.html","webpack:///src/app/shared/menu/menu.component.ts","webpack:///src/app/shared/menu/menu.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/sin-auth/sin-auth.component.ts","webpack:///src/app/shared/sin-auth/sin-auth.component.html","webpack:///src/app/shared/usuario/usuario.component.ts","webpack:///src/app/shared/usuario/usuario.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","loadChildren","m","InventarioModule","ProcuraModule","AdministradorModule","data","allowedRoles","AppRoutingModule","forRoot","preloadingStrategy","imports","AppComponent","auth","autoLogin","selector","templateUrl","styleUrls","AppModule","provide","useClass","multi","declarations","providers","bootstrap","AuthInterceptorService","next","user","pipe","handle","modifiedReq","clone","headers","set","token","AuthGuard","router","route","isAuth","createUrlTree","providedIn","AuthService","http","API_URI","dirBackend","cedula","password","post","resData","expirationDate","Date","getTime","expiresIn","roles","autoLogout","localStorage","setItem","JSON","stringify","navigate","removeItem","tokenExpirationTimer","clearTimeout","expirationDuration","setTimeout","logout","userData","parse","getItem","loadedUser","_token","_tokenExpirationDate","newPass","put","rol","value","includes","RolesGuard","state","rolesUser","getValue","some","r","User","EgresarComponent","servicioCategorias","servicioSubcategorias","servicioUbicaciones","servicioUnidades","servicioInventario","servicioEstados","servicioEgresos","faSignOutAlt","faTimesCircle","faMinusCircle","faPlusCircle","inventario","categorias","unidades","ubicaciones","subcategorias","estados","listaEgresos","cantidadEgreso","valido","idsEgreso","cantidad","obra","responsable","getCategorias","subscribe","res","err","console","log","getSubcategorias","getInventario","getUnidades","getUbicaciones","getEstados","getEgresos","indice","findIndex","item","itemCiclo","itemEgreso","Object","assign","find","itemInv","itemListaEgresos","cantidadObra","categoria","cat","nombre","subcategoria","subcat","ubicacion","ubic","und","estado","est","updateItem","registrarEgreso","form","reset","egreso","nombre_item_egresado","id_categoria_item_egresado","id_unidad_item_egresado","unid","cedula_responsable_egreso","createEgreso","push","pop","cantActual","agregarItem","restarItem","borrarForm","egresarItems","EgresosComponent","servicioEliminados","egresos","oculto","listaEliminados","faFileDownload","getEliminados","opciones","margin","filename","image","type","quality","html2canvas","jsPDF","unit","format","orientation","contenido","document","getElementById","from","save","descargarPDF","IngresarComponent","inventarioService","ingresosService","itemExistenteVar","faSignInAlt","nuevosItems","vencimiento","serial","precio","createItem","registrarIngreso","itemOriginal","itemInventario","itemModificar","descripcion","modalidad","ingreso","nombre_item_ingresado","id_categoria_item_ingresado","id_unidad_item_ingresado","id_modalidad","cedula_responsable_ingreso","createIngreso","valor","index","target","onSubmit","IngresosComponent","servicioIngresos","servicioModalidades","ingresos","modalidades","getIngresos","getModalidades","date","stringFecha","getFullYear","getMonth","getUTCDate","fechaDesde","filter","o","fechaHasta","changeFirstInput","InventarioBaseComponent","InventarioComponent","servicioInventarioSQL","faExclamationCircle","faPencilAlt","faInfoCircle","faSearch","datosInfo","itemBorrar","idItemElegido","filtroTipo","inventarioSQL","deleteItem","eliminacion","cedula_responsable_eliminado","id_categoria","id_unidad","unidad","createEliminado","eliminarItem","ModificarComponent","itemElegido","fecha","idItem","alElegirItem","onModificar","ReingresoComponent","cantidadIngreso","idsReingreso","nuevoItem","itemListaIngresos","i","revisarCantidad","reingresarItems","inventarioRoutes","children","InventarioRoutingModule","forChild","CategoriasService","get","EgresosService","EliminadosService","eliminado","EstadosService","IngresosService","InventarioSQLService","id_subcategoria","id_ubicacion","id_estado","full","ModalidadesService","SubcategoriasService","UbicacionesService","UnidadesService","UsuariosService","usuario","LoginComponent","isLoading","error","valid","signIn","errorRes","message","MenuComponent","NavbarComponent","isAuthenticated","cedulaUser","faWarehouse","faUser","faHome","userSub","unsubscribe","SinAuthComponent","UsuarioComponent","servicioUsuarios","snapshot","params","getUsuario","changePassword","changePass","environment","production","bootstrapModule"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { RolesGuard } from './auth/roles.guard';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { MenuComponent } from './shared/menu/menu.component';\r\nimport { SinAuthComponent } from './shared/sin-auth/sin-auth.component';\r\nimport { UsuarioComponent } from './shared/usuario/usuario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/menu', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'menu', canActivate: [AuthGuard], component: MenuComponent },\r\n  { path: 'usuario/:id', canActivate: [AuthGuard], component: UsuarioComponent },\r\n  { path: 'noAuth', component: SinAuthComponent },\r\n\r\n  {\r\n    path: 'inventario',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import(\"./modulo_inventario/inventario.module\").then(m => m.InventarioModule)\r\n  },\r\n  {\r\n    path: 'procura',\r\n    canActivate: [AuthGuard],\r\n    loadChildren: () => import(\"./modulo_procura/procura.module\").then(m => m.ProcuraModule)\r\n  },\r\n  {\r\n    path: 'administrador',\r\n    canActivate: [AuthGuard, RolesGuard],\r\n    loadChildren: () => import(\"./modulo_administrador/administrador.module\").then(m => m.AdministradorModule),\r\n    data: { allowedRoles: [1] }\r\n  }\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules})],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    this.auth.autoLogin()\n  }\n\n}\n","<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './shared/login/login.component';\r\n\r\nimport { NavbarComponent } from './shared/navbar/navbar.component';\r\n\r\n// IMPORT DE ICONOSDE FONTAWESOME\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { InventarioRoutingModule } from './modulo_inventario/inventario-routing.module';\r\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\r\nimport { MenuComponent } from './shared/menu/menu.component';\r\nimport { UsuarioComponent } from './shared/usuario/usuario.component';\nimport { SinAuthComponent } from './shared/sin-auth/sin-auth.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    MenuComponent,\r\n    UsuarioComponent,\r\n    SinAuthComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    InventarioRoutingModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpHandler, HttpHeaders, HttpInterceptor, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { AuthService } from \"./auth.service\";\r\nimport { exhaustMap, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private auth: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return this.auth.user.pipe(\r\n      take(1),\r\n      exhaustMap(user => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n        const modifiedReq = req.clone({\r\n          headers: new HttpHeaders().set('x-access-token', user.token)\r\n        })\r\n        return next.handle(modifiedReq);\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, take } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n    ): boolean | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\r\n      return this.auth.user.pipe(\r\n        take(1),\r\n        map(user => {\r\n          const isAuth = !!user;\r\n          return (isAuth) ? true : this.router.createUrlTree(['/login'])\r\n        }\r\n        ))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\nimport { BehaviorSubject, throwError} from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { User } from './user.model';\r\nimport { Router } from '@angular/router';\r\n\r\ninterface AuthResponseData {\r\n  token: string,\r\n  cedula: number,\r\n  expiresIn: number,\r\n  roles: number[]\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  user = new BehaviorSubject<User>(null);\r\n  private tokenExpirationTimer: any;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  signIn(cedula: number, password: string) {\r\n    return this.http.post<AuthResponseData>(`${this.API_URI}/auth/signin`, { cedula: cedula, password: password })\r\n    .pipe(\r\n      tap(resData => {\r\n        const expirationDate = new Date(new Date().getTime() + +resData.expiresIn * 1000);\r\n        const user = new User(\r\n          resData.cedula,\r\n          resData.token,\r\n          expirationDate,\r\n          resData.roles\r\n        );\r\n        this.user.next(user);\r\n        this.autoLogout(+resData.expiresIn * 1000)\r\n        localStorage.setItem('userData', JSON.stringify(user));\r\n        this.router.navigate(['/menu']);\r\n      })\r\n    )\r\n  }\r\n\r\n  signUp() {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.user.next(null);\r\n    this.router.navigate(['/login']);\r\n    localStorage.removeItem('userData');\r\n    if(this.tokenExpirationTimer) {\r\n      clearTimeout(this.tokenExpirationTimer);\r\n    }\r\n    this.tokenExpirationTimer = null;\r\n  }\r\n\r\n  autoLogout(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expirationDuration);\r\n  }\r\n\r\n  autoLogin() {\r\n    const userData: {\r\n      cedula: number,\r\n      _token: string,\r\n      _tokenExpirationDate: string,\r\n      roles: number[]\r\n    } = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    if(!userData) {\r\n      return;\r\n    }\r\n\r\n    const loadedUser = new User(\r\n      userData.cedula,\r\n      userData._token,\r\n      new Date(userData._tokenExpirationDate),\r\n      userData.roles\r\n    );\r\n\r\n    if(loadedUser.token) {\r\n      this.user.next(loadedUser);\r\n      const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\r\n      this.autoLogout(expirationDuration);\r\n    }\r\n  }\r\n\r\n  changePassword(cedula: number, newPass: string) {\r\n    return this.http.put(`${this.API_URI}/auth/changePassword`, { cedula: cedula, password: newPass });\r\n  }\r\n\r\n  hasPermission(rol: number) {\r\n    if(this.user.value.roles.includes(rol)) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const allowedRoles = next.data.allowedRoles;\n    let rolesUser = this.auth.user.getValue().roles;\n    if(allowedRoles.some((r: number)=> rolesUser.includes(r))) {\n      return true;\n    }\n    else {\n      return this.router.createUrlTree(['/noAuth']);\n    }\n  }\n\n}\n","export class User {\r\n\r\n  constructor(\r\n    public cedula: number,\r\n    private _token: string,\r\n    private _tokenExpirationDate: Date,\r\n    public roles: number[]) {\r\n  }\r\n\r\n\r\n  get token() {\r\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//SERVICIOS DE BD\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { Router } from '@angular/router';\r\nimport { asapScheduler } from 'rxjs';\r\nimport { RouterLink } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-egresar',\r\n  templateUrl: './egresar.component.html',\r\n  styleUrls: ['./egresar.component.css']\r\n})\r\n\r\n\r\nexport class EgresarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n   //ICONOS FONTAWESOME\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n    // selectTipo: string;\r\n  // idItemElegidoEgreso: string = null;\r\n\r\n  //VARIABLES QUE CONTINENE INFO DE BD\r\n  inventario: any = [];\r\n  categorias: any = [];\r\n  unidades: any = [];\r\n  ubicaciones: any = [];\r\n  subcategorias: any = [];\r\n  estados: any = [];\r\n  listaEgresos: any = [];\r\n\r\n  cantidadEgreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsEgreso = [\r\n    {id: '', cantidad: +1, obra: null, responsable: null}\r\n  ];\r\n\r\n  constructor(private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioInventario: InventarioSQLService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioEgresos: EgresosService,\r\n              private router: Router,\r\n              private auth: AuthService){ }\r\n\r\n  ngOnInit(): void {\r\n      this.servicioCategorias.getCategorias().subscribe(\r\n        res => {this.categorias = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioSubcategorias.getSubcategorias().subscribe(\r\n        res => {this.subcategorias = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioInventario.getInventario().subscribe(\r\n        res => {this.inventario = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioUnidades.getUnidades().subscribe(\r\n        res => {this.unidades = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioUbicaciones.getUbicaciones().subscribe(\r\n        res => {this.ubicaciones = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioEstados.getEstados().subscribe(\r\n        res => {this.estados = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioEgresos.getEgresos().subscribe(\r\n        res => {this.listaEgresos = res;},\r\n        err => console.log(err));\r\n  }\r\n  //BUSCA ITEM A EGRESAR LUEGO DE HABER SELECCINADO\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsEgreso[indice].id);\r\n  }\r\n\r\n  egresarItems() {\r\n  //CICLO for QUE EGRESA ITEMS MULTIPLES\r\n    for(let itemCiclo of this.idsEgreso) {\r\n\r\n      let itemEgreso = Object.assign({},this.inventario.find(itemInv => itemInv.id == itemCiclo.id));\r\n      let itemListaEgresos = Object.assign({},itemEgreso);\r\n\r\n      //CAMPOS FALTANTES EN EGRESO\r\n      itemListaEgresos.obra = itemCiclo.obra;\r\n      itemListaEgresos.cantidad = itemCiclo.cantidad;\r\n\r\n      itemEgreso.cantidad = itemEgreso.cantidad - itemCiclo.cantidad;\r\n      itemEgreso.cantidadObra = itemEgreso.cantidadObra + itemCiclo.cantidad;\r\n      itemEgreso.categoria = this.categorias.find(cat => cat.nombre == itemEgreso.categoria).id;\r\n      itemEgreso.subcategoria = this.subcategorias.find(subcat => subcat.nombre == itemEgreso.subcategoria).id;\r\n      itemEgreso.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == itemEgreso.ubicacion).id;\r\n      itemEgreso.unidades = this.unidades.find(und => und.nombre == itemEgreso.unidades).id;\r\n      itemEgreso.estado = this.estados.find(est => est.nombre == itemEgreso.estado).id;\r\n\r\n      //COMUNICACION CON SERVICIO (UPDATE)\r\n      this.servicioInventario.updateItem(itemEgreso.id, itemEgreso, true).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          console.log(res[\"text\"]);\r\n          this.registrarEgreso(+itemEgreso.id, itemListaEgresos);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n    this.idsEgreso = [\r\n      {id: \"\", cantidad: 1, responsable: null, obra: null}\r\n    ];\r\n  }\r\n\r\n  //FUNCION QUE REGISTRA EGRESO EN BD CON ID DE ITEM EN INVENTARIO\r\n  registrarEgreso(id: any, itemListaEgresos: any) {\r\n    let egreso = {\r\n      nombre_item_egresado: itemListaEgresos.nombre,\r\n      id_categoria_item_egresado: +this.categorias.find(cat => cat.nombre == itemListaEgresos.categoria).id,\r\n      id_unidad_item_egresado: +this.unidades.find(unid => unid.nombre == itemListaEgresos.unidades).id,\r\n      cantidad: +itemListaEgresos.cantidad,\r\n      obra: itemListaEgresos.obra,\r\n      cedula_responsable_egreso: this.auth.user.getValue().cedula,\r\n    }\r\n    this.servicioEgresos.createEgreso(egreso).subscribe(\r\n      res => { console.log(res); },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n    //FUNCION PARA BORRAR FORMULARIO\r\n    borrarForm() {\r\n      this.form.reset();\r\n      this.idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}]\r\n\r\n      this.router.navigate(['inventario']);\r\n    }\r\n\r\n    //FUNCIONES DE EGRESO MULTIPLE\r\n    agregarItem() {\r\n      this.idsEgreso.push({id: '', cantidad: null, obra: null, responsable: null});\r\n    }\r\n    restarItem() {\r\n      this.idsEgreso.pop();\r\n    }\r\n\r\n    //FUNCIUON QUE REVISA CANTIDAD VALIDA\r\n    revisarCantidad(cantActual: number) {\r\n      for(let item of this.idsEgreso) {\r\n        if(item.cantidad > cantActual || item.cantidad == null || item.cantidad <= 0){\r\n          this.valido = false;\r\n          return;\r\n        }\r\n      }\r\n      this.valido = true;\r\n    }\r\n\r\n    borrarId(indice: number) {\r\n      this.idsEgreso[indice].id = '';\r\n    }\r\n\r\n  }\r\n\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-egresar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Egresar Producto</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                    <div *ngFor=\"let item of idsEgreso; let i=index\">\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Item {{i+1}}</h5>\r\n                        </div>\r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-3 mb-4\">\r\n                                <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select (change)='borrarId(i);' required class=\"form-select mt-2\" ngModel [name]=\"'selectCat'+[i]\" #selectCat=\"ngModel\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectCat.valid && selectCat.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Subcategoría</label>\r\n                                    <select (change)='borrarId(i);' required class=\"form-select mt-2\" ngModel [name]=\"'selectSubcat'+[i]\" #selectSubcat=\"ngModel\">\r\n                                        <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectSubcat.valid && selectSubcat.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Item</label>\r\n                                    <select [(ngModel)]='idsEgreso[i].id' required class=\"form-select mt-2\" [name]=\"'idItem'+[i]\" #selectItem='ngModel'>\r\n                                    <!--FILTRO DE ITEM POR CAT Y SUBCAT-->\r\n                                        <ng-container *ngFor=\"let item of inventario\">\r\n                                        <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                                        <option *ngIf=\"item.categoria == selectCat.value && item.subcategoria == selectSubcat.value && item.estado == 'Disponible'\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                        </ng-container>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectItem.valid && selectItem.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                                </div>\r\n                                <div class=\"col-3 mb-2\">\r\n                                <!--LABEL E INPUT DE CANTIDAD ACTUAL EN INVENTARIO-->\r\n                                    <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                                    <p *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <!--LABEL E INPUT CON CANTIDAD A EGRESAR-->\r\n                                <div class=\"col-4\">\r\n                                        <label for=\"exampleInputEmail1\">Cantidad a egresar</label>\r\n                                        <div class=\"input-group\">\r\n                                        <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\"\r\n                                        onkeypress=\"return event.charCode >= 48\"\r\n                                        min=\"1\"\r\n                                        [max]=\"inventario[regresarIndice(i)].cantidad\" type=\"number\"\r\n                                        [(ngModel)]=\"idsEgreso[i].cantidad\"\r\n                                        [name]=\"'cantidadEgreso'+[i]\"\r\n                                        class=\"form-control mt-2\"\r\n                                        (keyup)='revisarCantidad(inventario[regresarIndice(i)].cantidad)'>\r\n                                        <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\" [placeholder]=\"inventario[regresarIndice(i)].unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label for=\"exampleInputEmail1\">Obra destino</label>\r\n                                    <input [(ngModel)]='idsEgreso[i].obra' [name]=\"'obra'+[i]\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label for=\"exampleInputEmail1\">Responsable</label>\r\n                                    <input [(ngModel)]='idsEgreso[i].responsable' [name]=\"'responsable'+[i]\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <!-- BOTONES DEL FORMULARIO DE EGRESO -->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class='modal-footer'>\r\n                            <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                            </button>\r\n                            <button [hidden]=\"idsEgreso.length == 1\" type=\"button\" class=\"btn btn-secondary\" (click)=\"restarItem()\">\r\n                                <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                            </button>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-warning\"\r\n                                (click)=\"egresarItems()\"\r\n                                [disabled]='!valido || !f.valid'>\r\n                                <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { EgresosService } from '../../../services/egresos.service'\r\nimport { CategoriasService } from '../../../services/categorias.service'\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\n\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-egresos',\r\n  templateUrl: './egresos.component.html',\r\n  styleUrls: ['./egresos.component.css']\r\n})\r\nexport class EgresosComponent implements OnInit {\r\n\r\n  egresos: any = [];\r\n  categorias: any = [];\r\n  oculto = true;\r\n  fechaDesde: Date;\r\n  fechaHasta: string;\r\n  listaEliminados: any =[];\r\n\r\n  faFileDownload = faFileDownload;\r\n  faTimesCircle = faTimesCircle; \r\n\r\n  constructor(private servicioEgresos: EgresosService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioEliminados: EliminadosService) { }\r\n\r\n  ngOnInit(): void {\r\n    // DESCARGA DE INFORMACION DE BD, E INYECCION EN VARIABLES LOCALES\r\n    this.servicioEgresos.getEgresos().subscribe(\r\n      res => {this.egresos = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEliminados.getEliminados().subscribe(\r\n      res => {this.listaEliminados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n    //SE DESCARGA EL PDF DE EGRESOS\r\n    descargarPDF() {\r\n      const opciones = {\r\n        margin: 1,\r\n        filename: 'Egresos.pdf',\r\n        image: {type: 'jpeg', quality: 1},\r\n        html2canvas: {},\r\n        jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n      };\r\n\r\n      const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n      html2pdf()\r\n        .from(contenido)\r\n        .set(opciones)\r\n        .save();\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfEgresos\" class=\"btn btn-warning float-end\">\r\n        <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF</button>\r\n    <div class=\"row\">\r\n        <h1>Egresos</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <table class=\"table shadow table-striped\">\r\n        <!--FILTROS DE LA TABLA DE EGRESOS-->\r\n        <thead class=\"thead bg-warning text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroObra=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por obra\"></th>\r\n            <th scope=\"col\"><input #filtroResponsable=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por responsable\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-warning\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Obra</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Egreso</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--Ng For IMPRIME DATA DE EGRESOS, Y USA FILTROS PARA REDUCIR-->\r\n            <ng-container *ngFor=\"let egreso of egresos\">\r\n\r\n            <tr *ngIf=\"(egreso.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (egreso.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (egreso.responsable.toLocaleLowerCase().includes(filtroResponsable.value.toLowerCase()) || filtroResponsable.value == '')\r\n                &&\r\n                (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLowerCase()) || filtroObra.value == '')\r\n                \"scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td>{{ egreso.nombre | titlecase }} </td>\r\n                <td>{{ egreso.categoria }}</td>\r\n                <td>{{ egreso.cantidad }} {{ egreso.unidad }}</td>\r\n                <td>{{ egreso.obra }}</td>\r\n                <td>{{ egreso.responsable }}</td>\r\n                <td>{{ egreso.fecha | date:'short' }}</td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n\r\n<!--INICIO DE TABLA DE BD ELIMINADOS-->\r\n    <div class=\"row\">\r\n        <h1>Eliminados</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <table class=\"table shadow table-striped\">\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombreEliminados=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre eliminados\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoriaEliminados=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoriaEliinados\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Eliminación</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <ng-container *ngFor=\"let eliminado of listaEliminados\">\r\n            <tr\r\n            *ngIf=\"(\r\n            (eliminado.nombre.toLocaleLowerCase().includes(filtroNombreEliminados.value.toLocaleLowerCase()) || filtroNombreEliminados.value == '')\r\n            &&\r\n            (eliminado.categoria.includes(filtroCategoriaEliminados.value)|| filtroCategoriaEliminados.value == null))\"\r\n            scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td> {{ eliminado.nombre | titlecase }} </td>\r\n                <td> {{ eliminado.categoria }} </td>\r\n                <td> {{ eliminado.cantidad }} {{ eliminado.unidad }} </td>\r\n                <td> {{ eliminado.responsable }} </td>\r\n                <td> {{ eliminado.fecha | date:'short'}} </td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n<!-- FIN TABLA DE ELIMINADOS -->\r\n\r\n<!-- MODAL PDF EGRESOS -->\r\n<div class=\"modal fade\" id=\"pdfEgresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n            <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-warning\">\r\n                <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n        </div>\r\n        <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n            <h4>Egresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n                <thead class=\"thead bg-warning\">\r\n                <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Categoría</th>\r\n                    <th scope=\"col\">Cantidad</th>\r\n                    <th scope=\"col\">Obra</th>\r\n                    <th scope=\"col\">Responsable</th>\r\n                    <th scope=\"col\">Fecha Egreso</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n                <ng-container *ngFor=\"let egreso of egresos\">\r\n                    <tr>\r\n                    <td>{{ egreso.nombre | titlecase }}</td>\r\n                    <td>{{ egreso.categoria }}</td>\r\n                    <td>{{ egreso.cantidad }} {{ egreso.unidad }}</td>\r\n                    <td>{{ egreso.obra }}</td>\r\n                    <td>{{ egreso.responsable }}</td>\r\n                    <td>{{ egreso.fecha | date:'short' }}</td>\r\n                </tr>\r\n                </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//SERVICIOS BD\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingresar',\r\n  templateUrl: './ingresar.component.html',\r\n  styleUrls: ['./ingresar.component.css']\r\n})\r\n\r\nexport class IngresarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  itemExistenteVar: boolean[] = [];\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faSignInAlt = faSignInAlt;\r\n\r\n  respuesta: any;\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  inventario: any = [];\r\n  nombre = \"\";\r\n  valido: boolean = true;\r\n\r\n  nuevosItems: any[] = [\r\n    {\r\n      id: null,\r\n      nombre: null,\r\n      categoria: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n  idItem: any;\r\n\r\n  constructor(private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private inventarioService: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private ingresosService: IngresosService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => this.categorias = res,\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => this.subcategorias = res,\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => this.ubicaciones = res,\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => this.unidades = res,\r\n      err => console.log(err)\r\n    );\r\n    this.inventarioService.getInventario().subscribe(\r\n      res => this.inventario = res,\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let indice: number = 0;\r\n    for(var item of this.nuevosItems) {\r\n\r\n      if(!this.itemExistenteVar[indice]) {\r\n        this.inventarioService.createItem(item).subscribe(\r\n          res => {\r\n            console.log(res[\"text\"]);\r\n            this.registrarIngreso(res[\"id\"], item, 1);\r\n          },\r\n          err => { console.log(err); }\r\n        );\r\n      }\r\n\r\n      else if (this.itemExistenteVar[indice]) {\r\n        let itemOriginal = this.inventario.find(itemInventario => itemInventario.id == item.id);\r\n\r\n        let itemModificar = {\r\n          cantidad: itemOriginal.cantidad + item.cantidad,\r\n          precio: itemOriginal.precio + item.precio,\r\n          descripcion: this.nuevosItems[indice].descripcion\r\n        };\r\n        this.inventarioService.updateItem(itemOriginal.id, itemModificar, false).subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.registrarIngreso(item.id, {cantidad: item.cantidad, precio: item.precio, categoria: item.categoria, unidades: item.unidades, nombre:item.nombre}, 3);\r\n          },\r\n          err => { console.log(err); }\r\n        );\r\n      }\r\n      indice++;\r\n    }\r\n    this.router.navigate(['inventario']);\r\n    }\r\n\r\n    registrarIngreso(id: any, item: any, modalidad: number) {\r\n      let ingreso = {\r\n        nombre_item_ingresado: item.nombre,\r\n        id_categoria_item_ingresado: +item.categoria,\r\n        id_unidad_item_ingresado: +item.unidades,\r\n        id_modalidad: +modalidad,\r\n        cantidad: +item.cantidad,\r\n        cedula_responsable_ingreso: this.auth.user.getValue().cedula,\r\n        precio: +item.precio\r\n      }\r\n      this.ingresosService.createIngreso(ingreso).subscribe(\r\n        res => { console.log(res); },\r\n        err => { console.log(err); }\r\n      );\r\n    }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevosItems = [{nombre: null,\r\n                        categoria: null,\r\n                        cantidad: null,\r\n                        ubicacion: null,\r\n                        vencimiento: null,\r\n                        serial: null,\r\n                        precio: null,\r\n                        unidades: null,\r\n                        estado: \"Disponible\"}];\r\n    this.router.navigate(['inventario']);\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        categoria: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.nuevosItems){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  regresarItem(id: any) {\r\n    return this.inventario.find(itemInv => itemInv.id == id);\r\n  }\r\n\r\n  actDescripcion(valor: any, index: number) {\r\n    this.nuevosItems[index].descripcion = valor.target.value;\r\n  }\r\n\r\n}\r\n","<div class=\"margin-top-form\">\r\n  <div class=\"container\">\r\n    <div class=\"body form-body-style\">\r\n      <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Ingreso</h3>\r\n        </div>  \r\n      </div>\r\n      <div class=\"container pe-5 ps-5 pt-2\">\r\n        <form #f=\"ngForm\">\r\n          <div class=\"pt-2\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n              <!-- <h3>Item {{i+1}}</h3> -->\r\n              <div class=\"form-check form-switch\">\r\n                <input class=\"form-check-input\" #itemExistente=\"ngModel\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" [(ngModel)]='itemExistenteVar[i]' [name]=\"'checkboxExistente' + [i]\">\r\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\"></label>\r\n                <strong>Item Existente</strong>\r\n              </div>\r\n                <!--Nombre de producto-->\r\n                <div *ngIf=\"!itemExistenteVar[i]\" class=\"\">\r\n                  <div class=\"row mt-3 mb-4\">\r\n                    <div class=\"col-4\">\r\n                        <label>Nombre</label>\r\n                        <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" [name]=\"'nombre' + [i]\" class=\"form-control mt-2\">\r\n                        <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <!--Label y Select del tipo de producto-->\r\n                      <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                      <select #cat=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].categoria\" [name]=\"'cat' + [i]\">\r\n                        <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.id }}\">{{ categoria.nombre }}</option>\r\n                      </select>\r\n                      <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                      <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                        <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.id }}\">{{ subcategoria.nombre }}</option>\r\n                      </select>\r\n                      <small *ngIf=\"!subcat.valid && subcat.touched\" class=\"text-danger\">Ingrese una subcategoria.<br></small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label>Serial</label>\r\n                      <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" [name]=\"'serial' + [i]\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label>Precio</label>\r\n                      <div class=\"input-group\">\r\n                      <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control mt-2\">\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text mt-2\" id=\"basic-addon1\">$</span>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                <div class=\"row mb-4\">\r\n                  <div class=\"col-3\">\r\n                    <!--Cantidad de producto-->\r\n                    <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        #cantidad=\"ngModel\"\r\n                        required\r\n                        type=\"number\"\r\n                        [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                        [name]=\"'cantidad' + [i]\"\r\n                        class=\"form-control mt-2\"\r\n                        (keyup)='revisarCantidad()'>\r\n                      <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" [name]=\"'unidades' + [i]\" class=\"form-select mt-2\">\r\n                        <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                      </select>\r\n                    </div>\r\n                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                    <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <label>Ubicación en almacén</label>\r\n                    <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" [name]=\"'ubicacion' + [i]\" class=\"form-select mt-2\" aria-describedby=\"emailHelp\">\r\n                      <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.id }}\">{{ ubicacion.nombre }}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-2\" >\r\n                    <div class=\"form-group\">\r\n                      <label>Vencimiento</label>\r\n                      <input class=\"form-control mt-2\" [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-5\">\r\n                    <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                    <div class=\"form-group\">\r\n                      <label>Descripción</label>\r\n                      <input class=\"form-control mt-2\" >\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n\r\n                <!-- INICIO DEL FORM DE ITEM EXISTENTE -->\r\n                <div *ngIf=\"itemExistenteVar[i]\">\r\n                <div class=\"row mt-3 mb-3\">\r\n                  <div class=\"col-3\">\r\n                    <!--Label y Select del tipo de producto-->\r\n                    <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                    <select #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].categoria\" [name]=\"'cat' + [i]\">\r\n                      <ng-container *ngFor=\"let categoria of categorias\">\r\n                        <option value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                      </ng-container>\r\n\r\n                    </select>\r\n                    <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                    <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                      <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.nombre }}\">{{ subcategoria.nombre }}</option>\r\n                    </select>\r\n                    <small *ngIf=\"!subcat.valid && subcat.touched\" class=\"text-danger\">Ingrese una subcategoria.<br></small>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <label>Nombre</label>\r\n                    <select #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].id\" [name]=\"'nombre' + [i]\" class=\"form-select mt-2\">\r\n                      <ng-container *ngFor=\"let item of inventario\">\r\n                        <option *ngIf=\"item.categoria == cat.value && item.subcategoria == subcat.value\" value=\"{{ item.id }}\">{{ item.nombre }}</option>\r\n                      </ng-container>\r\n                    </select>\r\n                      <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Seleccione un nombre.</small>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                  <div class=\"col-3\">\r\n                    <!--Cantidad de producto-->\r\n                    <label for=\"exampleInputPassword1\">Cantidad a Ingresar</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        #cantidad=\"ngModel\"\r\n                        required\r\n                        type=\"number\"\r\n                        [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                        [name]=\"'cantidad' + [i]\"\r\n                        class=\"form-control mt-2\"\r\n                        (keyup)='revisarCantidad()'>\r\n                        <input *ngIf=\"nombre.value != undefined\" [placeholder]=\"regresarItem(nombre.value).unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                    </div>\r\n                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <label>Precio</label>\r\n                    <div class=\"input-group\">\r\n                    <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control mt-2\">\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text mt-2\" id=\"basic-addon1\">$</span>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                      <label>Vencimiento</label>\r\n                      <input class=\"form-control mt-2\" disabled [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n                  </div>\r\n                  <div class=\"col-5\">\r\n                    <label>Descripción</label>\r\n                    <input\r\n                      class=\"form-control mt-2\"\r\n                      [ngModel]=\"((nombre.value != undefined) ? regresarItem(nombre.value).descripcion : '')\"\r\n                      [name]=\"'descripcion' + [i]\"\r\n                      (keyup)=\"actDescripcion($event, i)\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n\r\n        <!--Footer de Modal con botones de cerrar e ingresar-->\r\n        <div class=\"form-footer-style\">\r\n          <div class=\"modal-footer\">\r\n                <div class=\"btn-group\">\r\n                    <button disabled type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                      <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                    </button>\r\n                    <button type=\"button\" [hidden]=\"nuevosItems.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" disabled (click)=\"nuevosItems.pop()\">\r\n                      <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                    </button>\r\n                </div>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                      <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                    </button>\r\n                    <!-- !f.valid significa cuando el form no sea valido -->\r\n                    <button [disabled]='!f.valid || !valido' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n                      <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n                  </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { ModalidadesService } from 'src/app/services/modalidades.service';\r\n\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-ingresos',\r\n  templateUrl: './ingresos.component.html',\r\n  styleUrls: ['./ingresos.component.css']\r\n})\r\nexport class IngresosComponent implements OnInit {\r\n  ingresos: any = [];\r\n  categorias: any = [];\r\n  modalidades: any = [];\r\n  oculto = true;\r\n  fechaDesde: Date;\r\n  fechaHasta: Date;\r\n\r\n  faFileDownload = faFileDownload;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  constructor(private servicioIngresos: IngresosService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioModalidades: ModalidadesService) {\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    // DESCARGA DE INFORMACION DE BD, E INYECCION EN VARIABLES LOCALES\r\n    this.servicioIngresos.getIngresos().subscribe(\r\n      res => {this.ingresos = res;},\r\n      err => console.log(err));\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioModalidades.getModalidades().subscribe(\r\n      res => {this.modalidades = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION DESCARGAR PDF DE INGRESOS\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Ingresos.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  dateAString(date: Date) {\r\n    let stringFecha: string = \"\";\r\n    stringFecha += date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getUTCDate();\r\n    console.log(stringFecha);\r\n    return stringFecha;\r\n  }\r\n\r\n    //FUNCIONES DE FILTRO POR FECHA (NO SIRVIERON)\r\n  changeFirstInput(e){\r\n    this.fechaDesde = e.target.value;\r\n    console.log(this.ingresos.filter(o => new Date(o.date) >= this.fechaDesde &&\r\n                                      new Date(o.date) <= this.fechaHasta  ));\r\n  }\r\n  changeSecondInput(e){\r\n    this.fechaHasta = e.target.value;\r\n    console.log(this.ingresos.filter(o => new Date(o.date) >= this.fechaDesde &&\r\n                                      new Date(o.date) <= this.fechaHasta  ));\r\n  } \r\n}\r\n","<div class=\"container\">\r\n  <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfIngresos\" class=\"btn btn-primary float-end\">\r\n    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF </button>\r\n  <div class=\"row\">\r\n    <h1>Ingresos</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!--Tabla de inventario en donde se muestra el inventario general-->\r\n      <table class=\"table shadow table-striped\">\r\n        <thead data-html2canvas-ignore class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n              </select>\r\n            </th>\r\n            <th></th>\r\n            <th colspan=\"3\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">Desde:</div>\r\n                <!--FILTRO POR FECHAS DE TABLA DE INGRESOS-->\r\n                <div class=\"col\">\r\n                  <input [(ngModel)]=\"fechaDesde\"\r\n                  (change)=\"changeFirstInput($event)\"\r\n                  class=\"form-control form-control-sm\" type=\"date\" value=\"\"\r\n                  name=\"fechaDesde\"></div>\r\n                <div class=\"col-2\">Hasta:</div>\r\n                <div class=\"col\"><input [(ngModel)]=\"fechaHasta\" class=\"form-control form-control-sm\" type=\"date\" [value]=\"fechaHasta\" name=\"fechaHasta\"></div>\r\n              </div>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <select #filtroModalidad=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroModalidad\">\r\n              <option value=\"\">Modalidad (Todas)</option>\r\n              <option *ngFor=\"let mod of modalidades\" [value]=\"mod.nombre\">{{ mod.nombre }}</option>\r\n              </select>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Fecha Ingreso</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Modalidad</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n          <ng-container *ngFor=\"let ingreso of ingresos\">\r\n            <tr *ngIf=\"(ingreso.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n            &&\r\n            (ingreso.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n            &&\r\n            (ingreso.modalidad.toLocaleLowerCase().includes(filtroModalidad.value.toLowerCase()) || filtroModalidad.value == '')\r\n            \"scope=\"row\" class=\"bg-light linea-tabla\">\r\n              <td>{{ ingreso.nombre | titlecase }}</td>\r\n              <td>{{ ingreso.categoria }}</td>\r\n              <td>{{ ingreso.cantidad }} {{ ingreso.unidad }}</td>\r\n              <td>\r\n                <div *ngIf=\"ingreso.precio != null && ingreso.precio != 0 && ingreso.modalidad != 'Reingreso'; else sinPrecio\">\r\n                  {{ ingreso.precio | currency }}\r\n                </div>\r\n                <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                <ng-template #sinPrecio>\r\n                  N/A\r\n                </ng-template>\r\n              </td>\r\n              <td>{{ ingreso.fecha | date:'dd-MM-yyyy h:m a'}}</td>\r\n              <td>{{ ingreso.responsable | titlecase }}</td>\r\n              <td>{{ ingreso.modalidad }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL PDF -->\r\n<div class=\"modal fade\" id=\"pdfIngresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n          <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-header\">\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Ingresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-primary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                  <th scope=\"col\">Responsable</th>\r\n                  <th scope=\"col\">Modalidad</th>\r\n                  <th scope=\"col\">Fecha Ingreso</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <ng-container *ngFor=\"let ingreso of ingresos\">\r\n                  <tr>\r\n                    <td>{{ ingreso.nombre | titlecase }}</td>\r\n                    <td>{{ ingreso.categoria }}</td>\r\n                    <td>{{ ingreso.cantidad }} {{ ingreso.unidad }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"ingreso.precio != null && ingreso.precio != 0 && ingreso.modalidad != 'Reingreso'; else sinPrecio\">\r\n                        {{ ingreso.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n                    <td>{{ ingreso.responsable }}</td>\r\n                    <td>{{ ingreso.modalidad }}</td>\r\n                    <td>{{ ingreso.fecha | date:'short'}}</td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventario-base',\n  templateUrl: './inventario-base.component.html',\n  styleUrls: ['./inventario-base.component.css']\n})\nexport class InventarioBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../inventario-models/item.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n// IMPORTS DE BD\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n  faSearch = faSearch;\r\n  faFileDownload = faFileDownload;\r\n\r\n  oculto = true;\r\n\r\n  datosInfo: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    unidades: null,\r\n    ubicacion: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n  }\r\n\r\n  itemBorrar = {\r\n    id: null,\r\n    nombre: null\r\n  }\r\n\r\n  //VARIABLE PARA HACER LAS BUSQUEDA POR ID DEL ITEM DE AVERIA\r\n  idItemElegido:string = null;\r\n\r\n  filtroTipo: string = \"\";\r\n\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  estados: any = [];\r\n  unidades: any = [];\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEliminados: EliminadosService,\r\n              public auth: AuthService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {\r\n        this.inventarioSQL = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {\r\n        this.categorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {\r\n        this.subcategorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {\r\n        this.ubicaciones = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {\r\n        this.estados = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {\r\n        this.unidades = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  //RECIBE EL ITEM DE LA FILA, E IMPRIME DICHOS DATOS EN UNA VARIABLE\r\n  asignarDetalles(item: Item) {\r\n    this.datosInfo = item;\r\n  }\r\n\r\n  // ASIGNA LOS DATOS DEL ITEM A BORRAR EN LA VARIABLE itemBorrar\r\n  asignarBorrar(id, nombre) {\r\n    this.itemBorrar.id = id;\r\n    this.itemBorrar.nombre = nombre;\r\n  }\r\n  // ELIMINA EL ITEM SELECCIONADO DE LA BD CUANDO EL USUARIO ACEPTA EN EL MODAL\r\n  eliminarItem() {\r\n\r\n    this.servicioInventarioSQL.deleteItem(this.itemBorrar.id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n      let eliminacion = {\r\n        nombre: this.itemBorrar.nombre,\r\n        cantidad: +this.inventarioSQL.find(item => item.id == this.itemBorrar.id).cantidad,\r\n        cedula_responsable_eliminado: +10470050,\r\n        id_categoria: +this.categorias.find(categoria => categoria.nombre == this.inventarioSQL.find(item => item.id == this.itemBorrar.id).categoria).id,\r\n        id_unidad: +this.unidades.find(unidad => unidad.nombre == this.inventarioSQL.find(item => item.id == this.itemBorrar.id).unidades).id,\r\n      }\r\n      // COMUNICACION CON EL SERVICIO QUE INSERTA ELIMINADO EN BD\r\n      this.servicioEliminados.createEliminado(eliminacion).subscribe(\r\n        res => { console.log(res); },\r\n        err => { console.log(err); }\r\n      );\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE INVENTARIO\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Inventario.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n<!--Botones de ingreso y reingreso de productos-->\r\n  <div class=\"row px-4\">\r\n    <div class=\"container mt-lg-2\">\r\n      <h1>Inventario</h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"row px-4\">\r\n    <div class=\"mb-2\">\r\n      <div class=\"btn-group float-end\">\r\n        <button type=\"button\" class=\"btn btn-success cool-btn\" routerLink='ingresar'>\r\n          <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-info cool-btn text-white\" routerLink='reingreso' >\r\n          <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Reingreso\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-warning cool-btn\" routerLink='egresar'>\r\n          <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egreso\r\n        </button>\r\n        <button *ngIf=\"auth.hasPermission(1)\" type=\"button\" class=\"btn btn-primary text-white cool-btn\" routerLink='modificar'>\r\n          <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n        </button>\r\n        <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfInventario\" class=\"btn btn-secondary float-right\">\r\n          <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF\r\n        </button>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row px-4\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-sm shadow table-striped\">\r\n      <thead class=\"table-dark \">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\">\r\n            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n          </th>\r\n          <th scope=\"col\">\r\n            <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\">\r\n            <select #filtroUbicacion=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroUbicacion\">\r\n              <option value=\"\">Ubicación (Todas)</option>\r\n              <option *ngFor=\"let ubicacion of ubicaciones\" [value]=\"ubicacion.nombre\">{{ ubicacion.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Subcategoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!-- *ngIf=\"(item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase() || item.tipo == filtroCategoria.value)) || filtroNombre.value == ''\" -->\r\n\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventarioSQL\">\r\n          <ng-container *ngIf=\"item.cantidad != 0\">\r\n            <tr\r\n              class=\"table-sm\"\r\n              scope=\"row\"\r\n              *ngIf=\"(\r\n                (item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (item.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (item.ubicacion == filtroUbicacion.value || filtroUbicacion.value == '')\r\n              )\"\r\n            class=\"bg-light linea-tabla\">\r\n            <td>{{ item.nombre | titlecase }}</td>\r\n            <td>{{ item.categoria }}</td>\r\n            <td>{{ item.subcategoria }}</td>\r\n            <td><span [ngClass]=\"{'text-danger': item.estado=='En Obra'}\">{{ item.cantidad }} {{ item.unidades }}</span></td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible',\r\n                            'text-danger': item.estado=='Dañado',\r\n                            'text-info': item.estado=='En Obra'}\"> <span *ngIf=\"item.estado=='En Obra'\">{{ item.cantidadObra }}</span> {{ item.estado }}</td>\r\n            <td>\r\n              <div class=\"btn-group\">\r\n                <button (click)=\"asignarDetalles(item)\" type=\"button\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Detalles\r\n              </button>\r\n              <button *ngIf=\"auth.hasPermission(1)\" (click)=\"asignarBorrar(item.id, item.nombre)\" type=\"button\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Eliminar\r\n              </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </ng-container>\r\n\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n</div>\r\n\r\n<!-- INICIO MODAL ELIMINAR -->\r\n<div class=\"modal\" tabindex=\"-1\" id=\"modalEliminar\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-danger\">\r\n        <h5 class=\"modal-title text-white\">Eliminar Item</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>¿Estás seguro que deseas eliminar <strong>{{ itemBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n        <button (click)=\"eliminarItem()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR -->\r\n\r\n<!-- MODAL DE INFO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n          <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.id }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.serial != null\">\r\n                <th>Serial</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.serial }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Categoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.categoria }}</td>\r\n              </tr>\r\n              <tr>\r\n              <tr>\r\n                <th>Subcategoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.subcategoria }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidad }} {{datosInfo.unidades }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.cantidadObra != null && datosInfo.cantidadObra !=0\">\r\n                <th>Cantidad en Obra</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidadObra }} {{datosInfo.unidades }} en obra</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.ubicacion != null\">\r\n                <th>Ubicación</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.ubicacion }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.estado != null\">\r\n                <th>Estado</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.estado }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.vencimiento != null\">\r\n                <th>Vencimiento</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.vencimiento | date}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.precio != null\">\r\n                <th>Precio</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.precio |currency}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.descripcion != null\">\r\n                <th>Descripcion</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.descripcion | lowercase}}</td>\r\n              </tr>\r\n              <tr><th></th><td></td><td></td></tr>\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO -->\r\n</div>\r\n\r\n<!-- MODAL PDF DE INVENTARIO-->\r\n<div class=\"modal fade\" id=\"pdfInventario\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n          <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Inventario</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-secondary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <ng-container *ngFor=\"let itemPDF of inventarioSQL\">\r\n                  <ng-container *ngIf=\"itemPDF.cantidad != 0\">\r\n                  <tr>\r\n                    <td>{{ itemPDF.nombre }}</td>\r\n                    <td>{{ itemPDF.categoria }}</td>\r\n                    <td>{{ itemPDF.cantidad }} {{ itemPDF.unidades }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"itemPDF.precio != null; else sinPrecio\">\r\n                        {{ itemPDF.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n                  </tr>\r\n                </ng-container>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { Categoria } from 'src/app/modulo_inventario/inventario-models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\n\r\n// IMPORTS DE BD\r\nimport { InventarioSQLService } from '../../../services/inventario-sql.service';\r\nimport { CategoriasService } from '../../../services/categorias.service';\r\nimport { UbicacionesService } from '../../../services/ubicaciones.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modificar',\r\n  templateUrl: './modificar.component.html',\r\n  styleUrls: ['./modificar.component.css']\r\n})\r\nexport class ModificarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  //VARIABLES QUE CONTIENEN BASES DE DATOS\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n    private servicioCategorias: CategoriasService,\r\n    private servicioSubcategorias: SubcategoriasService,\r\n    private servicioUbicaciones: UbicacionesService,\r\n    private servicioUnidades: UnidadesService,\r\n    private servicioEstados: EstadosService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {this.inventarioSQL = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n    //ENCUENTRA EL ID DEL ITEM A MODIFICAR\r\n  alElegirItem(idItem: string) {\r\n    // this.itemElegido = this.inventarioSQL.find(item => item.id == idItem);\r\n    this.itemElegido = Object.assign({}, this.inventarioSQL.find(item => item.id == idItem));\r\n  }\r\n\r\n  onModificar() {\r\n    this.itemElegido.categoria = this.categorias.find(cat => cat.nombre == this.itemElegido.categoria).id;\r\n    this.itemElegido.subcategoria = this.subcategorias.find(subcat => subcat.nombre == this.itemElegido.subcategoria).id;\r\n    this.itemElegido.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == this.itemElegido.ubicacion).id;\r\n    this.itemElegido.unidades = this.unidades.find(und => und.nombre == this.itemElegido.unidades).id;\r\n    this.itemElegido.estado = this.estados.find(est => est.nombre == this.itemElegido.estado).id;\r\n\r\n    this.servicioInventarioSQL.updateItem(this.itemElegido.id, this.itemElegido, true).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate(['inventario']);\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-modificar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Modificar</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-3'>\r\n                <form #f=\"ngForm\">\r\n                    <div class=\"container \">\r\n                        <h5>Seleccione el item a modificar:</h5>\r\n                    </div> \r\n                    <div class=\"container\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select class=\"form-select mt-2\" ngModel required name=\"selectCategoriaModificar\" #selectCategoriaModificar=\"ngModel\">\r\n                                <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectCategoriaModificar.valid && selectCategoriaModificar.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Subcategoría</label>\r\n                                <select class=\"form-select mt-2\" ngModel required name=\"selectSubcategoriaModificar\" #selectSubcategoriaModificar=\"ngModel\">\r\n                                <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.nombre }}\">{{ subcategoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectSubcategoriaModificar.valid && selectSubcategoriaModificar.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <label>Item</label>\r\n                                <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class=\"form-select mt-2\" ngModel required name=\"item\" #selectItemModif='ngModel'>\r\n                                <ng-container *ngFor=\"let item of inventarioSQL\">\r\n                                    <option\r\n                                    *ngIf=\"item.categoria == selectCategoriaModificar.value &&\r\n                                    item.subcategoria == selectSubcategoriaModificar.value\"\r\n                                    value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                    </ng-container>\r\n                                </select>\r\n                                <small *ngIf=\"!selectItemModif.valid && selectItemModif.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                            </div>\r\n                        </div>\r\n                    <hr>\r\n                    <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS-->\r\n                    <div class=\"container mt-2\">\r\n                        <h5>Modifique los datos que desee:</h5>\r\n                    </div> \r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Nombre</label>\r\n                                <input required type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.nombre\"\r\n                                name=\"nombre\" class=\"form-control mt-2\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select required class=\"form-select mt-2\"\r\n                                [(ngModel)]=\"itemElegido.categoria\"\r\n                                name=\"categoria\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Subcategoría</label>\r\n                                <select required class=\"form-select mt-2\"\r\n                                [(ngModel)]=\"itemElegido.subcategoria\"\r\n                                name=\"subcategoria\">\r\n                                    <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Precio</label>\r\n                                <input onkeypress=\"return event.charCode > 48\" min=\"0\" type=\"number\"\r\n                                [(ngModel)]=\"itemElegido.precio\"\r\n                                name=\"precio\" class=\"form-control mt-2\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Cantidad y Unidades</label>\r\n                                <div class=\"input-group\">\r\n                                    <input onkeypress=\"return event.charCode > 48\" min=\"1\" [(ngModel)]=\"itemElegido.cantidad\" type=\"number\" name=\"cantidad\" class=\"form-control mt-2\">\r\n                                    <select type=\"text\" placeholder=\":itemElegido.unidad\"  name=\"unidades\" [(ngModel)]=\"itemElegido.unidades\" class=\"form-select mt-2\">\r\n                                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Ubicación</label>\r\n                                <select type=\"text\" name=\"ubicacion\" [(ngModel)]=\"itemElegido.ubicacion\" class=\"form-select mt-2\" aria-describedby=\"emailHelp\">\r\n                                    <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Estado</label>\r\n                                <select type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.estado\"\r\n                                name=\"estado\" class=\"form-select mt-2\">\r\n                                    <option *ngFor='let estado of estados' value=\"{{ estado.nombre }}\">{{ estado.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <label>Serial</label>\r\n                                <input type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.serial\"\r\n                                name=\"serial\" class=\"form-control mt-2\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-9\">\r\n                                <label>Descripción</label>\r\n                                <input\r\n                                class=\"form-control mt-2\"\r\n                                [(ngModel)]=\"itemElegido.descripcion\"\r\n                                [name]=\"'descripcion'\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Fecha de Vencimiento</label>\r\n                                <input class=\"form-control mt-2\"\r\n                                [(ngModel)]=\"itemElegido.vencimiento\"\r\n                                name=\"vencimiento\" type=\"date\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--BOTONES FUNCIONES MODIFICAR-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button (click)=\"borrarForm()\" type=\"button\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid' (click)=\"onModificar()\" type=\"button\" class=\"btn btn-primary text-white\">\r\n                                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { Categoria } from 'src/app/modulo_inventario/inventario-models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Ingreso } from 'src/app/modulo_inventario/inventario-models/ingreso.model';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\nexport class ReingresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  inventario: any = [];\r\n  categorias: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n  ubicaciones: any = [];\r\n  subcategorias: any = [];\r\n  cantidadIngreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsReingreso = [\r\n    {id: \"\", cantidad: 1}\r\n  ];\r\n\r\n  constructor(private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioInventario: InventarioSQLService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioIngresos: IngresosService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioInventario.getInventario().subscribe(\r\n      res => {this.inventario = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},);\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsReingreso[indice].id);\r\n  }\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  reingresarItems() {\r\n    for(let item of this.idsReingreso) {\r\n      let nuevoItem = Object.assign({},this.inventario.find(itemInv => itemInv.id == item.id));\r\n      let itemListaIngresos = Object.assign({},nuevoItem);\r\n\r\n      if(item.cantidad == nuevoItem.cantidadObra) {\r\n        nuevoItem.estado = \"Disponible\";\r\n        nuevoItem.cantidadObra = 0;\r\n      }\r\n      else if(item.cantidad < nuevoItem.cantidadObra){\r\n        nuevoItem.estado = \"En Obra\";\r\n        nuevoItem.cantidadObra -= item.cantidad;\r\n      }\r\n\r\n      //CAMPOS FALTANTES EN INGRESO\r\n      itemListaIngresos.cantidad = item.cantidad;\r\n\r\n      nuevoItem.cantidad += item.cantidad;\r\n      nuevoItem.categoria = this.categorias.find(cat => cat.nombre == nuevoItem.categoria).id;\r\n      nuevoItem.subcategoria = this.subcategorias.find(subcat => subcat.nombre == nuevoItem.subcategoria).id;\r\n      nuevoItem.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == nuevoItem.ubicacion).id;\r\n      nuevoItem.unidades = this.unidades.find(und => und.nombre == nuevoItem.unidades).id;\r\n      nuevoItem.estado = this.estados.find(est => est.nombre == nuevoItem.estado).id;\r\n\r\n      this.servicioInventario.updateItem(nuevoItem.id, nuevoItem, true).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          console.log(res[\"text\"]);\r\n          this.registrarIngreso(+nuevoItem.id, itemListaIngresos);\r\n        },\r\n        err => {console.log(err);}\r\n      );\r\n\r\n    }\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n  }\r\n\r\n  // FUNCION QUE REGISTRA REINGRESO EN BD DE INGRESOS\r\n  registrarIngreso(id: any, itemListaIngresos){\r\n    let ingreso = {\r\n      nombre_item_ingresado: itemListaIngresos.nombre,\r\n      id_categoria_item_ingresado: +this.categorias.find(cat => cat.nombre == itemListaIngresos.categoria).id,\r\n      id_unidad_item_ingresado: +this.unidades.find(und => und.nombre == itemListaIngresos.unidades).id,\r\n      id_modalidad: +2,\r\n      cantidad: +itemListaIngresos.cantidad,\r\n      cedula_responsable_ingreso: this.auth.user.getValue().cedula,\r\n      precio: +itemListaIngresos.precio\r\n    }\r\n    this.servicioIngresos.createIngreso(ingreso).subscribe(\r\n      res => { console.log(res); },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n    this.router.navigate(['inventario']);\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsReingreso.push({id: \"\", cantidad: 1});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsReingreso.pop();\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.idsReingreso){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  restaurarValor(i: number) {\r\n    this.idsReingreso[i].cantidad = 1;\r\n    this.revisarCantidad();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"margin-top-form\">\r\n  <div class=\"container\">\r\n    <div class=\"body form-body-style\">\r\n      <div class=\"container pt-3 form-header-style header-color-reingreso\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Reingreso</h3>\r\n        </div>  \r\n      </div>\r\n      <div class='container pe-5 ps-5 pt-2'>\r\n        <form #f=\"ngForm\">\r\n          <div *ngFor=\"let item of idsReingreso; let i=index\">\r\n            <div class=\"container mt-2\">\r\n              <h5>Item {{i+1}}</h5>\r\n            </div>\r\n            <div class=\"container\">\r\n              <div class=\"row mt-3 mb-4\">\r\n                  <div class=\"col-2\">\r\n                      <label>Categoría</label>\r\n                        <select (change)=\"restaurarValor(i)\" required class=\"form-select mt-2\" ngModel [name]=\"'selectTipo'+[i]\" #selectCategoria=\"ngModel\">\r\n                          <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                        <small *ngIf=\"!selectCategoria.valid && selectCategoria.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                      <label>Subcategoria</label>\r\n                        <select required class=\"form-select mt-2\" ngModel [name]=\"'selectSubcategoria'+[i]\" #selectSubcategoria=\"ngModel\">\r\n                          <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                        </select>\r\n                        <small *ngIf=\"!selectSubcategoria.valid && selectSubcategoria.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                      <label>Item</label>\r\n                      <select #itemSelect=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"idsReingreso[i].id\" [name]=\"'selectId'+[i]\">\r\n                        <!--NGFOR QUE IMPRIME ITEMS DE BD-->\r\n                        <ng-container *ngFor=\"let item of inventario\">\r\n                          <!--FILTRO POR CATEGORIA DE ITEMS BD-->\r\n                          <ng-container *ngIf=\"item.categoria == selectCategoria.value && item.subcategoria == selectSubcategoria.value\">\r\n                            <option *ngIf=\"(item.categoria == 'Herramienta' && item.estado == 'En Obra') || (item.categoria != 'Herramienta')\" value='{{ item.id }}'>{{ item.nombre }}</option>\r\n                          </ng-container>\r\n                        </ng-container>\r\n                      </select>\r\n                      <small *ngIf=\"!itemSelect.valid && itemSelect.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <!--INPUT DE CANTIDAD (MUESTRA CANTIDAD EXISTENTE)-->\r\n                    <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                    <p *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\">{{ inventario[regresarIndice(i)].cantidad }} {{ inventario[regresarIndice(i)].unidades }}</p>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <!--INPUT DE CANTIDAD (INGRESO DE CANTIDAD)-->\r\n                    <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\"\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        type=\"number\"\r\n                        (keyup)='revisarCantidad()'\r\n                        [(ngModel)]=\"idsReingreso[i].cantidad\"\r\n                        [name]=\"'cantidad'+[i]\"\r\n                        class=\"form-control mt-2\">\r\n                        <input *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\" [placeholder]=\"inventario[regresarIndice(i)].unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--BOTONES DE FUNCIONES REINGRESO-->\r\n            <div class=\"form-footer-style\">\r\n              <div class=\"modal-footer\">\r\n                <div class=\"btn-group\">\r\n                  <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                  </button>\r\n                  <button type=\"button\" [hidden]=\"idsReingreso.length == 1\" class=\"btn btn-secondary\" [disabled]=\"idsReingreso.length == 1\" (click)=\"restarItem()\">\r\n                    <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                  </button>\r\n                </div>\r\n                  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                    <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                  </button>\r\n                  <button [disabled]='!valido || !f.valid' type=\"button\" class=\"btn btn-info text-white\" (click)=\"reingresarItems()\">\r\n                    <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n                  </button>\r\n              </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EgresarComponent } from './components/egresar/egresar.component';\r\nimport { EgresosComponent } from './components/egresos/egresos.component';\r\nimport { IngresarComponent } from './components/ingresar/ingresar.component';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\nimport { InventarioBaseComponent } from './components/inventario-base/inventario-base.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport { ModificarComponent } from './components/modificar/modificar.component';\r\nimport { ReingresoComponent } from './components/reingreso/reingreso.component';\r\n\r\nconst inventarioRoutes: Routes = [\r\n  { path: '', component: InventarioBaseComponent,\r\n    children: [\r\n      { path: '', component: InventarioComponent },\r\n      { path: 'egresar', component: EgresarComponent},\r\n      { path: 'egresos', component: EgresosComponent },\r\n      { path: 'ingresar', component: IngresarComponent},\r\n      { path: 'ingresos', component: IngresosComponent },\r\n      { path: 'reingreso', component: ReingresoComponent},\r\n      { path: 'modificar', component: ModificarComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(inventarioRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InventarioRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getCategorias() {\n    return this.http.get(`${this.API_URI}/categorias`);\n  }\n\n  getCategoria(id: string) {\n    return this.http.get(`${this.API_URI}/categorias/${id}`);\n  }\n\n  createCategoria(categoria: any) {\n    return this.http.post(`${this.API_URI}/categorias`, categoria);\n  }\n\n  deleteCategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/categorias/${id}`);\n  }\n\n  updateCategoria(id: string, categoria: string) {\n    return this.http.put(`${this.API_URI}/categorias/${id}`, categoria);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EgresosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEgresos() {\r\n    return this.http.get(`${this.API_URI}/egresos`);\r\n  }\r\n\r\n  // getItem(id: string) {\r\n  //   return this.http.get(`${this.API_URI}/herramientas/${id}`);\r\n  // }\r\n\r\n  createEgreso(egreso: any) {\r\n    return this.http.post(`${this.API_URI}/egresos`, egreso);\r\n  }\r\n\r\n  deleteEgreso(id: string) {\r\n    return this.http.delete(`${this.API_URI}/egresos/${id}`);\r\n  }\r\n\r\n  updateEgreso(id: string, egreso: any) {\r\n    return this.http.put(`${this.API_URI}/egresos/${id}`, egreso);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EliminadosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEliminados() {\r\n    return this.http.get(`${this.API_URI}/eliminados`);\r\n  }\r\n\r\n  createEliminado(eliminado: any) {\r\n    return this.http.post(`${this.API_URI}/eliminados`, eliminado);\r\n  }\r\n\r\n  deleteEliminado(id: string) {\r\n    return this.http.delete(`${this.API_URI}/eliminados/${id}`);\r\n  }\r\n\r\n  updateEliminado(id: string, eliminado: any) {\r\n    return this.http.put(`${this.API_URI}/eliminados/${id}`, eliminado);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstadosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEstados() {\r\n    return this.http.get(`${this.API_URI}/estados`);\r\n  }\r\n\r\n  getEstado(id: string) {\r\n    return this.http.get(`${this.API_URI}/estados/${id}`);\r\n  }\r\n\r\n  createEstado(estado: string) {\r\n    return this.http.post(`${this.API_URI}/estados`, estado);\r\n  }\r\n\r\n  deleteEstado(id: string) {\r\n    return this.http.delete(`${this.API_URI}/estados/${id}`);\r\n  }\r\n\r\n  updateEstado(id: string, estado: string) {\r\n    return this.http.put(`${this.API_URI}/estados/${id}`, estado);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Ingreso } from '../modulo_inventario/inventario-models/ingreso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getIngresos() {\n    return this.http.get(`${this.API_URI}/ingresos`);\n  }\n\n  // getItem(id: string) {\n  //   return this.http.get(`${this.API_URI}/herramientas/${id}`);\n  // }\n\n  createIngreso(ingreso: any) {\n    return this.http.post(`${this.API_URI}/ingresos`, ingreso);\n  }\n\n  deleteItem(id: string) {\n    return this.http.delete(`${this.API_URI}/ingresos/${id}`);\n  }\n\n  updateItem(id: string, ingreso: any) {\n    return this.http.put(`${this.API_URI}/ingresos/${id}`, ingreso);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Item } from '../modulo_inventario/inventario-models/item.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class InventarioSQLService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  getInventario() {\r\n    return this.http.get(`${this.API_URI}/herramientas`);\r\n  }\r\n\r\n  getItem(id: string) {\r\n    return this.http.get(`${this.API_URI}/herramientas/${id}`);\r\n  }\r\n\r\n  createItem(item: Item) {\r\n    let nuevoItem = {\r\n      nombre: item.nombre,\r\n      id_categoria: +item.categoria,\r\n      id_subcategoria: +item.subcategoria,\r\n      cantidad: item.cantidad,\r\n      id_unidad: +item.unidades,\r\n      id_ubicacion: +item.ubicacion,\r\n      id_estado: 1,\r\n      vencimiento: item.vencimiento,\r\n      serial: item.serial,\r\n      precio: item.precio,\r\n      descripcion: item.descripcion,\r\n      cantidadObra: item.cantidadObra\r\n    }\r\n    return this.http.post(`${this.API_URI}/herramientas`, nuevoItem);\r\n  }\r\n\r\n  deleteItem(id: string) {\r\n    return this.http.delete(`${this.API_URI}/herramientas/${id}`);\r\n  }\r\n\r\n  updateItem(id: string, item: any, full: boolean=true) {\r\n\r\n    if(full){\r\n      let nuevoItem = {\r\n        nombre: item.nombre,\r\n        id_categoria: +item.categoria,\r\n        id_subcategoria: +item.subcategoria,\r\n        cantidad: item.cantidad,\r\n        id_unidad: +item.unidades,\r\n        id_ubicacion: +item.ubicacion,\r\n        id_estado: +item.estado,\r\n        vencimiento: item.vencimiento,\r\n        serial: item.serial,\r\n        precio: item.precio,\r\n        descripcion: item.descripcion,\r\n        cantidadObra: item.cantidadObra\r\n      }\r\n      return this.http.put(`${this.API_URI}/herramientas/${id}`, nuevoItem);\r\n    }\r\n    else {\r\n      return this.http.put(`${this.API_URI}/herramientas/${id}`, item);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalidadesService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getModalidades() {\r\n    return this.http.get(`${this.API_URI}/modalidades`);\r\n  }\r\n\r\n  getModadlidad(id: string) {\r\n    return this.http.get(`${this.API_URI}/modalidades/${id}`);\r\n  }\r\n\r\n  createModalidad(modalidad: string) {\r\n    return this.http.post(`${this.API_URI}/modalidades`, modalidad);\r\n  }\r\n\r\n  deleteModalidad(id: string) {\r\n    return this.http.delete(`${this.API_URI}/modalidades/${id}`);\r\n  }\r\n\r\n  updateModalidad(id: string, modalidad: string) {\r\n    return this.http.put(`${this.API_URI}/modalidades/${id}`, modalidad);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubcategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getSubcategorias() {\n    return this.http.get(`${this.API_URI}/subcategorias`);\n  }\n\n  getSubcategoria(id: string) {\n    return this.http.get(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  createSubcategoria(subcategoria: any) {\n    return this.http.post(`${this.API_URI}/subcategorias`, subcategoria);\n  }\n\n  deleteSubcategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  updateSubcategoria(id: string, subcategoria: string) {\n    return this.http.put(`${this.API_URI}/subcategorias/${id}`, subcategoria);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UbicacionesService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUbicaciones() {\r\n    return this.http.get(`${this.API_URI}/ubicaciones`);\r\n  }\r\n\r\n  getUbicacion(id: string) {\r\n    return this.http.get(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  createUbicacion(categoria: any) {\r\n    return this.http.post(`${this.API_URI}/ubicaciones`, categoria);\r\n  }\r\n\r\n  deleteUbicacion(id: string) {\r\n    return this.http.delete(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  updateUbicacion(id: string, categoria: string) {\r\n    return this.http.put(`${this.API_URI}/ubicaciones/${id}`, categoria);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getUnidades() {\n    return this.http.get(`${this.API_URI}/unidades`);\n  }\n\n  getUnidad(id: string) {\n    return this.http.get(`${this.API_URI}/unidades/${id}`);\n  }\n\n  createUnidad(unidad: any) {\n    return this.http.post(`${this.API_URI}/unidades`, unidad);\n  }\n\n  deleteUnidad(id: string) {\n    return this.http.delete(`${this.API_URI}/unidades/${id}`);\n  }\n\n  updateUnidad(id: string, unidad: string) {\n    return this.http.put(`${this.API_URI}/unidades/${id}`, unidad);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuariosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsuarios() {\r\n    return this.http.get(`${this.API_URI}/empleados`);\r\n  }\r\n\r\n  getUsuario(id: string) {\r\n    return this.http.get(`${this.API_URI}/empleados/${id}`);\r\n  }\r\n\r\n  // createUsuario(categoria: any) {\r\n  //   return this.http.post(`${this.API_URI}/ubicaciones`, categoria);\r\n  // }\r\n\r\n  // deleteUbicacion(id: string) {\r\n  //   return this.http.delete(`${this.API_URI}/ubicaciones/${id}`);\r\n  // }\r\n\r\n  updateUsuario(id: string, usuario: string) {\r\n    return this.http.put(`${this.API_URI}/empleados/${id}`, usuario);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  isLoading = false;\r\n  error: string = null;\r\n\r\n  constructor(private router: Router, private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if(!form.valid) {\r\n      return;\r\n    }\r\n    this.error = null;\r\n    const cedula = form.value.cedula;\r\n    const password = form.value.password;\r\n\r\n    this.isLoading = true;\r\n\r\n    this.auth.signIn(cedula, password).subscribe(\r\n      resData => {\r\n        this.isLoading = false;\r\n      }, errorRes => {\r\n        this.error = 'Error: ' + errorRes.error.message;\r\n        this.isLoading = false;\r\n      });\r\n      form.reset();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row d-flex justify-content-center\">\r\n    <div class=\"col-10 col-sm-8 col-md-6 col-lg-5 col-xl-4 shadow mt-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col shadow bg-white d-flex justify-content-center\">\r\n          <div class=\"pt-4 pb-4\">\r\n            <img src=\"../../../assets/logo-gris.svg\" style=\"max-width: 450px; width: 100%\" class=\"card-img-top\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row bg-white\">\r\n        <div class=\"col\">\r\n          <div class=\"px-3 pt-2 pb-4\">\r\n\r\n            <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n              <p>{{ error }}</p>\r\n            </div>\r\n\r\n            <div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\r\n              <div\r\n                style=\"text-align: center; width: 3rem; height: 3rem;\"\r\n                class=\"spinner-border text-primary align-self-center\"\r\n                role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n\r\n          <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\r\n          <h5 class=\"mt-3 pb-1\">Inicia Sesión</h5>\r\n\r\n          <div class=\"pb-2\">\r\n            <label>Número de Cédula</label>\r\n            <input type=\"text\" class=\"form-control\" required ngModel name=\"cedula\">\r\n          </div>\r\n\r\n          <div class=\"pb-3\">\r\n            <label>Contraseña</label>\r\n            <input type=\"password\" class=\"form-control\" required ngModel name=\"password\">\r\n          </div>\r\n          <div class=\"pt-2 pb-3\">\r\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\r\n            <button type=\"submit\" [disabled]='!this.authForm.valid' class=\"btn btn-success float-end\">Ingresar</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit(): void {\n    // this.userSub = this.auth.user.subscribe(user => {\n    //   this.isAuthenticated = !!user;\n    //   // EQUIVALENTE A this.isAuthenticated = !user ? false : true;\n    // });\n  }\n\n}\n","<div class=\"container\">\r\n  <section>\r\n    <div class=\"content\">\r\n        <div class=\"row mb-3\">\r\n            <h2>Bienvenido, seleccione el módulo al que desee acceder</h2>\r\n        </div>\r\n    </div>\r\n  </section>\r\n  <div class=\"container\">\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 text-center\">\r\n        <div class=\"row justify-content-center\">\r\n          <div class=\"col-lg-4 col-md-12 mb-4\">\r\n            <div class=\"card-section border rounded p-3 bg-white\">\r\n              <div class=\"card-header-style-within header-color-inventario rounded pb-5\">\r\n                <h2 class=\"card-header-title text-white text-center pt-3\">Inventario</h2>\r\n              </div>\r\n              <div class=\"card-body text-center\">\r\n                <h5 class=\"card-title\">Módulo de gestión de inventario</h5>\r\n                  <p class=\"card-text\">El usuario podrá realizar todas las <br> acciones referentes a los procesos de <br> gestión de inventario.</p>\r\n                  <a class=\"btn btn-color-inventario card-btn text-decoration-none\" routerLink='/inventario'>Continuar</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12 mb-4\" *ngIf=\"auth.hasPermission(1)\">\r\n            <div class=\"card-section border rounded p-3 bg-white\">\r\n              <div class=\"card-header-style-within header-color-administrador rounded pb-5\">\r\n                <h2 class=\"card-header-title text-white text-center pt-3\">Administrador</h2>\r\n              </div>\r\n              <div class=\"card-body text-center\">\r\n                <h5 class=\"card-title\">Módulo de administración</h5>\r\n                  <p class=\"card-text\">El usuario podrá realizar todas las <br>acciones referentes a los procesos de <br> administracion del sistema.</p>\r\n                  <a class=\"btn btn-color-administrador card-btn text-decoration-none\" routerLink='/administrador'>Continuar</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-lg-4 col-md-12 mb-4\">\r\n            <div class=\"card-section border rounded p-3 bg-white\">\r\n              <div class=\"card-header-style-within header-color-procura rounded pb-5\">\r\n                <h2 class=\"card-header-title text-white text-center pt-3\">Procura</h2>\r\n              </div>\r\n              <div class=\"card-body text-center\">\r\n                <h5 class=\"card-title\">Módulo de procura</h5>\r\n                  <p class=\"card-text\">El usuario podrá realizar todas las acciones referentes a los procesos de <br> abastecimientos de la empresa.</p>\r\n                  <a class=\"btn btn-color-procura card-btn text-decoration-none\" routerLink='/procura'>Continuar</a>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faWarehouse, faUsersSlash, faHome, faSignInAlt, faSignOutAlt, faUser } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n  isAuthenticated = false;\r\n  private userSub: Subscription;\r\n  cedulaUser:number = null;\r\n\r\n    faWarehouse = faWarehouse;\r\n    faSignInAlt = faSignInAlt;\r\n    faSignOutAlt = faSignOutAlt;\r\n    faUser = faUser;\r\n    faHome = faHome;\r\n\r\n  constructor(private auth: AuthService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSub = this.auth.user.subscribe(user => {\r\n      this.isAuthenticated = !!user;\r\n      // EQUIVALENTE A this.isAuthenticated = !user ? false : true;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n  alPerfil() {\r\n    this.router.navigate([`usuario/${this.auth.user.getValue().cedula}`]);\r\n  }\r\n\r\n  onLogout() {\r\n    this.auth.logout();\r\n  }\r\n\r\n}\r\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand ps-5\" href=\"#\">\r\n      <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid me-2\" style=\"max-width: 50px; width: 100%; margin: 0; padding: 0\">\r\n      <strong> GrupoCDV</strong>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li class=\"nav-item ms-5\" *ngIf=\"isAuthenticated\">\r\n        <a class=\"nav-link\" routerLink=\"/menu\"> <fa-icon [icon]=\"faHome\"></fa-icon> Menú <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"d-flex\">\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('inventario')\">\r\n              <a class=\"nav-link\" routerLink=\"/inventario\"> <fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario <span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n            <li class=\"nav-item me-2 \" *ngIf=\"isAuthenticated && router.url.includes('inventario')\">\r\n              <a class=\"nav-link\" routerLink=\"/inventario/ingresos\"> <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresos </a>\r\n            </li>\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('inventario')\">\r\n              <a class=\"nav-link\" routerLink=\"/inventario/egresos\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresos</a>\r\n            </li>\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('administrador')\">\r\n              <a class=\"nav-link\" routerLink=\"/administrador\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Menú Administrador</a>\r\n            </li>\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('procura')\">\r\n              <a class=\"nav-link\" routerLink=\"/procura\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Menú Procura</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown mx-5 pe-5\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <fa-icon [icon]=\"faUser\"></fa-icon> Usuario\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a role=\"button\" class=\"dropdown-item\" (click)='alPerfil()'>Perfil</a></li>\r\n                <li><hr class=\"dropdown-divider\"></li>\r\n                <li><a role=\"button\" class=\"dropdown-item\" (click)='onLogout()'>Cerrar Sesión</a></li>\r\n              </ul>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sin-auth',\n  templateUrl: './sin-auth.component.html',\n  styleUrls: ['./sin-auth.component.css']\n})\nexport class SinAuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    No tienes autrización\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\n\r\n@Component({\r\n  selector: 'app-usuario',\r\n  templateUrl: './usuario.component.html',\r\n  styleUrls: ['./usuario.component.css']\r\n})\r\nexport class UsuarioComponent implements OnInit {\r\n\r\n  cedula = null;\r\n  usuario = null;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private servicioUsuarios: UsuariosService,\r\n              private auth: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cedula = this.route.snapshot.params['id'];\r\n    this.servicioUsuarios.getUsuario(this.cedula).subscribe(\r\n      res => {\r\n        this.usuario = res[0];\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  changePass(form: NgForm) {\r\n    this.auth.changePassword(this.cedula, form.value.password).subscribe(\r\n      resData => {\r\n        console.log(resData);\r\n        form.reset();\r\n      }, errorRes => {\r\n        console.log(errorRes);\r\n      });;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <div *ngIf=\"usuario\" class=\"card shadow\">\n        <div class=\"card-header bg-info\">\n          <h5>Información personal</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5 col-lg-3\">\n              <img src=\"../../../assets/profileGeneric.png\" alt=\"profileGeneric\">\n            </div>\n\n            <div class=\"col\">\n              <h1>{{ usuario.nombre | titlecase }} {{ usuario.apellido | titlecase}}</h1>\n              <h2>{{ usuario.cargo | titlecase }}</h2> <br>\n              <h4>{{ cedula }}</h4>\n              <h4>{{ usuario.correo }}</h4>\n            </div>\n            <div class=\"col-3\">\n              <h5>Permisos</h5>\n              <ul>\n                <li>Inventario</li>\n                <li>Administración</li>\n              </ul>\n              <button type=\"button\" class=\"btn btn-warning\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Cambiar contraseña</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header bg-warning\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Cambiar contraseña</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <form #passForm=\"ngForm\" (ngSubmit)=\"changePass(passForm)\">\n        <div class=\"modal-body\">\n          <div class=\"mb-3\">\n            <label for=\"exampleFormControlInput1\" class=\"form-label\">Nueva contraseña:</label>\n            <input #pass=\"ngModel\" ngModel required type=\"password\" class=\"form-control\" id=\"contrasena\" name=\"password\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"exampleFormControlInput1\" class=\"form-label\">Repita la contraseña:</label>\n            <input #pass2=\"ngModel\" ngModel required type=\"password\" class=\"form-control\" id=\"contrasena2\" name=\"password2\">\n          </div>\n          <p *ngIf=\"this.pass.dirty && this.pass2.dirty  && (this.pass.value != this.pass2.value)\" class=\"text-danger\">Las contraseñas no coinciden</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n          <button [disabled]='!this.passForm.valid || (this.pass.value != this.pass2.value)' type=\"submit\" class=\"btn btn-warning\">Guardar nueva contraseña</button>\n        </div>\n      </form>\n\n    </div>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  dirBackend: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
{"version":3,"sources":["webpack:///src/app/modulo_administrador/administrador-routing.module.ts","webpack:///src/app/modulo_administrador/administrador.module.ts","webpack:///src/app/modulo_administrador/components/admin-empleados/admin-empleados.component.ts","webpack:///src/app/modulo_administrador/components/admin-empleados/admin-empleados.component.html","webpack:///src/app/modulo_administrador/components/admin-inventario/admin-inventario.component.ts","webpack:///src/app/modulo_administrador/components/admin-inventario/admin-inventario.component.html","webpack:///src/app/modulo_administrador/components/admin-parametros/admin-parametros.component.ts","webpack:///src/app/modulo_administrador/components/admin-parametros/admin-parametros.component.html","webpack:///src/app/modulo_administrador/components/administrador-base/administrador-base.component.ts","webpack:///src/app/modulo_administrador/components/administrador-base/administrador-base.component.html","webpack:///src/app/modulo_administrador/components/menu-administrador/menu-administrador.component.ts","webpack:///src/app/modulo_administrador/components/menu-administrador/menu-administrador.component.html","webpack:///src/app/modulo_administrador/components/menu-gestioninterna/menu-gestioninterna.component.ts","webpack:///src/app/modulo_administrador/components/menu-gestioninterna/menu-gestioninterna.component.html","webpack:///src/app/services/cargos.service.ts"],"names":["routes","path","component","children","AdministradorRoutingModule","forChild","imports","exports","AdministradorModule","declarations","AdminEmpleadosComponent","servicioUsuarios","servicioCargos","router","editarMode","usuarioAcciones","nombre","apellido","cedula","cargo","correo","roles","getUsuarios","subscribe","res","usuarios","err","console","log","getCargos","cargos","usr","id_cargo","updateUsuario","id","find","onSalir","eliminarUser","selector","templateUrl","styleUrls","AdminInventarioComponent","servicioInventarioSQL","servicioCategorias","servicioSubcategorias","servicioUbicaciones","servicioUnidades","servicioEstados","faTimesCircle","faPlusCircle","faExclamationCircle","inventarioSQL","categorias","subcategorias","ubicaciones","unidades","estados","itemElegido","categoria","subcategoria","cantidad","ubicacion","fecha","responsable","estado","vencimiento","serial","precio","itemAveriado","getInventario","getCategorias","getSubcategorias","getUbicaciones","getUnidades","getEstados","est","cat","subcat","ubic","und","updateItem","navigate","form","reset","idItem","Object","assign","itemInv","item","alElegirItem","borrarForm","AdminParametrosComponent","servicioArea","areas","getAreas","nombreUnidad","nuevaUnidad","createUnidad","nombreCategoria","nuevaCategoria","createCategoria","nombreUbicacion","nuevaUbicacion","createUbicacion","nombreSubcategoria","nuevaSubcategoria","createSubcategoria","nombreArea","nuevaArea","createAreas","ubicacionAgregar","categoriaAgregar","subcategoriaAgregar","unidadAgregar","areaAgregar","AdministradorBaseComponent","MenuAdministradorComponent","MenuGestioninternaComponent","CargosService","http","API_URI","dirBackend","get","providedIn"],"mappings":"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","file":"modulo_administrador-administrador-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminEmpleadosComponent } from './components/admin-empleados/admin-empleados.component';\r\nimport { AdminInventarioComponent } from './components/admin-inventario/admin-inventario.component';\r\nimport { AdminParametrosComponent } from './components/admin-parametros/admin-parametros.component';\r\nimport { AdministradorBaseComponent } from './components/administrador-base/administrador-base.component';\r\nimport { MenuAdministradorComponent } from './components/menu-administrador/menu-administrador.component';\r\nimport { MenuGestioninternaComponent } from './components/menu-gestioninterna/menu-gestioninterna.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AdministradorBaseComponent,\r\n    children: [\r\n      { path: '', component: MenuAdministradorComponent },\r\n      { path: 'empleados', component: AdminEmpleadosComponent},\r\n      { path: 'gestion-interna', component: MenuGestioninternaComponent},\r\n      { path: 'gestion-interna/gestion-inv', component: AdminInventarioComponent},\r\n      { path: 'gestion-interna/parametros', component: AdminParametrosComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdministradorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdministradorRoutingModule } from './administrador-routing.module';\r\nimport { AdminEmpleadosComponent } from './components/admin-empleados/admin-empleados.component';\r\nimport { AdministradorBaseComponent } from './components/administrador-base/administrador-base.component';\r\nimport { MenuAdministradorComponent } from './components/menu-administrador/menu-administrador.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { MenuGestioninternaComponent } from './components/menu-gestioninterna/menu-gestioninterna.component';\r\nimport { AdminInventarioComponent } from './components/admin-inventario/admin-inventario.component';\r\nimport { AdminParametrosComponent } from './components/admin-parametros/admin-parametros.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdministradorBaseComponent,\r\n    MenuAdministradorComponent,\r\n    AdminEmpleadosComponent,\r\n    MenuGestioninternaComponent,\r\n    AdminInventarioComponent,\r\n    AdminParametrosComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdministradorRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n  ]\r\n})\r\nexport class AdministradorModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CargosService } from 'src/app/services/cargos.service';\nimport { UsuariosService } from 'src/app/services/usuarios.service';\n\n@Component({\n  selector: 'app-admin-empleados',\n  templateUrl: './admin-empleados.component.html',\n  styleUrls: ['./admin-empleados.component.css']\n})\nexport class AdminEmpleadosComponent implements OnInit {\n\n  usuarios;\n  cargos;\n  editarMode:boolean = false;\n  usuarioAcciones:any = {\n    nombre: null,\n    apellido: null,\n    cedula: null,\n    cargo: null,\n    correo: null,\n    roles: null,\n  };\n  constructor(private servicioUsuarios: UsuariosService,\n              private servicioCargos: CargosService,\n              private router: Router ) { }\n\n  ngOnInit(): void {\n    this.servicioUsuarios.getUsuarios().subscribe(\n      res => { this.usuarios = res; },\n      err => console.log(err)\n    );\n    this.servicioCargos.getCargos().subscribe(\n      res => {\n        this.cargos = res;\n      },\n      err => console.log(err)\n    );\n  }\n\n  onSetAcciones(usr:any) {\n    this.editarMode = false;\n    this.usuarioAcciones = usr;\n  }\n\n  eliminarUser() {\n\n  }\n\n  onEditar() {\n    this.editarMode = !this.editarMode;\n  }\n\n  onAceptarEdicion() {\n    // var cedula = this.usuarioAcciones.cedula;\n    this.usuarioAcciones.id_cargo = this.usuarioAcciones.cargo;\n    delete this.usuarioAcciones.roles;\n    delete this.usuarioAcciones.cargo;\n    // delete this.usuarioAcciones.cedula;\n    console.log(this.usuarioAcciones);\n    this.servicioUsuarios.updateUsuario(this.usuarioAcciones.cedula, this.usuarioAcciones).subscribe(\n      res => { console.log(res) },\n      err => console.log(err)\n    );\n  }\n\n  onSalir() {\n    this.editarMode = false;\n  }\n\n  buscarCargoById(id: number) {\n    if(id) return this.cargos.find(cargo => cargo.id == id).nombre\n  }\n\n\n}\n","<div class=\"container\">\r\n  <div class=\"row px-4\">\r\n    <div class=\"col-3\">\r\n      <h1>Empleados</h1>\r\n    </div>\r\n    <div class=\"col-9\">\r\n      <div class=\"btn-group float-end\">\r\n        <button type=\"button\" class=\"btn btn-success cool-btn\" routerLink='ingresar'>Añadir Empleado</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row px-4\">\r\n    <div class=\"table-responsive\">\r\n      <table class=\"table table-sm shadow table-striped\">\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n              <th scope=\"col\">Nombre</th>\r\n              <th scope=\"col\">Apellido</th>\r\n              <th scope=\"col\">Cédula</th>\r\n              <th scope=\"col\">Cargo</th>\r\n              <th scope=\"col\">Correo</th>\r\n              <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n              <tr *ngFor=\"let usuario of usuarios\" class=\"table-sm\" scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td>{{ usuario.nombre }}</td>\r\n                <td>{{ usuario.apellido }}</td>\r\n                <td>{{ usuario.cedula }}</td>\r\n                <td>{{ usuario.cargo }}</td>\r\n                <td>{{ usuario.correo }}</td>\r\n                <td><button (click)='onSetAcciones(usuario)' data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\" class=\"btn btn-info btn-sm text-white\">Acciones</button></td>\r\n              </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n  </div>\r\n\r\n  <div class=\"modal\" tabindex=\"-1\" id=\"modalInfo\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-info\">\r\n          <h3 class=\"modal-title text-white\">Empleado: {{ usuarioAcciones.nombre | titlecase}} {{ usuarioAcciones.apellido | titlecase}}</h3>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n\r\n                <div class=\"card-body\">\r\n                  <form #f=\"ngForm\">\r\n                  <div class=\"row\">\r\n\r\n                    <div class=\"col-3\">\r\n                      <img src=\"../../../assets/profileGeneric.png\" alt=\"profileGeneric\" class=\"h-25\">\r\n                    </div>\r\n                    <div *ngIf=\"!editarMode\" class=\"col\">\r\n                      <h3>{{ usuarioAcciones.nombre | titlecase }} {{ usuarioAcciones.apellido | titlecase}}</h3>\r\n                      <h4>{{ buscarCargoById(usuarioAcciones.cargo) }}</h4> <br>\r\n                      <h6>{{ usuarioAcciones.cedula }}</h6>\r\n                      <h6>{{ usuarioAcciones.correo }}</h6>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"editarMode\" class=\"col-5\">\r\n                      <div class=\"row mb-2\">\r\n                        <div class=\"col\">\r\n                          <label for=\"nombre\" class=\"form-label\">Nombre</label>\r\n                          <input ngModel [(ngModel)]='usuarioAcciones.nombre' type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                          <label for=\"apellido\" class=\"form-label\">Apellido</label>\r\n                          <input ngModel [(ngModel)]='usuarioAcciones.apellido' type=\"text\" class=\"form-control\" id=\"apellido\" name=\"apellido\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row mb-2\">\r\n                        <div class=\"col\">\r\n                          <label for=\"cargo\" class=\"form-label\">Cargo</label>\r\n                          <select name=\"cargo\" ngModel [(ngModel)]='usuarioAcciones.cargo' class=\"form-select\" aria-label=\"Default select example\">\r\n                            <option *ngFor=\"let cargo of cargos\" value={{cargo.id}}>{{cargo.nombre}}</option>\r\n                          </select>\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div class=\"row mb-2\">\r\n                        <div class=\"col\">\r\n                          <label for=\"Correo\" class=\"form-label\">Correo</label>\r\n                          <input ngModel [(ngModel)]='usuarioAcciones.correo' type=\"text\" class=\"form-control\" id=\"correo\" name=\"Correo\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col\">\r\n                      <h5>Permisos</h5>\r\n                      <ul>\r\n                        <li>Inventario</li>\r\n                        <li>Administración</li>\r\n                      </ul>\r\n                    </div>\r\n\r\n                  </div>\r\n                </form>\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button *ngIf=\"editarMode && f.dirty\" (click)=\"onAceptarEdicion()\" type=\"button\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n          <button *ngIf=\"!editarMode\" (click)=\"onEditar()\" type=\"button\" class=\"btn btn-primary\">Editar empleado</button>\r\n          <button *ngIf=\"!editarMode\" (click)=\"eliminarUser()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar empleado</button>\r\n          <button (click)='onSalir()' type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">{{editarMode ? 'Cancelar' : 'Salir'}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal\" tabindex=\"-1\" id=\"modalEliminar\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-danger\">\r\n          <h5 class=\"modal-title text-white\">Eliminar Item</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>¿Estás seguro que deseas eliminar <strong></strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n          <button (click)=\"eliminarUser()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n// IMPORTS DE BD\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-admin-inventario',\r\n  templateUrl: './admin-inventario.component.html',\r\n  styleUrls: ['./admin-inventario.component.css']\r\n})\r\nexport class AdminInventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n\r\n  //VARIABLES QUE CONTIENEN BASES DE DATOS\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  //VARIABLE PARA MODEL DE AVERIA\r\n  itemAveriado: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    unidades: null,\r\n    ubicacion: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n  };\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEstados: EstadosService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {this.inventarioSQL = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCIONES DE MODAL REPORTE\r\n  reportarAveria() {\r\n    this.itemAveriado.estado = \"Dañado\";\r\n    this.itemAveriado.estado = this.estados.find(est => est.nombre == this.itemAveriado.estado).id;\r\n    this.itemAveriado.categoria = this.categorias.find(cat => cat.nombre == this.itemAveriado.categoria).id;\r\n    this.itemAveriado.subcategoria = this.subcategorias.find(subcat => subcat.nombre == this.itemAveriado.subcategoria).id;\r\n    this.itemAveriado.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == this.itemAveriado.ubicacion).id;\r\n    this.itemAveriado.unidades = this.unidades.find(und => und.nombre == this.itemAveriado.unidades).id;\r\n    //MODIFICA ITEM EN BD\r\n    this.servicioInventarioSQL.updateItem(this.itemAveriado.id, this.itemAveriado, true).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  this.router.navigate(['administrador/gestion-interna']);\r\n  this.form.reset();\r\n  }\r\n  reportarReparado() {\r\n    this.itemAveriado.estado = \"Disponible\";\r\n    this.itemAveriado.estado = this.estados.find(est => est.nombre == this.itemAveriado.estado).id;\r\n    this.itemAveriado.categoria = this.categorias.find(cat => cat.nombre == this.itemAveriado.categoria).id;\r\n    this.itemAveriado.subcategoria = this.subcategorias.find(subcat => subcat.nombre == this.itemAveriado.subcategoria).id;\r\n    this.itemAveriado.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == this.itemAveriado.ubicacion).id;\r\n    this.itemAveriado.unidades = this.unidades.find(und => und.nombre == this.itemAveriado.unidades).id;\r\n    //MODIFICA ITEM EN BD\r\n    this.servicioInventarioSQL.updateItem(this.itemAveriado.id, this.itemAveriado, true).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate(['administrador/gestion-interna']);\r\n    this.form.reset();\r\n  }\r\n  //CREA ITEM TEMPORAL EN DONDE COLOCARA NUEVOS ESTADOS\r\n  alElegirItem(idItem: string) {\r\n    this.itemAveriado = Object.assign({},this.inventarioSQL.find(itemInv => itemInv.id == idItem));\r\n  }\r\n\r\n  //BUSCA ITEM PARA REPORTAR AVERIA\r\n  regresarItem(id: string) {\r\n    return this.inventarioSQL.find(item => item.id == id);\r\n  }\r\n  //FUNCION PARA BORRAR FORMULARIO REPORTE\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['administrador/gestion-interna']);\r\n  }\r\n\r\n}\r\n\r\n","<!--MODAL DE REPORTE DE PRODUCTO-->\r\n<div class=\"margin-top-form-reporte\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-reportar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Reportar item inventario</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Categoría</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectCategoriaReporte\" #selectCategoriaReporte=\"ngModel\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectCategoriaReporte.valid && selectCategoriaReporte.touched\" class=\"text-danger\">Seleccione un categoría.</small>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Subcategoría</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectSubcategoriaReporte\" #selectSubcategoriaReporte=\"ngModel\">\r\n                                    <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectSubcategoriaReporte.valid && selectSubcategoriaReporte.touched\" class=\"text-danger\">Seleccione un subcategoría.</small>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Item</label>\r\n                                <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" required class='form-select mt-2' ngModel name=\"id\">\r\n                                    <!-- FILTRO POR CATEGORIA Y SUBCATEGORIA REPORTE -->\r\n                                    <ng-container *ngFor=\"let item of inventarioSQL\">\r\n                                    <ng-container *ngIf=\"item.categoria == selectCategoriaReporte.value && item.estado != 'En Obra' && item.subcategoria == selectSubcategoriaReporte.value\">\r\n                                        <option value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                    </ng-container>\r\n                                    </ng-container>\r\n                                </select>\r\n                                <small *ngIf=\"!idItem.valid && idItem.touched\" class=\"text-danger\">Seleccione un item.</small>\r\n                            </div>\r\n                        </div>\r\n                <!-- BOTONOS CON FUNCIONES REPORTAR -->\r\n                <div class=\"form-footer-style\">\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                        <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                        </button>\r\n                        <button data-dismiss=\"modal\" *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Dañado'\" type=\"button\" class=\"btn btn-primary\"  (click)=\"reportarReparado()\">\r\n                        <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Reparado\r\n                        </button>\r\n                        <button *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Disponible'\" type=\"button\" class=\"btn btn-danger\" (click)=\"reportarAveria()\">\r\n                        <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Dañado\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--FIN MODAL DE REPORTE DE PRODUCTO-->","import { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n// IMPORTS DE BD\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-parametros',\r\n  templateUrl: './admin-parametros.component.html',\r\n  styleUrls: ['./admin-parametros.component.css']\r\n})\r\nexport class AdminParametrosComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n\r\n  //VARIABLES QUE CONTIENEN BASES DE DATOS\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n  areas: any = [];\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioArea: AreasService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {this.inventarioSQL = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioArea.getAreas().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION AGREGAR UNIDAD\r\n  unidadAgregar(nombreUnidad: string){\r\n    let nuevaUnidad: any = {nombre: nombreUnidad};\r\n    this.servicioUnidades.createUnidad(nuevaUnidad).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR CATEGORIA\r\n  categoriaAgregar(nombreCategoria: string){\r\n    let nuevaCategoria: any = {nombre: nombreCategoria};\r\n    this.servicioCategorias.createCategoria(nuevaCategoria).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR UBICACION\r\n  ubicacionAgregar(nombreUbicacion: string){\r\n    let nuevaUbicacion: any = {nombre: nombreUbicacion};\r\n    this.servicioUbicaciones.createUbicacion(nuevaUbicacion).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR SUBCATEGORIA\r\n  subcategoriaAgregar(nombreSubcategoria: string){\r\n    let nuevaSubcategoria: any = {nombre: nombreSubcategoria};\r\n    this.servicioSubcategorias.createSubcategoria(nuevaSubcategoria).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR AREA\r\n  areaAgregar(nombreArea: string){\r\n    let nuevaArea: any = {nombre: nombreArea};\r\n    this.servicioArea.createAreas(nuevaArea).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['administrador/gestion-interna']);\r\n  }\r\n}\r\n","<!--MODAL DE AGREGAR ADMINISTRADOR-->\r\n<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Agregar</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col\">\r\n                            <h5>Ubicación:</h5>\r\n                            <div class=\"form-floating\">\r\n                                <input #nombreUbicacion=\"ngModel\" ngModel name=\"nombreUbicacionNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                <label for=\"floatingInput\">Nombre</label>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                            <h5>Categoría:</h5>\r\n                            <div class=\"form-floating\">\r\n                                <input #nombreCategoria=\"ngModel\" ngModel name=\"nombreCategoriaNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                <label for=\"floatingInput\">Nombre</label>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                            <h5>Subcategoría:</h5>\r\n                            <div class=\"form-floating\">\r\n                                <input #nombreSubcategoria=\"ngModel\" ngModel name=\"nombreSubcategoriaNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                <label for=\"floatingInput\">Nombre</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col text-center\">\r\n                            <button [disabled]=\"!nombreUbicacion.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"ubicacionAgregar(nombreUbicacion.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ubicación\r\n                            </button>\r\n                            </div>\r\n                            <div class=\"col text-center\">\r\n                            <button [disabled]=\"!nombreCategoria.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"categoriaAgregar(nombreCategoria.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Categoría\r\n                            </button>\r\n                            </div>\r\n                            <div class=\"col text-center\">\r\n                            <button [disabled]=\"!nombreSubcategoria.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"subcategoriaAgregar(nombreSubcategoria.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Subcategoría\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <h5>Unidad:</h5>\r\n                                <div class=\"form-floating\">\r\n                                    <input #nombreUnidad=\"ngModel\" ngModel name=\"nombreUnidadNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                    <label for=\"floatingInput\">Nombre</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                <h5>Area:</h5>\r\n                                <div class=\"form-floating\">\r\n                                    <input #nombreArea=\"ngModel\" ngModel name=\"nombreAreaNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                    <label for=\"floatingInput\">Nombre</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4 text-center\">\r\n                            <button [disabled]=\"!nombreUnidad.valid\"  data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"unidadAgregar(nombreUnidad.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Unidad\r\n                            </button>\r\n                            </div>\r\n                            <div class=\"col-4 text-center\">\r\n                            <button [disabled]=\"!nombreArea.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"areaAgregar(nombreArea.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Area\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    <!--BOTONES CON FUNCIONES AGREGAR-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--FIN MODAL DE AGREGAR-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administrador-base',\n  templateUrl: './administrador-base.component.html',\n  styleUrls: ['./administrador-base.component.css']\n})\nexport class AdministradorBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-menu-administrador',\n  templateUrl: './menu-administrador.component.html',\n  styleUrls: ['./menu-administrador.component.css']\n})\nexport class MenuAdministradorComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\r\n    <section>\r\n        <div class=\"content\">\r\n            <div class=\"row mb-5 \">\r\n                <h2>Elija un sub-módulo de administración</h2>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 text-center\">\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n                        <div class=\"card-section border rounded p-3 bg-white\">\r\n                                <div class=\"header-color-empleados card-header-style-within rounded pb-5\">\r\n                                    <h2 class=\"card-header-title text-white text-center pt-3\">Empleados</h2>\r\n                                </div>\r\n                            <div class=\"card-body text-center\">\r\n                                <h5 class=\"card-title\">Lista de empleados</h5>\r\n                                <p class=\"card-text\">Módulo de gestión de empleados. El administrador podrá realizar todas las operaciones referentes a la gestion del personal de la empresa.</p>\r\n                                <a class=\"btn btn-color-empleados card-btn text-decoration-none\" routerLink='empleados'>Continuar</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n                        <div class=\"card-section border rounded p-3 bg-white\">\r\n                                <div class=\"header-color-gestion-interna card-header-style-within rounded pb-5\">\r\n                                    <h2 class=\"card-header-title text-white text-center pt-3\">Gestión interna</h2>\r\n                                </div>\r\n                            <div class=\"card-body text-center\">\r\n                                <h5 class=\"card-title\">Herramientas de gestión interna</h5>\r\n                                <p class=\"card-text\">Módulo de gestión interna. <br >El administrador podrá realizar todas las operaciones referentes a la <br> gestion interna de la empresa.</p>\r\n                                <a class=\"btn btn-color-gestion-interna card-btn text-decoration-none\" routerLink='gestion-interna'>Continuar</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu-gestioninterna',\r\n  templateUrl: './menu-gestioninterna.component.html',\r\n  styleUrls: ['./menu-gestioninterna.component.css']\r\n})\r\nexport class MenuGestioninternaComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <section>\r\n        <div class=\"content\">\r\n            <div class=\"row mb-5 \">\r\n                <h2>Elija un sub-módulo de gestión interna</h2>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 text-center\">\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n                        <div class=\"card-section border rounded p-3 bg-white\">\r\n                                <div class=\"header-color-parametros card-header-style-within rounded pb-5\">\r\n                                    <h2 class=\"card-header-title text-white text-center pt-3\">Parámetros</h2>\r\n                                </div>\r\n                            <div class=\"card-body text-center\">\r\n                                <h5 class=\"card-title\">Agregar parámetros</h5>\r\n                                <p class=\"card-text\">Módulo de gestión de parámetros. El administrador podrá agregar áreas,categorías,sub-categorías, y otros elementos de gestión.</p>\r\n                                <a class=\"btn btn-color-parametros card-btn text-decoration-none\" routerLink='parametros'>Continuar</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n                        <div class=\"card-section border rounded p-3 bg-white\">\r\n                                <div class=\"header-color-inventario card-header-style-within rounded pb-5\">\r\n                                    <h2 class=\"card-header-title text-white text-center pt-3\">Inventario</h2>\r\n                                </div>\r\n                            <div class=\"card-body text-center\">\r\n                                <h5 class=\"card-title\">Administración de inventario</h5>\r\n                                <p class=\"card-text\">Módulo de gestión de inventario. El administrador podrá realizar todas las operaciones exclusivamente administrativas referentes al inventario de la empresa.</p>\r\n                                <a class=\"btn btn-color-inventario card-btn text-decoration-none\" routerLink='gestion-inv'>Continuar</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CargosService {\n\n  constructor(private http: HttpClient) { }\n\n  API_URI = environment.dirBackend;\n\n  getCargos() {\n    return this.http.get(`${this.API_URI}/cargos`);\n  }\n\n  // getCategoria(id: string) {\n  //   return this.http.get(`${this.API_URI}/categorias/${id}`);\n  // }\n\n  // createCategoria(categoria: any) {\n  //   return this.http.post(`${this.API_URI}/categorias`, categoria);\n  // }\n\n  // deleteCategoria(id: string) {\n  //   return this.http.delete(`${this.API_URI}/categorias/${id}`);\n  // }\n\n  // updateCategoria(id: string, categoria: string) {\n  //   return this.http.put(`${this.API_URI}/categorias/${id}`, categoria);\n  // }\n\n}\n\n"]}
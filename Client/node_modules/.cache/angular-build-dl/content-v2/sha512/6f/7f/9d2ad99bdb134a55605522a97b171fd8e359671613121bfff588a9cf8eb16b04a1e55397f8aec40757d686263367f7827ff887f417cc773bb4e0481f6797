{"version":3,"mappings":"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","names":["_angular_core__WEBPACK_IMPORTED_MODULE_3__","ActualizarProductosComponent","servicioProductosProveedores","servicioAreas","servicioProveedores","router","route","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_4__","id","nombre","area","unidad","garantia","dias_garantia","proveedor","fecha_act","precio","id_area","direccion","correo","credito","dias_credito","ciudad","telefono","celular","contacto","rif","descripcion","idProducto","snapshot","params","getProductosProveedoresElegido","subscribe","productosProveedor","res","console","log","err","getAreas","areas","getProveedorElegido","datosProveedor","producto","datosInfoProducto","datosActualizarProducto","precioNuevo","updatePrecioProducto","form","reset","productoProveedorBorrar","deleteProductoProveedor","selectors","viewQuery","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_4__","AgregarProductoComponent","servicioUnidades","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__","getProveedores","proveedores","getUnidades","unidades","nuevoProducto","productoCiclo","createProductoProveedor","navigate","valido","push","AgregarProveedorComponent","auth","responsable","proveedorNuevo","nuevoProveedor","user","getValue","cedula","createProveedor","_angular_core__WEBPACK_IMPORTED_MODULE_2__","GestionProductosComponent","servicioProductos","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__","getProductos","productos","createProducto","productoModificar","Object","assign","find","updateProducto","productoBorrar","deleteProducto","ModificarProductoComponent","nombreProveedor","getProductosProveedores","productosProveedores","productoElegido","updateProductoProveedor","ModificarProveedorComponent","idProveedor","proveedorElegido","updateProveedor","ProcuraBaseComponent","decls","vars","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","ProductosComponent","index","idProductoAct","oculto","opciones","margin","filename","image","type","quality","html2canvas","jsPDF","unit","format","orientation","contenido","document","getElementById","html2pdf_js__WEBPACK_IMPORTED_MODULE_0__","from","set","save","modoActPrecios","ProveedoresComponent","fecha","datosInfo","proveedorBorrar","deleteProveedor","consts","routes","path","component","_components_procura_base_procura_base_component__WEBPACK_IMPORTED_MODULE_1__","children","redirectTo","_components_productos_productos_component__WEBPACK_IMPORTED_MODULE_0__","_components_agregar_producto_agregar_producto_component__WEBPACK_IMPORTED_MODULE_5__","_components_modificar_producto_modificar_producto_component__WEBPACK_IMPORTED_MODULE_6__","_components_gestion_productos_gestion_productos_component__WEBPACK_IMPORTED_MODULE_8__","_components_proveedores_proveedores_component__WEBPACK_IMPORTED_MODULE_2__","_components_agregar_proveedor_agregar_proveedor_component__WEBPACK_IMPORTED_MODULE_3__","_components_modificar_proveedor_modificar_proveedor_component__WEBPACK_IMPORTED_MODULE_4__","_components_actualizar_productos_actualizar_productos_component__WEBPACK_IMPORTED_MODULE_7__","ProcuraRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_10__","imports","exports","ProcuraModule","_angular_common__WEBPACK_IMPORTED_MODULE_11__","_procura_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_12__","_angular_forms__WEBPACK_IMPORTED_MODULE_13__","_fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_14__","declarations","_components_productos_productos_component__WEBPACK_IMPORTED_MODULE_2__","_components_proveedores_proveedores_component__WEBPACK_IMPORTED_MODULE_3__","_components_agregar_proveedor_agregar_proveedor_component__WEBPACK_IMPORTED_MODULE_4__","_components_modificar_proveedor_modificar_proveedor_component__WEBPACK_IMPORTED_MODULE_5__","_components_agregar_producto_agregar_producto_component__WEBPACK_IMPORTED_MODULE_6__","_components_modificar_producto_modificar_producto_component__WEBPACK_IMPORTED_MODULE_7__","_components_actualizar_productos_actualizar_productos_component__WEBPACK_IMPORTED_MODULE_8__","_components_gestion_productos_gestion_productos_component__WEBPACK_IMPORTED_MODULE_9__","ProductosProveedoresService","http","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","get","API_URI","id_Proveedor","productoProveedorNuevo","id_area_producto","id_unidad_producto","id_proveedor_producto","Date","toISOString","slice","replace","post","put","precioAct","productoPrecioNuevo","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory","providedIn","ProductosService","productoNuevo","id_unidad","ProveedoresService","id_proveedor"],"sources":["webpack:///src/app/modulo_procura/components/actualizar-productos/actualizar-productos.component.ts","webpack:///src/app/modulo_procura/components/actualizar-productos/actualizar-productos.component.html","webpack:///src/app/modulo_procura/components/agregar-producto/agregar-producto.component.ts","webpack:///src/app/modulo_procura/components/agregar-producto/agregar-producto.component.html","webpack:///src/app/modulo_procura/components/agregar-proveedor/agregar-proveedor.component.ts","webpack:///src/app/modulo_procura/components/agregar-proveedor/agregar-proveedor.component.html","webpack:///src/app/modulo_procura/components/gestion-productos/gestion-productos.component.ts","webpack:///src/app/modulo_procura/components/gestion-productos/gestion-productos.component.html","webpack:///src/app/modulo_procura/components/modificar-producto/modificar-producto.component.html","webpack:///src/app/modulo_procura/components/modificar-producto/modificar-producto.component.ts","webpack:///src/app/modulo_procura/components/modificar-proveedor/modificar-proveedor.component.html","webpack:///src/app/modulo_procura/components/modificar-proveedor/modificar-proveedor.component.ts","webpack:///src/app/modulo_procura/components/procura-base/procura-base.component.ts","webpack:///src/app/modulo_procura/components/procura-base/procura-base.component.html","webpack:///src/app/modulo_procura/components/productos/productos.component.ts","webpack:///src/app/modulo_procura/components/productos/productos.component.html","webpack:///src/app/modulo_procura/components/proveedores/proveedores.component.ts","webpack:///src/app/modulo_procura/components/proveedores/proveedores.component.html","webpack:///src/app/modulo_procura/procura-routing.module.ts","webpack:///src/app/modulo_procura/procura.module.ts","webpack:///src/app/services/productos-proveedores.service.ts","webpack:///src/app/services/productos.service.ts","webpack:///src/app/services/proveedores.service.ts"],"sourcesContent":["import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-actualizar-productos',\r\n  templateUrl: './actualizar-productos.component.html',\r\n  styleUrls: ['./actualizar-productos.component.css']\r\n})\r\nexport class ActualizarProductosComponent implements OnInit {\r\n  @ViewChild('fi') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faMinusCircle = faMinusCircle;\r\n\r\n  //VARRIABLES DE BD\r\n  productosProveedor:any = [];\r\n  areas:any = [];\r\n  idProducto = null;\r\n\r\n  //VARIABLES DE FUNCIONES COMPONENT\r\n  datosInfoProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    proveedor: null,\r\n    fecha_act: null,\r\n    precio: null\r\n  }\r\n\r\n  datosActualizarProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    proveedor: null,\r\n    fecha_act: null,\r\n    precio: null\r\n  }\r\n\r\n  datosProveedor: any = {\r\n    id: null,\r\n    nombre: null,\r\n    id_area: null,\r\n    direccion: null,\r\n    correo: null,\r\n    credito: null,\r\n    dias_credito: null,\r\n    ciudad: null,\r\n    telefono: null,\r\n    celular: null,\r\n    contacto: null,\r\n    rif: null,\r\n    descripcion: null\r\n    };\r\n\r\n  precioNuevo:number = null;\r\n\r\n  productoProveedorBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n\r\n  constructor(private servicioProductosProveedores: ProductosProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private servicioProveedores: ProveedoresService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.idProducto = this.route.snapshot.params['id'];\r\n    this.servicioProductosProveedores.getProductosProveedoresElegido(this.idProducto).subscribe(\r\n      res => {this.productosProveedor = res;},\r\n      err => console.log(err));\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedorElegido(this.idProducto).subscribe(\r\n      res => {this.datosProveedor = res[0];},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE DETALLES DE PRODUCTO\r\n  asignarDetalles(producto:any){\r\n    this.datosInfoProducto = producto;\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE ACTUALIZAR  PRODUCTO\r\n  asignarActualizar(producto:any){\r\n    this.datosActualizarProducto = producto;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  actualizarProductoPrecio() {\r\n    if(this.precioNuevo!=null && this.precioNuevo>=0){\r\n      this.servicioProductosProveedores.updatePrecioProducto(this.datosActualizarProducto.id, this.precioNuevo).subscribe(\r\n        res => {console.log(res);},\r\n        err => {console.log(err);});\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE BORRAR PRODUCTO (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.productoProveedorBorrar.nombre = nombre;\r\n    this.productoProveedorBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  eliminarProductoProducto() {\r\n    this.servicioProductosProveedores.deleteProductoProveedor(this.productoProveedorBorrar.id).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);});\r\n  }\r\n}\r\n","<div class=\"bg-white shadow-lg container body\">\r\n    <div class=\"container pt-3\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Productos de: <strong>{{ datosProveedor.nombre}}</strong></h3>\r\n        </div>  \r\n    </div>\r\n    <div class=\"container\">\r\n    <!-- INICIO DEL MODAL ACTUALIZAR PRODUCTOS -->\r\n        <div class=\"table-responsive-md mt-lg-3\">\r\n            <table class=\"table table-sm shadow table-striped\">\r\n                <thead class=\"table-dark\">\r\n                    <tr>\r\n                        <!--FILTROS TABLA DE PRODUCTOS-->\r\n                        <th scope=\"col-2\">\r\n                            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel name=\"filtroNombre\" type=\"text\" placeholder=\"Filtro por nombre\">\r\n                        </th>\r\n                        <th scope=\"col-2\">\r\n                            <select #filtroArea=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroArea\">\r\n                            <option value=\"\">Area (Todas)</option>\r\n                            <option [value]=\"area.nombre\" *ngFor=\"let area of areas\">{{ area.nombre }}</option>\r\n                            </select>\r\n                        </th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <thead class=\"table-dark\">\r\n                    <tr>\r\n                        <th scope=\"col-sm-2\">Nombre</th>\r\n                        <th scope=\"col-sm-2\">Área</th>\r\n                        <th scope=\"col-sm-2\">Precio/Unidad</th>\r\n                        <th scope=\"col-sm-2\">Fecha Actualizado</th>\r\n                        <th scope=\"col-sm-2\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor=\"let producto of productosProveedor; let i=index\">\r\n                    <!--FILTROS DE TABLA DE PRODUCTOS-->\r\n                        <tr\r\n                        class=\"bg-light table-sm linea-tabla\"\r\n                        scope=\"row\"\r\n                        *ngIf=\"(\r\n                        (producto.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                        &&\r\n                        (producto.area.toLocaleLowerCase().includes(filtroArea.value.toLowerCase()) || filtroArea.value == ''))\">\r\n                            <td class=\"col-sm-2\">{{ producto.nombre }}</td>\r\n                            <td class=\"col-sm-2\">{{ producto.area }}</td>\r\n                            <td class=\"col-sm-2\">{{ producto.precio | currency}} / {{ producto.unidad }}</td>\r\n                            <td class=\"col-sm-2\">{{ producto.fecha | date}}</td>\r\n                            <td class=\"col-sm-2\">\r\n                                <!--BOTONES DE DETALLES, ACTUALIZAR Y ELIMINACION-->\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" (click)=\"asignarActualizar(producto)\" class=\"btn btn-primary text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalActualizar\">\r\n                                        Actualizar\r\n                                    </button>\r\n                                    <button type=\"button\" (click)=\"asignarDetalles(producto)\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                                        Detalles\r\n                                    </button>\r\n                                    <button type=\"button\" (click)=\"asignarBorrar(producto.id, producto.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n            \r\n    <!--FOOTER DEL MODAL-->\r\n    <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" routerLink='/procura/proveedores' >\r\n                Cerrar\r\n            </button>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n\r\n<!-- MODAL DE INFO PRODUCTO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-info\">\r\n            <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfoProducto.nombre }}</strong></h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <table class=\"table table-sm\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.id }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Área</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.area }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Proveedor</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.nombreProveedor }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.precio != null && datosInfoProducto.unidad != null\">\r\n                    <th>Precio</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.precio | currency }} / {{ datosInfoProducto.unidad }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.garantia != null\">\r\n                    <th>Garantía</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.garantia }} / {{ datosInfoProducto.dias_garantia }} Días</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.fecha != null\">\r\n                    <th>Fecha Actualizado</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.fecha | date }}</td>\r\n                </tr>\r\n                <tr><th></th><td></td><td></td></tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <!-- FIN DEL MODAL INFO PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ELIMINAR PRODUCTO -->\r\n    <div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header bg-danger\">\r\n                <h5 class=\"modal-title text-white\">Eliminar Producto</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>¿Estás seguro que deseas eliminar <strong>{{ productoProveedorBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    Cancelar\r\n                </button>\r\n                <button (click)=\"eliminarProductoProducto()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                    Eliminar\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- FIN MODAL ELIMINAR PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ACTUALIZAR PRODUCTO -->\r\n    <form #fi=\"ngForm\">\r\n        <div class=\"modal fade\" tabindex=\"-1\" id=\"modalActualizar\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header bg-primary\">\r\n                        <h5 class=\"modal-title text-white\">Actualizar Precio Producto</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"row\">\r\n                            <p>Usted esta actualizando el producto <strong>{{ datosActualizarProducto.nombre }}</strong> del proveedor <strong>{{ datosActualizarProducto.nombreProveedor }}</strong>?.</p>\r\n                        </div>\r\n                        <div class=\"row mb-4 mt-4\">\r\n                            <div class=\"col\">\r\n                                <div class=\"mb-2\">\r\n                                    <label for=\"exampleInputEmail1\">Precio actual</label>\r\n                                </div>\r\n                                <p>{{datosActualizarProducto.precio | currency}} por {{datosActualizarProducto.unidad}}</p>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label for=\"exampleInputEmail1\">Precio nuevo</label>\r\n                                <div class=\"input-group\">\r\n                                    <input onkeypress=\"return event.charCode >= 48\"\r\n                                    min=\"1\"\r\n                                    type=\"number\"\r\n                                    [(ngModel)]=\"precioNuevo\"\r\n                                    [name]=\"'precioNuevo'\"\r\n                                    class=\"form-control mt-2\">\r\n                                    <input [placeholder]=\"datosActualizarProducto.unidad\" disabled type=\"text\" ngModel [name]=\"'unidadesAct'\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                        <div class=\"row\">\r\n                            <p><span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n                        </button>\r\n                        <button (click)=\"actualizarProductoPrecio()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\">\r\n                            Actualizar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <!-- FIN MODAL ACTUALIZAR PRODUCTO -->\r\n\r\n","import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n//SERVICIOS IMPORTADOS\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from '../../../services/proveedores.service'\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n@Component({\r\n  selector: 'app-agregar-producto',\r\n  templateUrl: './agregar-producto.component.html',\r\n  styleUrls: ['./agregar-producto.component.css']\r\n})\r\nexport class AgregarProductoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faMinusCircle = faMinusCircle;\r\n\r\n  //VARIABLES QUE ALMACENAN DATOS DE BD\r\n  areas: any = [];\r\n  proveedores:any = [];\r\n  unidades: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  nuevoProducto: any[] = [{\r\n      id: null,\r\n      nombre: null,\r\n      area: null,\r\n      unidad: null,\r\n      garantia: null,\r\n      dias_garantia: null,\r\n      proveedor: null,\r\n      fecha_act: null,\r\n      precio: null,\r\n    }];\r\n  valido: boolean = true;\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private servicioProductosProveedores: ProductosProveedoresService,\r\n              private servicioUnidades: UnidadesService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION PARA AGREGAR PRODUCTO A BD\r\n  onSubmit(){\r\n    for(let productoCiclo of this.nuevoProducto){\r\n      if(productoCiclo.nombre!=null && productoCiclo.nombre!=\"\" &&\r\n        productoCiclo.area!=null && productoCiclo.area!=\"\" &&\r\n        productoCiclo.proveedor!=null && productoCiclo.proveedor!=\"\" &&\r\n        productoCiclo.precio!=null && productoCiclo.precio!=\"\" &&\r\n        productoCiclo.unidad!=null && productoCiclo.unidad!=\"\"){\r\n          if(productoCiclo.garantia == 'No'){\r\n            productoCiclo.dias_garantia = 0;\r\n          }\r\n        this.servicioProductosProveedores.createProductoProveedor(productoCiclo).subscribe(\r\n          res => {console.log(res);\r\n                  this.form.reset();\r\n                  this.router.navigate(['procura/productos']);},\r\n          err => { console.log(err); });\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevoProducto = [{\r\n      id: null,\r\n      nombre: null,\r\n      area: null,\r\n      unidad: null,\r\n      garantia: null,\r\n      dias_garantia: null,\r\n      proveedor: null,\r\n      fecha_act: null,\r\n      precio: null,}];\r\n    this.router.navigate(['procura/productos']);\r\n  }\r\n\r\n  //FUNCION PARA REVISAR EL PRECIO INGRESADO POR EL USUARIO\r\n  revisarPrecio() {\r\n    for(let producto of this.nuevoProducto){\r\n      if(producto.precio <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n  this.valido = true;\r\n  }\r\n\r\n  //FUNCIONES DE AGREGAR MULTIPLE\r\n  agregarProducto() {\r\n    this.nuevoProducto.push({\r\n      id: null,\r\n      nombre: null,\r\n      area: null,\r\n      unidad: null,\r\n      garantia: null,\r\n      dias_garantia: null,\r\n      proveedor: null,\r\n      fecha_act: null,\r\n      precio: null});\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Agregar Producto de Proveedor</h3>\r\n                </div>  \r\n            </div>\r\n            <div class=\"container pe-5 ps-5 pt-2\">\r\n                <!-- INICIO DEL MODAL AGREGAR PRODUCTO -->\r\n                <form #f=\"ngForm\">\r\n                    <div *ngFor=\"let prod of nuevoProducto; let i=index\">\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Producto {{i+1}}</h5>\r\n                        </div>\r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-3 mb-4\">\r\n                                <div class=\"col-3\">\r\n                                    <label>Nombre</label>\r\n                                    <input #nombre=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].nombre\" required type=\"text\" [name]=\"'nombre'+ [i]\" class=\"form-control mt-2\">\r\n                                    <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                                </div>\r\n                                <div class=\"col-2\">\r\n                                    <label for=\"exampleFormControlSelect1\">Área profesional</label>\r\n                                    <select #area=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].area\" required class=\"form-select mt-2\"  [name]=\"'area'+ [i]\">\r\n                                        <option *ngFor=\"let area of areas\" value=\"{{ area.id }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!area.valid && area.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label for=\"exampleFormControlSelect1\">Proveedor</label>\r\n                                        <select #proveedor=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].proveedor\" required class=\"form-select mt-2\"  [name]=\"'proveedor'+ [i]\">\r\n                                    <option *ngFor=\"let prov of proveedores\" value=\"{{ prov.id }}\">{{ prov.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!area.valid && area.touched\" class=\"text-danger\">Ingrese un proveedor.</small>\r\n                                </div>\r\n                                <div class=\"col-2\">\r\n                                    <label for=\"exampleInputPassword1\">Precio y Unidades</label>\r\n                                    <div class=\"input-group\">\r\n                                    <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        required\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"nuevoProducto[i].precio\"\r\n                                        [name]=\"'precio'+ [i]\"\r\n                                        class=\"form-control mt-2\"\r\n                                        (keyup)='revisarPrecio()'>\r\n                                    <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevoProducto[i].unidad\" [name]=\"'unidades'+ [i]\" class=\"form-select mt-2\">\r\n                                        <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                                    </select>\r\n                                    </div>\r\n                                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese un precio.<br></small>\r\n                                    <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n                                </div>\r\n                                <div class=\"col-2\">\r\n                                    <label for=\"exampleInputPassword1\">Garantía y días</label>\r\n                                    <div class=\"input-group\">\r\n                                    <select #garantia=\"ngModel\" \r\n                                            required type=\"text\" \r\n                                            placeholder=\"0\" \r\n                                            [(ngModel)]=\"nuevoProducto[i].garantia\" \r\n                                            [name]=\"'garantia' + [i]\" class=\"form-select mt-2\">\r\n                                        <option value=\"Si\" > Si </option>\r\n                                        <option value=\"No\" > No </option>\r\n                                    </select>\r\n                                    <ng-container *ngIf=\"garantia.value == 'Si'\">\r\n                                        <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"nuevoProducto[i].dias_garantia\"\r\n                                        [name]=\"'dias' + [i]\"\r\n                                        class=\"form-control mt-2\">\r\n                                    </ng-container>\r\n                                    </div>\r\n                                    <small *ngIf=\"!garantia.valid && garantia.touched\" class=\"text-danger\">Reporte garantía.<br></small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--FOOTER DEL MODAL AGREGAR (FUNCIONES)-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"btn-group\">\r\n                                <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarProducto()\">\r\n                                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                                </button>\r\n                                <button type=\"button\" [hidden]=\"nuevoProducto.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevoProducto.length == 1\"  (click)=\"nuevoProducto.pop()\">\r\n                                    <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                                </button>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid || !valido' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n//SERVICIOS IMPORTADOS\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from '../../../services/proveedores.service'\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-agregar-proveedor',\r\n  templateUrl: './agregar-proveedor.component.html',\r\n  styleUrls: ['./agregar-proveedor.component.css']\r\n})\r\nexport class AgregarProveedorComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  //VARIABLES QUE ALMACENAN DATOS DE BD\r\n  areas: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  nuevoProveedor: any = \r\n    {\r\n      id: null,\r\n      nombre: null,\r\n      credito:null,\r\n      dias_credito:null,\r\n      ciudad: null,\r\n      area: null,\r\n      direccion: null,\r\n      correo: null,\r\n      telefono: null,\r\n      celular: null,\r\n      contacto: null,\r\n      rif: null,\r\n      descripcion: null,\r\n      responsable: null,\r\n    };\r\n\r\n  \r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION PARA AGREGAR PROVEEDOR A BD\r\n  onSubmit(){\r\n    let proveedorNuevo = this.nuevoProveedor\r\n    if(proveedorNuevo.nombre!=null && proveedorNuevo.nombre!=\"\" &&\r\n      proveedorNuevo.area!=null && proveedorNuevo.area!=\"\"){\r\n        if(proveedorNuevo.credito == 'No'){\r\n          proveedorNuevo.dias_credito = 0;\r\n        }\r\n      proveedorNuevo.responsable = this.auth.user.getValue().cedula;\r\n      this.servicioProveedores.createProveedor(proveedorNuevo).subscribe(\r\n        res => {console.log(res);\r\n                this.form.reset();\r\n                this.router.navigate(['procura/proveedores']);},\r\n        err => { console.log(err); });\r\n    }\r\n  }\r\n  \r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevoProveedor = {id: null,\r\n                          nombre: null,\r\n                          area: null,\r\n                          direccion: null,\r\n                          ciudad:null,\r\n                          credito:null,\r\n                          dias_credito:null,\r\n                          correo: null,\r\n                          telefono: null,\r\n                          celular: null,\r\n                          contacto: null,\r\n                          rif: null,\r\n                          descripcion: null};\r\n    this.router.navigate(['procura/proveedores']);\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Agregar Proveedor</h3>\r\n                </div>  \r\n            </div>\r\n            <div class=\"container pe-5 ps-5 pt-2\">\r\n            <!-- INICIO DEL MODAL AGREGAR PROVEEDOR -->\r\n                <form #f=\"ngForm\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Nombre jurídico del proveedor</label>\r\n                                <input #nombre=\"ngModel\" [(ngModel)]=\"nuevoProveedor.nombre\" required type=\"text\" [name]=\"'nombre'\" class=\"form-control mt-2\">\r\n                                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <label for=\"exampleFormControlSelect1\">Área profesional</label>\r\n                                <select #area=\"ngModel\" [(ngModel)]=\"nuevoProveedor.area\" required class=\"form-select mt-2\"  [name]=\"'area'\">\r\n                                <option *ngFor=\"let area of areas\" value=\"{{ area.id }}\">{{ area.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!area.valid && area.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>RIF del proveedor</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.rif\" [name]=\"'rif'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Ciudad y país</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.ciudad\" [name]=\"'ciudad'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-3\" >\r\n                                <label>Correo de contacto</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.correo\" [name]=\"'correo'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Teléfono fijo</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.telefono\" [name]=\"'telefono'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Celular de contacto</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.celular\" [name]=\"'celular'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Nombre del Vendedor ó Contacto</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.contacto\" [name]=\"'contacto'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Dirección fiscal del proveedor</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.direccion\" [name]=\"'direccion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label for=\"exampleInputPassword1\">Crédito y días</label>\r\n                                <div class=\"input-group\">\r\n                                <select #credito=\"ngModel\" type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevoProveedor.credito\" [name]=\"'credito'\" class=\"form-select mt-2\">\r\n                                    <option value=\"Si\" > Si </option>\r\n                                    <option value=\"No\" > No </option>\r\n                                </select>\r\n                                <ng-container *ngIf=\"credito.value == 'Si'\">\r\n                                    <input\r\n                                    onkeypress=\"return event.charCode >= 46\"\r\n                                    min=\"1\"\r\n                                    #cantidad=\"ngModel\"\r\n                                    type=\"number\"\r\n                                    [(ngModel)]=\"nuevoProveedor.dias_credito\"\r\n                                    [name]=\"'dias'\"\r\n                                    class=\"form-control mt-2\">\r\n                                </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Descripción</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.descripcion\" [name]=\"'descripcion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                        </div>\r\n\r\n                    <!--FOOTER DEL MODAL AGREGAR (FUNCIONES)-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductosService } from 'src/app/services/productos.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\n\r\n@Component({\r\n  selector: 'app-gestion-productos',\r\n  templateUrl: './gestion-productos.component.html',\r\n  styleUrls: ['./gestion-productos.component.css']\r\n})\r\nexport class GestionProductosComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faTrashAlt = faTrashAlt;\r\n  faFileDownload = faFileDownload;\r\n  faSyncAlt = faSyncAlt;\r\n  faPencilAlt = faPencilAlt;\r\n  \r\n  \r\n  //VARIABLES DE BD\r\n  productos: any = [];\r\n  unidades: any =[];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  nuevoProducto: any[] = [{\r\n    id: null,\r\n    nombre: null,\r\n    unidad: null,\r\n  }];\r\n\r\n  productoModificar: any = {\r\n    id: null,\r\n    nombre: null,\r\n    unidad: null\r\n  }\r\n\r\n  productoBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n\r\n  constructor(private servicioProductos: ProductosService,\r\n              private servicioUnidades: UnidadesService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioProductos.getProductos().subscribe(\r\n      res => {this.productos = res;},\r\n      err => console.log(err));\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n    }\r\n    \r\n  //FUNCION PARA AGREGAR PRODUCTO A BD\r\n  onSubmit(){\r\n    for(let productoCiclo of this.nuevoProducto){\r\n      if(productoCiclo.nombre!=null && productoCiclo.nombre!=\"\" &&\r\n        productoCiclo.unidad!=null && productoCiclo.unidad!=\"\"){ \r\n          console.log(productoCiclo);\r\n        this.servicioProductos.createProducto(productoCiclo).subscribe(\r\n          res => {console.log(res);\r\n                  this.form.reset();\r\n                  this.router.navigate(['procura/productos']);},\r\n          err => { console.log(err); });\r\n      }\r\n    }\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevoProducto = [{\r\n      id: null,\r\n      nombre: null,\r\n      unidad: null,}];\r\n    this.router.navigate(['procura/productos']);\r\n  }\r\n\r\n  //FUNCIONES DE AGREGAR MULTIPLE\r\n  agregarProducto() {\r\n    this.nuevoProducto.push({\r\n      id: null,\r\n      nombre: null,\r\n      unidad: null});\r\n    }\r\n\r\n  //FUNCION PARA BOTON DE MODIFICAR (DATOS)\r\n  asignarModificar(idProducto:string){\r\n    this.productoModificar = Object.assign({}, this.productos.find(producto => producto.id == idProducto));\r\n  }\r\n\r\n  //FUNCION MODIFICAR PRODUCTO\r\n  onModificar() {\r\n    this.productoModificar.unidad = this.unidades.find(unidad => unidad.nombre == this.productoModificar.unidad).id;\r\n    console.log(this.productoModificar);\r\n    this.servicioProductos.updateProducto(this.productoModificar.id, this.productoModificar).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE BORRAR PRODUCTO (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.productoBorrar.nombre = nombre;\r\n    this.productoBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  eliminarProducto() {\r\n    this.servicioProductos.deleteProducto(this.productoBorrar.id).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);});\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container-fluid\">\r\n    <h1>Gestión de productos</h1>\r\n        <div class=\"parent\">\r\n            <div class=\"elemento1\">\r\n                <div class=\"container\">\r\n                    <div class=\"body form-body-style-agregar\">\r\n                        <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                            <div class=\"mx-auto\">\r\n                                <h3>Agregar Producto Nuevo</h3>\r\n                            </div>  \r\n                        </div>\r\n                        <div class=\"container pe-5 ps-5 pt-2\">\r\n                            <!-- INICIO DEL MODAL AGREGAR PRODUCTO NUEVO-->\r\n                            <form #f=\"ngForm\">\r\n                                <div *ngFor=\"let prod of nuevoProducto; let i=index\">\r\n                                    <div class=\"container mt-2\">\r\n                                        <h5>Producto {{i+1}}</h5>\r\n                                    </div>\r\n                                    <div class=\"container\">\r\n                                        <div class=\"row mt-3 mb-4\">\r\n                                            <div class=\"col\">\r\n                                                <label>Nombre</label>\r\n                                                <input #nombre=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].nombre\" required type=\"text\" [name]=\"'nombre'+ [i]\" class=\"form-control mt-2\">\r\n                                                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                                            </div>\r\n                                            <div class=\"col\">\r\n                                                <label for=\"exampleFormControlSelect1\">Unidad</label>\r\n                                                <select #unidad=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].unidad\" required class=\"form-select mt-2\"  [name]=\"'unidad'+ [i]\">\r\n                                                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                                                </select>\r\n                                                <small *ngIf=\"!unidad.valid && unidad.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!--FOOTER DEL MODAL AGREGAR (FUNCIONES)-->\r\n                                <div class=\"form-footer-style\">\r\n                                    <div class=\"modal-footer\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarProducto()\">\r\n                                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                                            </button>\r\n                                            <button type=\"button\" [hidden]=\"nuevoProducto.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevoProducto.length == 1\"  (click)=\"nuevoProducto.pop()\">\r\n                                                <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                                            </button>\r\n                                        </div>\r\n                                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Volver\r\n                                        </button>\r\n                                        <button [disabled]='!f.valid' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-agregar\" (click)=\"onSubmit()\">\r\n                                            <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingresar\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"elemento2\">\r\n                <div class=\"container especial\">\r\n                    <div class=\"table-responsive-sm special\">\r\n                        <table class=\"table table-sm shadow table-striped\">\r\n                            <thead class=\"table-dark\">\r\n                                <tr>\r\n                                    <!--FILTROS TABLA DE PRODUCTOS-->\r\n                                    <th colspan=\"2\" scope=\"col-1\">\r\n                                        <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n                                    </th>\r\n                                    <th colspan=\"2\" scope=\"col-1\"></th>\r\n                                    <th colspan=\"2\" scope=\"col-1\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <thead class=\"table-dark\">\r\n                                <tr>\r\n                                    <th colspan=\"2\" scope=\"col\">Nombre</th>\r\n                                    <th colspan=\"2\" scope=\"col\">Unidad</th>\r\n                                    <th colspan=\"2\" scope=\"col\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <ng-container *ngFor=\"let producto of productos; let i=index\">\r\n                                <!--FILTROS DE TABLA DE PRODUCTOS-->\r\n                                    <tr\r\n                                    class=\"bg-light table-sm linea-tabla\"\r\n                                    scope=\"row\"\r\n                                    *ngIf=\"(producto.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\">\r\n                                        <td colspan=\"1\" class=\"col\">{{ producto.nombre }}</td>\r\n                                        <td colspan=\"2\" class=\"col\">{{ producto.unidad }}</td>\r\n                                        <td colspan=\"2\" class=\"col\">\r\n                                            <div class=\"btn-group\">\r\n                                                <button type=\"button\" (click)=\"asignarModificar(producto.id)\" class=\"btn btn-primary text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalModificar\">\r\n                                                    <fa-icon [icon]=\"faPencilAlt\"></fa-icon>  Modificar\r\n                                                </button>\r\n                                                <button type=\"button\" (click)=\"asignarBorrar(producto.id, producto.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                                    <fa-icon [icon]=\"faTrashAlt\"></fa-icon>  Eliminar\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-container>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- INICIO MODAL ELIMINAR PRODUCTO -->\r\n<div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-danger\">\r\n            <h5 class=\"modal-title text-white\">Eliminar Producto</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p>¿Estás seguro que deseas eliminar <strong>{{ productoBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n            </button>\r\n            <button (click)=\"eliminarProducto()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                <fa-icon [icon]=\"faTrashAlt\"></fa-icon> Eliminar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR PRODUCTO -->\r\n\r\n<!-- INICIO MODAL MODIFICAR PRODUCTO -->\r\n<div class=\"modal fade\" tabindex=\"-1\" id=\"modalModificar\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <form #f=\"ngForm\">\r\n                <div class=\"modal-header bg-primary\">\r\n                    <h5 class=\"modal-title text-white\">{{ productoModificar.nombre }}</h5>\r\n                </div>\r\n                    <div class=\"container\">\r\n                        <div class=\"container mt-3\">\r\n                            <h5>Ingrese los datos que desee modificar</h5>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Nombre</label>\r\n                                <input #nombreModif=\"ngModel\" [(ngModel)]=\"productoModificar.nombre\" type=\"text\" name=\"nombre\" class=\"form-control mt-2\">\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label for=\"exampleFormControlSelect1\">Unidad</label>\r\n                                <select #unidadModif=\"ngModel\" [(ngModel)]=\"productoModificar.unidad\" class=\"form-select mt-2\"  name=\"unidadModif\">\r\n                                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                <!--FOOTER DEL MODAL MODIFICAR (FUNCIONES)-->\r\n                <div class=\"form-footer-style\">\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                        </button>\r\n                        <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"onModificar()\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- FIN MODAL MODIFICAR PRODUCTO -->","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-modificar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Modificar Producto</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-3'>\r\n                <form #f=\"ngForm\">\r\n                    <!--FILTROS PARA SELECCIONAR PRODUCTO A MODIFICAR-->\r\n                        <div class=\"container \">\r\n                            <h5>Seleccione el producto a modificar:</h5>\r\n                        </div>  \r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-2 mb-4\">\r\n                                <div class=\"col-4\">\r\n                                    <label>Área profesional</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectAreaModificar\" #selectAreaModificar=\"ngModel\">\r\n                                    <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectAreaModificar.valid && selectAreaModificar.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label>Proveedor</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectProveedorModificar\" #selectProveedorModificar=\"ngModel\">\r\n                                    <option *ngFor=\"let proveedor of proveedores\" value=\"{{ proveedor.nombre }}\">{{ proveedor.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectProveedorModificar.valid && selectProveedorModificar.touched\" class=\"text-danger\">Ingrese un proveedor.</small>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label>Producto</label>\r\n                                    <select #idProducto=\"ngModel\" (change)=\"alElegirProducto(idProducto.value)\" class=\"form-select mt-2\" ngModel required name=\"item\" #selectProductoModif='ngModel'>\r\n                                    <ng-container *ngFor=\"let producto of productosProveedores\">\r\n                                        <option\r\n                                        *ngIf=\"producto.area == selectAreaModificar.value &&\r\n                                                producto.nombreProveedor == selectProveedorModificar.value\"\r\n                                        value='{{producto.id}}'>{{ producto.nombre }}</option>\r\n                                        </ng-container>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectProductoModif.valid && selectProductoModif.touched\" class=\"text-danger\">Ingrese un producto.</small>\r\n                                </div>\r\n                        </div>\r\n                        <hr>\r\n                        <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS DEL PRODUCTO-->\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Modifique los datos que desee:</h5>\r\n                        </div>  \r\n                            <div class=\"row mt-2 mb-5\">\r\n                                <div class=\"col-4\">\r\n                                    <label>Nombre</label>\r\n                                    <input required type=\"text\"\r\n                                    [(ngModel)]=\"productoElegido.nombre\"\r\n                                    name=\"nombre\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Área profesional</label>\r\n                                    <select required class=\"form-select mt-2\"\r\n                                    [(ngModel)]=\"productoElegido.area\"\r\n                                    name=\"area\">\r\n                                        <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>Proveedor</label>\r\n                                    <select required class=\"form-select mt-2\"\r\n                                    [(ngModel)]=\"productoElegido.nombreProveedor\"\r\n                                    name=\"proveedor\">\r\n                                        <option *ngFor=\"let proveedor of proveedores\" value=\"{{ proveedor.nombre }}\">{{ proveedor.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col\">\r\n                                    <label for=\"exampleInputPassword1\">Precio y Unidades</label>\r\n                                    <div class=\"input-group\">\r\n                                        <input\r\n                                            onkeypress=\"return event.charCode >= 46\"\r\n                                            min=\"1\"\r\n                                            #cantidad=\"ngModel\"\r\n                                            required\r\n                                            type=\"number\"\r\n                                            [(ngModel)]=\"productoElegido.precio\"\r\n                                            [name]=\"'precio'\"\r\n                                            class=\"form-control mt-2\"\r\n                                            (keyup)='revisarPrecio()'>\r\n                                        <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"productoElegido.unidad\" [name]=\"'unidades'\" class=\"form-select mt-2\">\r\n                                            <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label for=\"exampleInputPassword1\">Garantía y días</label>\r\n                                    <div class=\"input-group\">\r\n                                    <select #garantia=\"ngModel\" \r\n                                            required type=\"text\" \r\n                                            placeholder=\"0\" \r\n                                            [(ngModel)]=\"productoElegido.garantia\" \r\n                                            [name]=\"'garantia'\" class=\"form-select mt-2\">\r\n                                        <option value=\"Si\" > Si </option>\r\n                                        <option value=\"No\" > No </option>\r\n                                    </select>\r\n                                    <ng-container *ngIf=\"garantia.value == 'Si'\">\r\n                                        <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"productoElegido.dias_garantia\"\r\n                                        [name]=\"'dias'\"\r\n                                        class=\"form-control mt-2\">\r\n                                    </ng-container>\r\n                                    </div>\r\n                                    <small *ngIf=\"!garantia.valid && garantia.touched\" class=\"text-danger\">Reporte garantía.<br></small>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>Fecha Actualizado</label>\r\n                                    <input class=\"form-control mt-2\" [(ngModel)]=\"productoElegido.fecha_act\" [name]=\"'fechaActualizacion'\" type=\"date\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    <!--BOTONES FUNCIONES MODIFICAR PRODUCTO-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button (click)=\"borrarForm()\" type=\"button\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid || !valido' (click)=\"onModificar()\" type=\"button\" class=\"btn btn-primary text-white\">\r\n                                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-modificar-producto',\r\n  templateUrl: './modificar-producto.component.html',\r\n  styleUrls: ['./modificar-producto.component.css']\r\n})\r\nexport class ModificarProductoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  //VARIABLES QUE ALMACEN INFO DE BD\r\n  proveedores: any = [];\r\n  areas:any = [];\r\n  unidades: any = [];\r\n  productosProveedores: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  productoElegido: any = {\r\n    id: null,\r\n    nombre: null,\r\n    unidad: null,\r\n    nombreProveedor: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    fecha_act: null,\r\n    precio: null,\r\n    area: null,\r\n  };\r\n  valido: boolean = true;\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioProductosProveedores: ProductosProveedoresService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n    this.servicioProductosProveedores.getProductosProveedores().subscribe(\r\n      res => {this.productosProveedores = res;},\r\n      err => console.log(err));\r\n  }\r\n//ENCUENTRA EL ID DEL PRODUCTO A MODIFICAR\r\nalElegirProducto(idProducto: string) {\r\n  this.productoElegido = Object.assign({}, this.productosProveedores.find(producto => producto.id == idProducto));\r\n}\r\n\r\n//FUNCION MODIFICAR PRODUCTO\r\nonModificar() {\r\n  this.productoElegido.area = this.areas.find(area => area.nombre == this.productoElegido.area).id;\r\n  this.productoElegido.unidad = this.unidades.find(unidad => unidad.nombre == this.productoElegido.unidad).id;\r\n  this.productoElegido.nombreProveedor = this.proveedores.find(proveedor => proveedor.nombre == this.productoElegido.nombreProveedor).id;\r\n  if(this.productoElegido.garantia == 'No'){\r\n    this.productoElegido.dias_garantia = 0;\r\n  }\r\n  this.servicioProductosProveedores.updateProductoProveedor(this.productoElegido.id, this.productoElegido).subscribe(\r\n    res => {console.log(res);\r\n            this.router.navigate(['procura/productos']);\r\n            this.form.reset();},\r\n    err => {console.log(err);}\r\n  );\r\n  \r\n}\r\n\r\n//FUNCION PARA REVISAR EL PRECIO INGRESADO POR EL USUARIO MODIFICAR\r\nrevisarPrecio() {\r\n  if(this.productoElegido.precio <= 0) {\r\n    this.valido = false;\r\n    return\r\n  }\r\nthis.valido = true;\r\n}\r\n\r\n//FUNCION PARA BORRAR FORMULARIO\r\nborrarForm() {\r\n  this.form.reset();\r\n  this.router.navigate(['procura/productos']);\r\n}\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-modificar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Modificar Proveedor</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                    <!--FILTROS PARA SELECCIONAR PROVEEDOR A MODIFICAR-->\r\n                    <div class=\"container mt-2\">\r\n                        <h5>Seleccione el proveedor a modificar:</h5>\r\n                    </div> \r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-2 mb-4\">\r\n                                <div class=\"col-6\">\r\n                                    <label>Área</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectAreaModificar\" #selectAreaModificar=\"ngModel\">\r\n                                    <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectAreaModificar.valid && selectAreaModificar.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <label>Proveedor</label>\r\n                                    <select #idProveedor=\"ngModel\" (change)=\"alElegirProveedor(idProveedor.value)\" class=\"form-select mt-2\" ngModel required name=\"item\" #selectProveedorModif='ngModel'>\r\n                                    <ng-container *ngFor=\"let proveedor of proveedores\">\r\n                                        <option\r\n                                        *ngIf=\"proveedor.area == selectAreaModificar.value\"\r\n                                        value='{{proveedor.id}}'>{{ proveedor.nombre }}</option>\r\n                                        </ng-container>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectProveedorModif.valid && selectProveedorModif.touched\" class=\"text-danger\">Ingrese un proveedor.</small>\r\n                                </div>\r\n                            </div>\r\n                        <hr>\r\n                            <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS DEL PROVEEDOR-->\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Modifique los datos que desee:</h5>\r\n                        </div>    \r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col-4\">\r\n                                    <label>Nombre jurídico del proveedor</label>\r\n                                    <input required type=\"text\"\r\n                                    [(ngModel)]=\"proveedorElegido.nombre\"\r\n                                    name=\"nombre\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Área profesional</label>\r\n                                    <select required class=\"form-select mt-2\"\r\n                                    [(ngModel)]=\"proveedorElegido.area\"\r\n                                    name=\"area\">\r\n                                        <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>RIF del proveedor</label>\r\n                                    <input type=\"text\"\r\n                                    [(ngModel)]=\"proveedorElegido.rif\"\r\n                                    name=\"serial\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>Ciudad y país</label>\r\n                                    <input type=\"text\"\r\n                                    [(ngModel)]=\"proveedorElegido.ciudad\"\r\n                                    name=\"ciudad\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col-3\" >\r\n                                    <label>Correo de contacto</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.correo\" [name]=\"'correo'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Teléfono fijo</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.telefono\" [name]=\"'telefono'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Celular de contacto</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.celular\" [name]=\"'celular'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Nombre del Vendedor ó Contacto</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.contacto\" [name]=\"'contacto'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col\">\r\n                                    <label>Dirección fiscal del proveedor</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.direccion\" [name]=\"'direccion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label for=\"exampleInputPassword1\">Crédito y días</label>\r\n                                    <div class=\"input-group\">\r\n                                    <select #credito=\"ngModel\" type=\"text\" \r\n                                            placeholder=\"0\" \r\n                                            [(ngModel)]=\"proveedorElegido.credito\" \r\n                                            [name]=\"'credito'\" class=\"form-select mt-2\">\r\n                                        <option value=\"Si\" > Si </option>\r\n                                        <option value=\"No\" > No </option>\r\n                                    </select>\r\n                                    <ng-container *ngIf=\"credito.value == 'Si'\">\r\n                                        <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"proveedorElegido.dias_credito\"\r\n                                        [name]=\"'dias'\"\r\n                                        class=\"form-control mt-2\">\r\n                                    </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col\">\r\n                                    <label>Descripción</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.descripcion\" [name]=\"'descripcion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    <!--BOTONES FUNCIONES MODIFICAR-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button (click)=\"borrarForm()\" type=\"button\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid' (click)=\"onModificar()\" type=\"button\" class=\"btn btn-primary text-white\">\r\n                                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\n\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-modificar-proveedor',\r\n  templateUrl: './modificar-proveedor.component.html',\r\n  styleUrls: ['./modificar-proveedor.component.css']\r\n})\r\nexport class ModificarProveedorComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  //VARIABLES QUE ALMACEN INFO DE BD\r\n  proveedores: any = [];\r\n  areas:any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  proveedorElegido: any =\r\n  {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    direccion: null,\r\n    correo: null,\r\n    telefono: null,\r\n    contacto: null,\r\n    ciudad: null,\r\n    celular: null,\r\n    credito: null,\r\n    dias_credito: null,\r\n    rif: null,\r\n    descripcion: null,\r\n  };\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //ENCUENTRA EL ID DEL PROVEEDOR A MODIFICAR\r\n  alElegirProveedor(idProveedor: string) {\r\n    this.proveedorElegido = Object.assign({}, this.proveedores.find(proveedor => proveedor.id == idProveedor));\r\n    console.log(this.proveedorElegido);\r\n  }\r\n\r\n  //FUNCION MODIFICAR PROVEEDOR\r\n  onModificar() {\r\n    if(this.proveedorElegido.credito == 'No'){\r\n      this.proveedorElegido.dias_credito = 0;\r\n    }\r\n    this.proveedorElegido.area = this.areas.find(area => area.nombre == this.proveedorElegido.area).id;\r\n    this.servicioProveedores.updateProveedor(this.proveedorElegido.id, this.proveedorElegido).subscribe(\r\n      res => {console.log(res);\r\n              this.router.navigate(['procura/proveedores']);\r\n              this.form.reset();\r\n      },\r\n      err => {console.log(err);}\r\n    );\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['procura/proveedores']);\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-procura-base',\n  templateUrl: './procura-base.component.html',\n  styleUrls: ['./procura-base.component.css']\n})\nexport class ProcuraBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFolderPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-productos',\r\n  templateUrl: './productos.component.html',\r\n  styleUrls: ['./productos.component.css']\r\n})\r\nexport class ProductosComponent implements OnInit {\r\n\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faListAlt = faListAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n  faTrashAlt = faTrashAlt;\r\n  faFileDownload = faFileDownload;\r\n  faSyncAlt = faSyncAlt;\r\n  faFolderPlus = faFolderPlus;\r\n\r\n  //VARIABLES QUE ALMACENA INFO DE BD\r\n  proveedores: any = [];\r\n  productosProveedores: any = [];\r\n  areas: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES COMPONENT\r\n  datosInfoProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    nombreProveedor: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    fecha_act: null,\r\n    precio: null,\r\n  }\r\n\r\n  datosActualizarProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    nombreProveedor: null,\r\n    fecha_act: null,\r\n    precio: null,\r\n  }\r\n  \r\n  precioNuevo:number = null;\r\n  \r\n  productoProveedorBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n  oculto:boolean = true;\r\n\r\n  modoActPrecios = false;\r\n  preciosNuevos: any[] = [{\r\n    index: null,\r\n    idProductoAct: null,\r\n    precioNuevo: null,\r\n  }];\r\n\r\n  constructor(private servicioProductosProveedores: ProductosProveedoresService,\r\n              private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioProductosProveedores.getProductosProveedores().subscribe(\r\n      res => {this.productosProveedores = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE DETALLES DE PRODUCTO\r\n  asignarDetalles(producto:any){\r\n    this.datosInfoProducto = producto;\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE ACTUALIZAR  PRODUCTO\r\n  asignarActualizar(producto:any){\r\n    this.datosActualizarProducto = producto;\r\n    console.log(this.datosActualizarProducto);\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  actualizarProductoPrecio() {\r\n    if(this.precioNuevo!=null && this.precioNuevo>=0){\r\n      this.servicioProductosProveedores.updatePrecioProducto(this.datosActualizarProducto.id, this.precioNuevo).subscribe(\r\n        res => {console.log(res);\r\n        this.form.reset()},\r\n        err => {console.log(err);});\r\n    } \r\n  }\r\n  \r\n\r\n  //FUNCION PARA BOTON DE BORRAR PRODUCTO (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.productoProveedorBorrar.nombre = nombre;\r\n    this.productoProveedorBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  eliminarProductoProducto() {\r\n    this.servicioProductosProveedores.deleteProductoProveedor(this.productoProveedorBorrar.id).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);});\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE PRODUCTO\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Productos_Proveedores.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  onGuardarCambios() {\r\n\r\n  }\r\n\r\n  modoActPreciosOn() {\r\n    this.modoActPrecios = true;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid mt-lg-3\">\r\n    <!--BOTONES PARA GESTIONAR PRODUCTOS-->\r\n    <div class=\"row px-4\">\r\n        <div class=\"col-3\">\r\n            <h1>Productos</h1>\r\n        </div>\r\n        <div class=\"col-9 mt-lg-3\">\r\n            <button type=\"button\" class=\"btn cool-btn btn-gestionar float-end ms-5\" routerLink='gestionar'>\r\n                <fa-icon [icon]=\"faFolderPlus\"></fa-icon> Gestionar Productos\r\n            </button>\r\n            <div class=\"btn-group float-end\" role=\"group\">\r\n                <button *ngIf=\"modoActPrecios\" type=\"button\" class=\"btn cool-btn btn-success\" (click)='onGuardarCambios()'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Guardar cambios\r\n                </button>\r\n                <button *ngIf=\"modoActPrecios\" type=\"button\" class=\"btn cool-btn btn-danger\" (click)='modoActPrecios=false'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Cancelar\r\n                </button>\r\n                <button *ngIf=\"!modoActPrecios\" type=\"button\" class=\"btn cool-btn btn-primary\" hidden (click)='modoActPreciosOn()'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Actualizar precios\r\n                </button>\r\n                <button type=\"button\" class=\"btn cool-btn btn-success\" routerLink='agregar'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary cool-btn text-white\" routerLink='modificar'>\r\n                    <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                </button>\r\n                <button class=\"btn btn-warning text-dark cool-btn float-right\" data-bs-toggle=\"modal\" data-bs-target=\"#pdfProveedores\">\r\n                    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row px-4\">\r\n    <!--TABLA DE PRODUCTOS-->\r\n    <div class=\"table-responsive-md mt-lg-3\">\r\n        <table class=\"table table-sm shadow table-striped\">\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <!--FILTROS TABLA DE PRODUCTOS-->\r\n                <th scope=\"col-2\">\r\n                    <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n                </th>\r\n                <th scope=\"col-2\">\r\n                    <select #filtroArea=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroArea\">\r\n                    <option value=\"\">Area (Todas)</option>\r\n                    <option [value]=\"area.nombre\" *ngFor=\"let area of areas\">{{ area.nombre }}</option>\r\n                    </select>\r\n                </th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <th scope=\"col-sm-2\">Nombre</th>\r\n                <th scope=\"col-sm-2\">Área</th>\r\n                <th scope=\"col-sm-2\">Proveedor</th>\r\n                <th scope=\"col-sm-2\">Precio/Unidad</th>\r\n                <th *ngIf=\"modoActPrecios\" scope=\"col-sm-2\">Nuevo precio</th>\r\n                <th scope=\"col-sm-2\">Fecha Actualizado</th>\r\n                <th scope=\"col-sm-2\"></th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <ng-container *ngFor=\"let producto of productosProveedores; let i=index\">\r\n            <!--FILTROS DE TABLA DE PRODUCTOS-->\r\n                <tr\r\n                class=\"bg-light table-sm linea-tabla\"\r\n                scope=\"row\"\r\n                *ngIf=\"(\r\n                        (producto.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                        &&\r\n                        (producto.area.toLocaleLowerCase().includes(filtroArea.value.toLowerCase()) || filtroArea.value == ''))\">\r\n                    <td class=\"col-sm-2\">{{ producto.nombre }}</td>\r\n                    <td class=\"col-sm-2\">{{ producto.area }}</td>\r\n                    <td class=\"col-sm-2\">{{ producto.nombreProveedor }}</td>\r\n                    <td class=\"col-sm-2\">{{ producto.precio | currency}} / {{ producto.unidad }}</td>\r\n                    <td *ngIf=\"modoActPrecios\" class=\"col-sm-2\">\r\n                        <form #f=\"ngForm\">\r\n                            <input [(ngModel)]='preciosNuevos[i].precio' [name]=\"'nuevoPrecio' + i\" type=\"number\" class=\"form-control form-control-sm\">\r\n                        </form>\r\n                    </td>\r\n                    <td class=\"col-sm-2\">{{ producto.fecha | date}}</td>\r\n                    <td class=\"col-sm-2\">\r\n                        <!--BOTONES DE DETALLES Y ELIMINACION-->\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" (click)=\"asignarActualizar(producto)\" class=\"btn btn-primary text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalActualizar\">\r\n                                <fa-icon [icon]=\"faSyncAlt\"></fa-icon>  Actualizar\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"asignarDetalles(producto)\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                                <fa-icon [icon]=\"faInfoCircle\"></fa-icon>  Detalles\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"asignarBorrar(producto.id, producto.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                <fa-icon [icon]=\"faTrashAlt\"></fa-icon>  Eliminar\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL DE INFO PRODUCTO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-info\">\r\n            <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfoProducto.nombre }}</strong></h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <table class=\"table table-sm\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.id }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Área</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.area }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Proveedor</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.nombreProveedor }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.precio != null && datosInfoProducto.unidad != null\">\r\n                    <th>Precio</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.precio | currency }} / {{ datosInfoProducto.unidad }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.garantia != null && datosInfoProducto.garantia != null\">\r\n                    <th>Garantía del proveedor (días)</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.garantia }} / {{ datosInfoProducto.dias_garantia }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.fecha != null\">\r\n                    <th>Fecha Actualizado</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.fecha | date }}</td>\r\n                </tr>\r\n                <tr><th></th><td></td><td></td></tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <!-- FIN DEL MODAL INFO PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ELIMINAR PRODUCTO -->\r\n    <div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header bg-danger\">\r\n                <h5 class=\"modal-title text-white\">Eliminar Producto</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>¿Estás seguro que deseas eliminar <strong>{{ productoProveedorBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n                </button>\r\n                <button (click)=\"eliminarProductoProducto()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                    <fa-icon [icon]=\"faTrashAlt\"></fa-icon> Eliminar\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- FIN MODAL ELIMINAR PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ACTUALIZAR PRODUCTO -->\r\n    <form #f=\"ngForm\">\r\n        <div class=\"modal fade\" tabindex=\"-1\" id=\"modalActualizar\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header bg-primary\">\r\n                        <h5 class=\"modal-title text-white\">Actualizar Precio Producto</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"row\">\r\n                            <p>Usted esta actualizando el producto <strong>{{ datosActualizarProducto.nombre }}</strong> del proveedor <strong>{{ datosActualizarProducto.nombreProveedor }}</strong>?.</p>\r\n                        </div>\r\n                        <div class=\"row mb-4 mt-4\">\r\n                            <div class=\"col\">\r\n                                <div class=\"mb-2\">\r\n                                    <label for=\"exampleInputEmail1\">Precio actual</label>\r\n                                </div>\r\n                                <p>{{datosActualizarProducto.precio | currency}} por {{datosActualizarProducto.unidad}}</p>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label for=\"exampleInputEmail1\">Precio nuevo</label>\r\n                                <div class=\"input-group\">\r\n                                    <input onkeypress=\"return event.charCode >= 48\"\r\n                                    min=\"1\"\r\n                                    type=\"number\"\r\n                                    [(ngModel)]=\"precioNuevo\"\r\n                                    [name]=\"'precioNuevo'\"\r\n                                    class=\"form-control mt-2\">\r\n                                    <input [placeholder]=\"datosActualizarProducto.unidad\" disabled type=\"text\" ngModel [name]=\"'unidadesAct'\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                        <div class=\"row\">\r\n                            <p><span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n                        </button>\r\n                        <button (click)=\"actualizarProductoPrecio()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\">\r\n                            <fa-icon [icon]=\"faSyncAlt\"></fa-icon> Actualizar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <!-- FIN MODAL ACTUALIZAR PRODUCTO -->\r\n\r\n    <!-- MODAL PDF DE PRODUCTO-->\r\n    <div class=\"modal fade\" id=\"pdfProveedores\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n                <div class=\"btn-group rounded\" role=\"group\">\r\n                    <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-warning\">\r\n                        <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-body\" id='elemento-a-exportar'>\r\n            <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n            <div class=\"row\">\r\n                <h4>Productos</h4>\r\n            </div>\r\n            <div class=\"row\">\r\n                <!--Tabla de inventario en donde se muestra el inventario general-->\r\n                <table class=\"table table-sm letras\">\r\n                    <thead class=\"thead bg-secondary text-white\">\r\n                    <tr>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Área</th>\r\n                        <th scope=\"col\">Proveedor</th>\r\n                        <th scope=\"col\">Precio</th>\r\n                        <th scope=\"col\">Garantía</th>\r\n                        <th scope=\"col\">Fecha Actualizado</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <ng-container *ngFor=\"let productoPDF of productosProveedores\">\r\n                        <tr>\r\n                        <td>{{ productoPDF.nombre }}</td>\r\n                        <td>{{ productoPDF.area }}</td>\r\n                        <td>{{ productoPDF.nombreProveedor }}</td>\r\n                        <td>{{ productoPDF.precio |currency }} / {{ productoPDF.unidad }}</td>\r\n                        <td>{{ productoPDF.garantia }} / {{ productoPDF.dias_garantia }} Días</td>\r\n                        <td>{{ productoPDF.fecha | date }}</td>\r\n                        </tr>\r\n                    </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <!-- MODAL PDF DE PRODUCTO-->\r\n","import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from '../../../services/proveedores.service'\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faList } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-proveedores',\r\n  templateUrl: './proveedores.component.html',\r\n  styleUrls: ['./proveedores.component.css']\r\n})\r\nexport class ProveedoresComponent implements OnInit {\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faListAlt = faListAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n  faTrashAlt = faTrashAlt;\r\n  faFileDownload = faFileDownload;\r\n\r\n  //VARIABLES QUE ALMACENAN DATOS DE BD\r\n  proveedores: any = [];\r\n  areas: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES COMPONENT\r\n  datosInfo: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    descripcion: null,\r\n    rif: null,\r\n    fecha: null,\r\n    contacto: null,\r\n    telefono: null,\r\n    direccion: null,\r\n    correo: null,\r\n  }\r\n  proveedorBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n  oculto:boolean = true;\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              public router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {\r\n        this.proveedores = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {\r\n        this.areas = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n\r\n  //FUNCION PARA BOTON DE DETALLES DE PROVEEDOR\r\n  asignarDetalles(proveedor:any){\r\n    this.datosInfo = proveedor;\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE BORRAR PROVEEDOR (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.proveedorBorrar.nombre = nombre;\r\n    this.proveedorBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PROVEEDOR\r\n  eliminarProveedor() {\r\n    this.servicioProveedores.deleteProveedor(this.proveedorBorrar.id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE PROVEEDORES\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Proveedores.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  //FUNCION PARA NAVEGAR A ACTUALIZAR PRODUCTOS\r\n  aProductos(id: string) {\r\n    this.router.navigate([`/procura/proveedores/${id}/productos`]);\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid mt-lg-3\">\r\n    <!--BOTONES PARA GESTIONAR PROVEEDORES-->\r\n    <div class=\"row px-4\">\r\n        <div class=\"col-3\">\r\n            <h1>Proveedores</h1>\r\n        </div>\r\n        <div class=\"col-9 mt-lg-3\">\r\n            <div class=\"btn-group float-end\" role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n                <button type=\"button\" class=\"btn btn-success cool-btn\" routerLink='agregar'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary cool-btn text-white\" routerLink='modificar'>\r\n                    <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                </button>\r\n                <button class=\"btn btn-warning text-dark cool-btn\" data-bs-toggle=\"modal\" data-bs-target=\"#pdfProveedores\">\r\n                    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row px-4\">\r\n    <!--TABLA DE PROVEEDORES-->\r\n    <div class=\"table-responsive-md mt-lg-3\">\r\n        <table class=\"table table-sm shadow table-striped\">\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <!--FILTROS TABLA DE PROVEEDORES-->\r\n                <th scope=\"col-2\">\r\n                    <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n                </th>\r\n                <th scope=\"col-2\">\r\n                    <select #filtroArea=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroArea\">\r\n                    <option value=\"\">Area (Todas)</option>\r\n                    <option [value]=\"area.nombre\" *ngFor=\"let area of areas\">{{ area.nombre }}</option>\r\n                    </select>\r\n                </th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <th scope=\"col-sm-2\">Nombre</th>\r\n                <th scope=\"col-sm-1\">Área</th>\r\n                <th scope=\"col-sm-1\">Correo</th>\r\n                <th scope=\"col-sm-2\">Teléfono</th>\r\n                <th scope=\"col-sm-2\">Celular</th>\r\n                <th scope=\"col-sm-2\">Contacto</th>\r\n                <th scope=\"col-sm-2\">Ciudad</th>\r\n                <th scope=\"col-sm-3\"></th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <ng-container *ngFor=\"let proveedor of proveedores\">\r\n            <!--FILTROS DE TABLA DE PROVEEDORES-->\r\n                <tr\r\n                class=\"bg-light table-sm linea-tabla\"\r\n                scope=\"row\"\r\n                *ngIf=\"(\r\n                        (proveedor.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                        &&\r\n                        (proveedor.area.toLocaleLowerCase().includes(filtroArea.value.toLowerCase()) || filtroArea.value == ''))\">\r\n                    <td class=\"col-sm-2\">{{ proveedor.nombre }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.area }}</td>\r\n                    <td class=\"col-sm-2\">{{ proveedor.correo }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.telefono }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.celular }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.contacto }}</td>\r\n                    <td class=\"col-sm-2\">{{ proveedor.ciudad }}</td>\r\n                    <td class=\"col-sm-3\">\r\n                        <!--BOTONES DE DETALLES, MODIFICAR Y ELIMINACION-->\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" (click)=\"asignarDetalles(proveedor)\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                                <fa-icon [icon]=\"faInfoCircle\"></fa-icon>  Detalles\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)='aProductos(proveedor.id)'>\r\n                                <fa-icon [icon]=\"faListAlt\"></fa-icon>  Productos\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"asignarBorrar(proveedor.id, proveedor.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                <fa-icon [icon]=\"faTrashAlt\"></fa-icon>  Eliminar\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL DE INFO PROVEEDOR -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n    <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n        <tbody>\r\n            <tr>\r\n                <th>ID</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.id }}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Área profesional</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.area }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.rif != null\">\r\n                <th>RIF</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.rif }} </td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.ciudad != null\">\r\n                <th>Ciudad y país</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.ciudad }} </td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.credito != null\">\r\n                <th>Opciones de crédito (días)</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.credito }} / {{ datosInfo.dias_credito }} </td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.correo != null\">\r\n                <th>Correo de contacto</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.correo }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.telefono != null\">\r\n                <th>Teléfono fijo</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.telefono }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.celular != null\">\r\n                <th>Celular de contacto</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.celular }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.contacto != null\">\r\n                <th>Nombre del Vendedor ó Contacto</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.contacto }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.direccion != null\">\r\n                <th>Dirección fiscal</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.direccion }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.descripcion != null\">\r\n                <th>Descripcion</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.descripcion | lowercase}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.fecha != null\">\r\n                <th>Fecha Creado</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.fecha | date}}</td>\r\n            </tr>\r\n            <tr><th></th><td></td><td></td></tr>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n        </button>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO PROVEEDOR -->\r\n\r\n<!-- INICIO MODAL ELIMINAR PROVEEDOR -->\r\n<div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-danger\">\r\n            <h5 class=\"modal-title text-white\">Eliminar Proveedor</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p>¿Estás seguro que deseas eliminar <strong>{{ proveedorBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n            </button>\r\n            <button (click)=\"eliminarProveedor()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                <fa-icon [icon]=\"faTrashAlt\"></fa-icon> Eliminar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR PROVEEDOR -->\r\n\r\n<!-- MODAL PDF DE PROVEEDORES-->\r\n<div class=\"modal fade\" id=\"pdfProveedores\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n            <div class=\"btn-group rounded\" role=\"group\">\r\n                <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-warning\">\r\n                    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n            <h4>Proveedores</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n                <thead class=\"thead bg-secondary text-white\">\r\n                <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Área</th>\r\n                    <th scope=\"col\">RIF</th>\r\n                    <th scope=\"col\">Correo</th>\r\n                    <th scope=\"col\">Teléfono</th>\r\n                    <th scope=\"col\">Celular</th>\r\n                    <th scope=\"col\">Contacto</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <ng-container *ngFor=\"let proveedoresPDF of proveedores\">\r\n                    <tr>\r\n                    <td>{{ proveedoresPDF.nombre }}</td>\r\n                    <td>{{ proveedoresPDF.area }}</td>\r\n                    <td>{{ proveedoresPDF.rif }}</td>\r\n                    <td>{{ proveedoresPDF.correo }}</td>\r\n                    <td>{{ proveedoresPDF.telefono }}</td>\r\n                    <td>{{ proveedoresPDF.celular }}</td>\r\n                    <td>{{ proveedoresPDF.contacto }}</td>\r\n                    </tr>\r\n                </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductosComponent } from './components/productos/productos.component';\r\nimport { ProcuraBaseComponent } from './components/procura-base/procura-base.component';\r\nimport { ProveedoresComponent } from './components/proveedores/proveedores.component';\r\nimport { AgregarProveedorComponent } from './components/agregar-proveedor/agregar-proveedor.component';\r\nimport { ModificarProveedorComponent } from './components/modificar-proveedor/modificar-proveedor.component';\r\nimport { AgregarProductoComponent } from './components/agregar-producto/agregar-producto.component';\r\nimport { ModificarProductoComponent } from './components/modificar-producto/modificar-producto.component';\r\nimport { ActualizarProductosComponent } from './components/actualizar-productos/actualizar-productos.component';\r\nimport { GestionProductosComponent } from './components/gestion-productos/gestion-productos.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ProcuraBaseComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'proveedores' },\r\n      { path: 'productos', component: ProductosComponent },\r\n      { path: 'productos/agregar', component: AgregarProductoComponent },\r\n      { path: 'productos/modificar', component: ModificarProductoComponent },\r\n      { path: 'productos/gestionar', component: GestionProductosComponent },\r\n      { path: 'proveedores', component: ProveedoresComponent },\r\n      { path: 'proveedores/agregar', component: AgregarProveedorComponent },\r\n      { path: 'proveedores/modificar', component: ModificarProveedorComponent },\r\n      { path: 'proveedores/:id/productos', component: ActualizarProductosComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProcuraRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProcuraRoutingModule } from './procura-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ProcuraBaseComponent } from './components/procura-base/procura-base.component';\r\nimport { ProductosComponent } from './components/productos/productos.component';\r\nimport { ProveedoresComponent } from './components/proveedores/proveedores.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AgregarProveedorComponent } from './components/agregar-proveedor/agregar-proveedor.component';\r\nimport { ModificarProveedorComponent } from './components/modificar-proveedor/modificar-proveedor.component';\r\nimport { AgregarProductoComponent } from './components/agregar-producto/agregar-producto.component';\r\nimport { ModificarProductoComponent } from './components/modificar-producto/modificar-producto.component';\r\nimport { ActualizarProductosComponent } from './components/actualizar-productos/actualizar-productos.component';\r\nimport { GestionProductosComponent } from './components/gestion-productos/gestion-productos.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProcuraBaseComponent,\r\n    ProductosComponent,\r\n    ProveedoresComponent,\r\n    AgregarProveedorComponent,\r\n    ModificarProveedorComponent,\r\n    AgregarProductoComponent,\r\n    ModificarProductoComponent,\r\n    ActualizarProductosComponent,\r\n    GestionProductosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProcuraRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n  ]\r\n})\r\nexport class ProcuraModule { }\r\n","import { formatDate } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductosProveedoresService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProductosProveedores() {\r\n    return this.http.get(`${this.API_URI}/productosProveedores`);\r\n  }\r\n\r\n  getProductosProveedoresElegido(id_Proveedor:string) {\r\n    return this.http.get(`${this.API_URI}/productosProveedores/${id_Proveedor}`);\r\n  }\r\n\r\n  createProductoProveedor(producto: any) {\r\n    let productoProveedorNuevo = {\r\n      nombre: producto.nombre,\r\n      id_area_producto: +producto.area,\r\n      id_unidad_producto: +producto.unidad,\r\n      garantia: producto.garantia,\r\n      dias_garantia: +producto.dias_garantia,\r\n      id_proveedor_producto: +producto.proveedor,\r\n      fecha_act: new Date().toISOString().slice(0, 19).replace('T', ' '),\r\n      precio: producto.precio,\r\n    }\r\n\r\n    return this.http.post(`${this.API_URI}/productosProveedores`, productoProveedorNuevo);\r\n  }\r\n\r\n  deleteProductoProveedor(id: string) {\r\n    return this.http.delete(`${this.API_URI}/productosProveedores/${id}`);\r\n  }\r\n\r\n  updateProductoProveedor(id: string, producto:any) {\r\n    let productoProveedorNuevo = {\r\n      nombre: producto.nombre,\r\n      id_area_producto: +producto.area,\r\n      id_unidad_producto: +producto.unidad,\r\n      garantia: producto.garantia,\r\n      dias_garantia: +producto.dias_garantia,\r\n      id_proveedor_producto: +producto.nombreProveedor,\r\n      precio: producto.precio,\r\n      }\r\n      return this.http.put(`${this.API_URI}/productosProveedores/${id}`, productoProveedorNuevo)\r\n  }\r\n\r\n  updatePrecioProducto(id: string, precioAct:number) {\r\n    let productoPrecioNuevo = {\r\n      precio: precioAct,\r\n      }\r\n      console.log(productoPrecioNuevo)\r\n      return this.http.put(`${this.API_URI}/productosProveedores/${id}`, productoPrecioNuevo)\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProductos() {\r\n    return this.http.get(`${this.API_URI}/productos`);\r\n  }\r\n\r\n  getProducto(id: string) {\r\n    return this.http.get(`${this.API_URI}/productos/${id}`);\r\n  }\r\n\r\n  createProducto(producto: any) {\r\n    let productoNuevo = {\r\n      nombre: producto.nombre,\r\n      id_unidad: +producto.unidad,\r\n    }\r\n    return this.http.post(`${this.API_URI}/productos`, productoNuevo);\r\n  }\r\n\r\n  deleteProducto(id: string) {\r\n    return this.http.delete(`${this.API_URI}/productos/${id}`);\r\n  }\r\n\r\n  updateProducto(id: string, producto: any) {\r\n    let productoModificar = {\r\n      nombre: producto.nombre,\r\n      id_unidad: +producto.unidad,\r\n      }\r\n    return this.http.put(`${this.API_URI}/productos/${id}`, productoModificar);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProveedoresService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProveedores() {\r\n    return this.http.get(`${this.API_URI}/proveedores`);\r\n  }\r\n\r\n  getProveedorElegido(id: string) {\r\n    return this.http.get(`${this.API_URI}/proveedores/${id}`);\r\n  }\r\n\r\n  createProveedor(proveedor: any) {\r\n    let proveedorNuevo = {\r\n      nombre: proveedor.nombre,\r\n      id_area: +proveedor.area,\r\n      direccion: proveedor.direccion,\r\n      correo: proveedor.correo,\r\n      credito: proveedor.credito,\r\n      dias_credito: +proveedor.dias_credito,\r\n      ciudad: proveedor.ciudad,\r\n      telefono: proveedor.telefono,\r\n      celular: proveedor.celular,\r\n      contacto: proveedor.contacto,\r\n      rif: proveedor.rif,\r\n      descripcion: proveedor.descripcion,\r\n      responsable: proveedor.responsable\r\n    }\r\n\r\n    return this.http.post(`${this.API_URI}/proveedores`, proveedorNuevo);\r\n  }\r\n\r\n  deleteProveedor(id: string) {\r\n    return this.http.delete(`${this.API_URI}/proveedores/${id}`);\r\n  }\r\n\r\n  updateProveedor(id: string, proveedor:any) {\r\n      let proveedorNuevo = {\r\n        id_proveedor: id,\r\n        nombre: proveedor.nombre,\r\n        id_area: +proveedor.area,\r\n        direccion: proveedor.direccion,\r\n        credito: proveedor.credito,\r\n        dias_credito: +proveedor.dias_credito,\r\n        ciudad: proveedor.ciudad,\r\n        correo: proveedor.correo,\r\n        telefono: proveedor.telefono,\r\n        celular: proveedor.celular,\r\n        contacto: proveedor.contacto,\r\n        rif: proveedor.rif,\r\n        descripcion: proveedor.descripcion\r\n      }\r\n      return this.http.put(`${this.API_URI}/proveedores/${id}`, proveedorNuevo)\r\n  }\r\n}\r\n"]}
{"version":3,"mappings":"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","names":["e","webpackEmptyAsyncContext","module","routes","path","redirectTo","pathMatch","component","_shared_login_login_component__WEBPACK_IMPORTED_MODULE_2__","canActivate","_auth_auth_guard__WEBPACK_IMPORTED_MODULE_0__","_shared_menu_menu_component__WEBPACK_IMPORTED_MODULE_3__","_shared_usuario_usuario_component__WEBPACK_IMPORTED_MODULE_5__","_shared_sin_auth_sin_auth_component__WEBPACK_IMPORTED_MODULE_4__","_auth_roles_guard__WEBPACK_IMPORTED_MODULE_1__","loadChildren","__webpack_require__","then","m","InventarioModule","data","allowedRoles","Promise","ProcuraModule","AdministradorModule","AppRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_7__","preloadingStrategy","relativeLinkResolution","imports","exports","AppComponent","auth","autoLogin","_angular_core__WEBPACK_IMPORTED_MODULE_2__","selectors","decls","vars","template","AppModule","bootstrap","_app_component__WEBPACK_IMPORTED_MODULE_1__","provide","_angular_common_http__WEBPACK_IMPORTED_MODULE_10__","useClass","_auth_auth_interceptor_service__WEBPACK_IMPORTED_MODULE_5__","multi","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_11__","_app_routing_module__WEBPACK_IMPORTED_MODULE_0__","_modulo_inventario_inventario_routing_module__WEBPACK_IMPORTED_MODULE_4__","_angular_forms__WEBPACK_IMPORTED_MODULE_12__","_fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_13__","declarations","_shared_navbar_navbar_component__WEBPACK_IMPORTED_MODULE_3__","_shared_menu_menu_component__WEBPACK_IMPORTED_MODULE_6__","_shared_usuario_usuario_component__WEBPACK_IMPORTED_MODULE_7__","_shared_sin_auth_sin_auth_component__WEBPACK_IMPORTED_MODULE_8__","AuthInterceptorService","req","next","user","pipe","handle","modifiedReq","clone","headers","_angular_common_http__WEBPACK_IMPORTED_MODULE_3__","set","token","_angular_core__WEBPACK_IMPORTED_MODULE_4__","factory","AuthGuard","router","route","isAuth","createUrlTree","_angular_core__WEBPACK_IMPORTED_MODULE_3__","providedIn","AuthService","http","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_2__","cedula","password","post","API_URI","expirationDate","Date","getTime","resData","expiresIn","_user_model__WEBPACK_IMPORTED_MODULE_1__","roles","autoLogout","localStorage","setItem","JSON","stringify","navigate","removeItem","tokenExpirationTimer","clearTimeout","expirationDuration","setTimeout","logout","userData","parse","getItem","loadedUser","_token","_tokenExpirationDate","newPass","put","console","log","value","hasPermission","forEach","includes","rol","RolesGuard","state","rolesUser","getValue","some","r","_angular_core__WEBPACK_IMPORTED_MODULE_1__","User","_angular_core__WEBPACK_IMPORTED_MODULE_8__","ctx_r14","EgresarComponent","servicioCategorias","servicioSubcategorias","servicioUbicaciones","servicioUnidades","servicioInventario","servicioEstados","servicioEgresos","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_9__","id","cantidad","obra","responsable","getCategorias","subscribe","categorias","res","err","getSubcategorias","subcategorias","getInventario","inventario","getUnidades","unidades","getUbicaciones","ubicaciones","getEstados","estados","getEgresos","listaEgresos","indice","findIndex","item","idsEgreso","itemCiclo","itemEgreso","Object","assign","find","itemInv","itemListaEgresos","cantidadObra","categoria","cat","nombre","subcategoria","subcat","ubicacion","ubic","und","estado","est","updateItem","registrarEgreso","form","reset","egreso","nombre_item_egresado","id_categoria_item_egresado","id_unidad_item_egresado","unid","cedula_responsable_egreso","createEgreso","push","pop","cantActual","valido","viewQuery","ctx","EgresosComponent","servicioEliminados","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_5__","egresos","getEliminados","listaEliminados","opciones","margin","filename","image","type","quality","html2canvas","jsPDF","unit","format","orientation","contenido","document","getElementById","html2pdf_js__WEBPACK_IMPORTED_MODULE_0__","from","save","consts","_angular_core__WEBPACK_IMPORTED_MODULE_7__","IngresarComponent","inventarioService","ingresosService","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_8__","vencimiento","serial","precio","nuevosItems","itemExistenteVar","createItem","registrarIngreso","itemOriginal","itemInventario","itemModificar","descripcion","modalidad","ingreso","nombre_item_ingresado","id_categoria_item_ingresado","id_unidad_item_ingresado","id_modalidad","cedula_responsable_ingreso","createIngreso","valor","index","target","_r12","_r18","IngresosComponent","servicioIngresos","servicioModalidades","getIngresos","ingresos","getModalidades","modalidades","oculto","date","stringFecha","getFullYear","getMonth","getUTCDate","fechaDesde","filter","o","fechaHasta","InventarioBaseComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","_angular_core__WEBPACK_IMPORTED_MODULE_9__","_r34","InventarioComponent","servicioInventarioSQL","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_10__","inventarioSQL","permisoAdmin","datosInfo","itemBorrar","deleteItem","eliminacion","cedula_responsable_eliminado","id_categoria","id_unidad","unidad","createEliminado","_angular_core__WEBPACK_IMPORTED_MODULE_6__","ModificarComponent","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__","fecha","idItem","itemElegido","ReingresoComponent","idsReingreso","nuevoItem","itemListaIngresos","i","revisarCantidad","inventarioRoutes","_components_inventario_base_inventario_base_component__WEBPACK_IMPORTED_MODULE_4__","children","_components_inventario_inventario_component__WEBPACK_IMPORTED_MODULE_5__","_components_egresar_egresar_component__WEBPACK_IMPORTED_MODULE_0__","_components_egresos_egresos_component__WEBPACK_IMPORTED_MODULE_1__","_components_ingresar_ingresar_component__WEBPACK_IMPORTED_MODULE_2__","_components_ingresos_ingresos_component__WEBPACK_IMPORTED_MODULE_3__","_components_reingreso_reingreso_component__WEBPACK_IMPORTED_MODULE_7__","_components_modificar_modificar_component__WEBPACK_IMPORTED_MODULE_6__","InventarioRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_9__","CategoriasService","get","EgresosService","src_environments_environment__WEBPACK_IMPORTED_MODULE_0__","EliminadosService","eliminado","EstadosService","IngresosService","InventarioSQLService","id_subcategoria","id_ubicacion","id_estado","full","ModalidadesService","SubcategoriasService","UbicacionesService","UnidadesService","UsuariosService","usuario","LoginComponent","valid","error","isLoading","signIn","errorRes","message","MenuComponent","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_2__","NavbarComponent","userSub","isAuthenticated","unsubscribe","SinAuthComponent","UsuarioComponent","servicioUsuarios","snapshot","params","getUsuario","changePassword","environment","production","dirBackend","_environments_environment__WEBPACK_IMPORTED_MODULE_1__","_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__","bootstrapModule","_app_app_module__WEBPACK_IMPORTED_MODULE_0__"],"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions:%20%7B%7D|namespace%20object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/auth/auth-interceptor.service.ts","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/auth/roles.guard.ts","webpack:///src/app/auth/user.model.ts","webpack:///src/app/modulo_inventario/components/egresar/egresar.component.ts","webpack:///src/app/modulo_inventario/components/egresar/egresar.component.html","webpack:///src/app/modulo_inventario/components/egresos/egresos.component.html","webpack:///src/app/modulo_inventario/components/egresos/egresos.component.ts","webpack:///src/app/modulo_inventario/components/ingresar/ingresar.component.ts","webpack:///src/app/modulo_inventario/components/ingresar/ingresar.component.html","webpack:///src/app/modulo_inventario/components/ingresos/ingresos.component.html","webpack:///src/app/modulo_inventario/components/ingresos/ingresos.component.ts","webpack:///src/app/modulo_inventario/components/inventario-base/inventario-base.component.ts","webpack:///src/app/modulo_inventario/components/inventario-base/inventario-base.component.html","webpack:///src/app/modulo_inventario/components/inventario/inventario.component.ts","webpack:///src/app/modulo_inventario/components/inventario/inventario.component.html","webpack:///src/app/modulo_inventario/components/modificar/modificar.component.ts","webpack:///src/app/modulo_inventario/components/modificar/modificar.component.html","webpack:///src/app/modulo_inventario/components/reingreso/reingreso.component.ts","webpack:///src/app/modulo_inventario/components/reingreso/reingreso.component.html","webpack:///src/app/modulo_inventario/inventario-routing.module.ts","webpack:///src/app/services/categorias.service.ts","webpack:///src/app/services/egresos.service.ts","webpack:///src/app/services/eliminados.service.ts","webpack:///src/app/services/estados.service.ts","webpack:///src/app/services/ingresos.service.ts","webpack:///src/app/services/inventario-sql.service.ts","webpack:///src/app/services/modalidades.service.ts","webpack:///src/app/services/subcategorias.service.ts","webpack:///src/app/services/ubicaciones.service.ts","webpack:///src/app/services/unidades.service.ts","webpack:///src/app/services/usuarios.service.ts","webpack:///src/app/shared/login/login.component.html","webpack:///src/app/shared/login/login.component.ts","webpack:///src/app/shared/menu/menu.component.html","webpack:///src/app/shared/menu/menu.component.ts","webpack:///src/app/shared/navbar/navbar.component.html","webpack:///src/app/shared/navbar/navbar.component.ts","webpack:///src/app/shared/sin-auth/sin-auth.component.ts","webpack:///src/app/shared/sin-auth/sin-auth.component.html","webpack:///src/app/shared/usuario/usuario.component.html","webpack:///src/app/shared/usuario/usuario.component.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule, PreloadAllModules } from '@angular/router';\r\nimport { AuthGuard } from './auth/auth.guard';\r\nimport { RolesGuard } from './auth/roles.guard';\r\nimport { LoginComponent } from './shared/login/login.component';\r\nimport { MenuComponent } from './shared/menu/menu.component';\r\nimport { SinAuthComponent } from './shared/sin-auth/sin-auth.component';\r\nimport { UsuarioComponent } from './shared/usuario/usuario.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', redirectTo: '/menu', pathMatch: 'full' },\r\n  { path: 'login', component: LoginComponent },\r\n  { path: 'menu', canActivate: [AuthGuard], component: MenuComponent },\r\n  { path: 'usuario/:id', canActivate: [AuthGuard], component: UsuarioComponent },\r\n  { path: 'noAuth', component: SinAuthComponent },\r\n\r\n  {\r\n    path: 'inventario',\r\n    canActivate: [AuthGuard, RolesGuard],\r\n    loadChildren: () => import(\"./modulo_inventario/inventario.module\").then(m => m.InventarioModule),\r\n    data: { allowedRoles: [2] }\r\n  },\r\n  {\r\n    path: 'procura',\r\n    canActivate: [AuthGuard, RolesGuard],\r\n    loadChildren: () => import(\"./modulo_procura/procura.module\").then(m => m.ProcuraModule),\r\n    data: { allowedRoles: [3] }\r\n  },\r\n  {\r\n    path: 'administrador',\r\n    canActivate: [AuthGuard, RolesGuard],\r\n    loadChildren: () => import(\"./modulo_administrador/administrador.module\").then(m => m.AdministradorModule),\r\n    data: { allowedRoles: [1] }\r\n  }\r\n\r\n\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes, { preloadingStrategy: PreloadAllModules, relativeLinkResolution: 'legacy' })],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit {\n\n  constructor(private auth: AuthService) { }\n\n  ngOnInit() {\n    this.auth.autoLogin()\n  }\n\n}\n","<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './shared/login/login.component';\r\n\r\nimport { NavbarComponent } from './shared/navbar/navbar.component';\r\n\r\n// IMPORT DE ICONOSDE FONTAWESOME\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { InventarioRoutingModule } from './modulo_inventario/inventario-routing.module';\r\nimport { AuthInterceptorService } from './auth/auth-interceptor.service';\r\nimport { MenuComponent } from './shared/menu/menu.component';\r\nimport { UsuarioComponent } from './shared/usuario/usuario.component';\nimport { SinAuthComponent } from './shared/sin-auth/sin-auth.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    NavbarComponent,\r\n    MenuComponent,\r\n    UsuarioComponent,\r\n    SinAuthComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    InventarioRoutingModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptorService, multi: true}\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpHandler, HttpHeaders, HttpInterceptor, HttpParams, HttpRequest } from '@angular/common/http';\r\nimport { AuthService } from \"./auth.service\";\r\nimport { exhaustMap, take } from 'rxjs/operators';\r\n\r\n@Injectable()\r\n\r\nexport class AuthInterceptorService implements HttpInterceptor {\r\n\r\n  constructor(private auth: AuthService) {}\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler) {\r\n    return this.auth.user.pipe(\r\n      take(1),\r\n      exhaustMap(user => {\r\n        if (!user) {\r\n          return next.handle(req);\r\n        }\r\n        const modifiedReq = req.clone({\r\n          headers: new HttpHeaders().set('x-access-token', user.token)\r\n        })\r\n        return next.handle(modifiedReq);\r\n      })\r\n    )\r\n  }\r\n\r\n}\r\n","import { Injectable } from \"@angular/core\";\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot, UrlTree } from \"@angular/router\";\r\nimport { Observable } from \"rxjs\";\r\nimport { map, take } from \"rxjs/operators\";\r\nimport { AuthService } from \"./auth.service\";\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private auth: AuthService, private router: Router) { }\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n    ): boolean | Promise<boolean | UrlTree> | Observable<boolean | UrlTree> {\r\n      return this.auth.user.pipe(\r\n        take(1),\r\n        map(user => {\r\n          const isAuth = !!user;\r\n          return (isAuth) ? true : this.router.createUrlTree(['/login'])\r\n        }\r\n        ))\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\nimport { BehaviorSubject, throwError} from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { User } from './user.model';\r\nimport { Router } from '@angular/router';\r\n\r\ninterface AuthResponseData {\r\n  token: string,\r\n  cedula: number,\r\n  expiresIn: number,\r\n  roles: number[]\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class AuthService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  user = new BehaviorSubject<User>(null);\r\n  private tokenExpirationTimer: any;\r\n\r\n  constructor(private http: HttpClient, private router: Router) { }\r\n\r\n  signIn(cedula: number, password: string) {\r\n    return this.http.post<AuthResponseData>(`${this.API_URI}/auth/signin`, { cedula: cedula, password: password })\r\n    .pipe(\r\n      tap(resData => {\r\n        const expirationDate = new Date(new Date().getTime() + +resData.expiresIn * 1000);\r\n        const user = new User(\r\n          resData.cedula,\r\n          resData.token,\r\n          expirationDate,\r\n          resData.roles\r\n        );\r\n        this.user.next(user);\r\n        this.autoLogout(+resData.expiresIn * 1000)\r\n        localStorage.setItem('userData', JSON.stringify(user));\r\n        this.router.navigate(['/menu']);\r\n      })\r\n    )\r\n  }\r\n\r\n  signUp() {\r\n\r\n  }\r\n\r\n  logout() {\r\n    this.user.next(null);\r\n    this.router.navigate(['/login']);\r\n    localStorage.removeItem('userData');\r\n    if(this.tokenExpirationTimer) {\r\n      clearTimeout(this.tokenExpirationTimer);\r\n    }\r\n    this.tokenExpirationTimer = null;\r\n  }\r\n\r\n  autoLogout(expirationDuration: number) {\r\n    this.tokenExpirationTimer = setTimeout(() => {\r\n      this.logout();\r\n    }, expirationDuration);\r\n  }\r\n\r\n  autoLogin() {\r\n    const userData: {\r\n      cedula: number,\r\n      _token: string,\r\n      _tokenExpirationDate: string,\r\n      roles: number[]\r\n    } = JSON.parse(localStorage.getItem('userData'));\r\n\r\n    if(!userData) {\r\n      return;\r\n    }\r\n\r\n    const loadedUser = new User(\r\n      userData.cedula,\r\n      userData._token,\r\n      new Date(userData._tokenExpirationDate),\r\n      userData.roles\r\n    );\r\n\r\n    if(loadedUser.token) {\r\n      this.user.next(loadedUser);\r\n      const expirationDuration = new Date(userData._tokenExpirationDate).getTime() - new Date().getTime();\r\n      this.autoLogout(expirationDuration);\r\n    }\r\n  }\r\n\r\n  changePassword(cedula: number, newPass: string) {\r\n    return this.http.put(`${this.API_URI}/auth/changePassword`, { cedula: cedula, password: newPass });\r\n  }\r\n\r\n  hasPermission(roles: number[]): boolean {\r\n    console.log(this.user.value.roles)\r\n    let hasPermission = false;\r\n    roles.forEach(rol => {\r\n      if(this.user.value.roles.includes(rol)) {\r\n        console.log('dentro', rol)\r\n        return hasPermission = true;\r\n      }\r\n    });\r\n    return hasPermission;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RolesGuard implements CanActivate {\n\n  constructor(private auth: AuthService, private router: Router) { }\n\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    const allowedRoles = next.data.allowedRoles;\n    let rolesUser = this.auth.user.getValue().roles;\n    if(allowedRoles.some((r: number)=> rolesUser.includes(r))) {\n      return true;\n    }\n    else {\n      return this.router.createUrlTree(['/noAuth']);\n    }\n  }\n\n}\n","export class User {\r\n\r\n  constructor(\r\n    public cedula: number,\r\n    private _token: string,\r\n    private _tokenExpirationDate: Date,\r\n    public roles: number[]) {\r\n  }\r\n\r\n\r\n  get token() {\r\n    if (!this._tokenExpirationDate || new Date() > this._tokenExpirationDate) {\r\n      return null;\r\n    }\r\n    return this._token;\r\n  }\r\n\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//SERVICIOS DE BD\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { Router } from '@angular/router';\r\nimport { asapScheduler } from 'rxjs';\r\nimport { RouterLink } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-egresar',\r\n  templateUrl: './egresar.component.html',\r\n  styleUrls: ['./egresar.component.css']\r\n})\r\n\r\n\r\nexport class EgresarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n   //ICONOS FONTAWESOME\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n    // selectTipo: string;\r\n  // idItemElegidoEgreso: string = null;\r\n\r\n  //VARIABLES QUE CONTINENE INFO DE BD\r\n  inventario: any = [];\r\n  categorias: any = [];\r\n  unidades: any = [];\r\n  ubicaciones: any = [];\r\n  subcategorias: any = [];\r\n  estados: any = [];\r\n  listaEgresos: any = [];\r\n\r\n  cantidadEgreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsEgreso = [\r\n    {id: '', cantidad: +1, obra: null, responsable: null}\r\n  ];\r\n\r\n  constructor(private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioInventario: InventarioSQLService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioEgresos: EgresosService,\r\n              private router: Router,\r\n              private auth: AuthService){ }\r\n\r\n  ngOnInit(): void {\r\n      this.servicioCategorias.getCategorias().subscribe(\r\n        res => {this.categorias = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioSubcategorias.getSubcategorias().subscribe(\r\n        res => {this.subcategorias = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioInventario.getInventario().subscribe(\r\n        res => {this.inventario = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioUnidades.getUnidades().subscribe(\r\n        res => {this.unidades = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioUbicaciones.getUbicaciones().subscribe(\r\n        res => {this.ubicaciones = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioEstados.getEstados().subscribe(\r\n        res => {this.estados = res;},\r\n        err => console.log(err));\r\n\r\n      this.servicioEgresos.getEgresos().subscribe(\r\n        res => {this.listaEgresos = res;},\r\n        err => console.log(err));\r\n  }\r\n  //BUSCA ITEM A EGRESAR LUEGO DE HABER SELECCINADO\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsEgreso[indice].id);\r\n  }\r\n\r\n  egresarItems() {\r\n  //CICLO for QUE EGRESA ITEMS MULTIPLES\r\n    for(let itemCiclo of this.idsEgreso) {\r\n\r\n      let itemEgreso = Object.assign({},this.inventario.find(itemInv => itemInv.id == itemCiclo.id));\r\n      let itemListaEgresos = Object.assign({},itemEgreso);\r\n\r\n      //CAMPOS FALTANTES EN EGRESO\r\n      itemListaEgresos.obra = itemCiclo.obra;\r\n      itemListaEgresos.cantidad = itemCiclo.cantidad;\r\n\r\n      itemEgreso.cantidad = itemEgreso.cantidad - itemCiclo.cantidad;\r\n      itemEgreso.cantidadObra = itemEgreso.cantidadObra + itemCiclo.cantidad;\r\n      itemEgreso.categoria = this.categorias.find(cat => cat.nombre == itemEgreso.categoria).id;\r\n      itemEgreso.subcategoria = this.subcategorias.find(subcat => subcat.nombre == itemEgreso.subcategoria).id;\r\n      itemEgreso.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == itemEgreso.ubicacion).id;\r\n      itemEgreso.unidades = this.unidades.find(und => und.nombre == itemEgreso.unidades).id;\r\n      itemEgreso.estado = this.estados.find(est => est.nombre == itemEgreso.estado).id;\r\n\r\n      //COMUNICACION CON SERVICIO (UPDATE)\r\n      this.servicioInventario.updateItem(itemEgreso.id, itemEgreso, true).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          console.log(res[\"text\"]);\r\n          this.registrarEgreso(+itemEgreso.id, itemListaEgresos);\r\n        },\r\n        err => {\r\n          console.log(err);\r\n        }\r\n      );\r\n    }\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n    this.idsEgreso = [\r\n      {id: \"\", cantidad: 1, responsable: null, obra: null}\r\n    ];\r\n  }\r\n\r\n  //FUNCION QUE REGISTRA EGRESO EN BD CON ID DE ITEM EN INVENTARIO\r\n  registrarEgreso(id: any, itemListaEgresos: any) {\r\n    let egreso = {\r\n      nombre_item_egresado: itemListaEgresos.nombre,\r\n      id_categoria_item_egresado: +this.categorias.find(cat => cat.nombre == itemListaEgresos.categoria).id,\r\n      id_unidad_item_egresado: +this.unidades.find(unid => unid.nombre == itemListaEgresos.unidades).id,\r\n      cantidad: +itemListaEgresos.cantidad,\r\n      obra: itemListaEgresos.obra,\r\n      cedula_responsable_egreso: this.auth.user.getValue().cedula,\r\n    }\r\n    this.servicioEgresos.createEgreso(egreso).subscribe(\r\n      res => { console.log(res); },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n    //FUNCION PARA BORRAR FORMULARIO\r\n    borrarForm() {\r\n      this.form.reset();\r\n      this.idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}]\r\n\r\n      this.router.navigate(['inventario']);\r\n    }\r\n\r\n    //FUNCIONES DE EGRESO MULTIPLE\r\n    agregarItem() {\r\n      this.idsEgreso.push({id: '', cantidad: null, obra: null, responsable: null});\r\n    }\r\n    restarItem() {\r\n      this.idsEgreso.pop();\r\n    }\r\n\r\n    //FUNCIUON QUE REVISA CANTIDAD VALIDA\r\n    revisarCantidad(cantActual: number) {\r\n      for(let item of this.idsEgreso) {\r\n        if(item.cantidad > cantActual || item.cantidad == null || item.cantidad <= 0){\r\n          this.valido = false;\r\n          return;\r\n        }\r\n      }\r\n      this.valido = true;\r\n    }\r\n\r\n    borrarId(indice: number) {\r\n      this.idsEgreso[indice].id = '';\r\n    }\r\n\r\n  }\r\n\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-egresar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Egresar Producto</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                    <div *ngFor=\"let item of idsEgreso; let i=index\">\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Item {{i+1}}</h5>\r\n                        </div>\r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-3 mb-4\">\r\n                                <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select (change)='borrarId(i);' required class=\"form-select mt-2\" ngModel [name]=\"'selectCat'+[i]\" #selectCat=\"ngModel\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectCat.valid && selectCat.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Subcategoría</label>\r\n                                    <select (change)='borrarId(i);' required class=\"form-select mt-2\" ngModel [name]=\"'selectSubcat'+[i]\" #selectSubcat=\"ngModel\">\r\n                                        <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectSubcat.valid && selectSubcat.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Item</label>\r\n                                    <select [(ngModel)]='idsEgreso[i].id' required class=\"form-select mt-2\" [name]=\"'idItem'+[i]\" #selectItem='ngModel'>\r\n                                    <!--FILTRO DE ITEM POR CAT Y SUBCAT-->\r\n                                        <ng-container *ngFor=\"let item of inventario\">\r\n                                        <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                                        <option *ngIf=\"item.categoria == selectCat.value && item.subcategoria == selectSubcat.value && item.estado == 'Disponible'\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                        </ng-container>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectItem.valid && selectItem.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                                </div>\r\n                                <div class=\"col-3 mb-2\">\r\n                                <!--LABEL E INPUT DE CANTIDAD ACTUAL EN INVENTARIO-->\r\n                                    <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                                    <p *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <!--LABEL E INPUT CON CANTIDAD A EGRESAR-->\r\n                                <div class=\"col-4\">\r\n                                        <label for=\"exampleInputEmail1\">Cantidad a egresar</label>\r\n                                        <div class=\"input-group\">\r\n                                        <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\"\r\n                                        onkeypress=\"return event.charCode >= 48\"\r\n                                        min=\"1\"\r\n                                        [max]=\"inventario[regresarIndice(i)].cantidad\" type=\"number\"\r\n                                        [(ngModel)]=\"idsEgreso[i].cantidad\"\r\n                                        [name]=\"'cantidadEgreso'+[i]\"\r\n                                        class=\"form-control mt-2\"\r\n                                        (keyup)='revisarCantidad(inventario[regresarIndice(i)].cantidad)'>\r\n                                        <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\" [placeholder]=\"inventario[regresarIndice(i)].unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label for=\"exampleInputEmail1\">Obra destino</label>\r\n                                    <input [(ngModel)]='idsEgreso[i].obra' [name]=\"'obra'+[i]\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label for=\"exampleInputEmail1\">Responsable</label>\r\n                                    <input [(ngModel)]='idsEgreso[i].responsable' [name]=\"'responsable'+[i]\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                    <!-- BOTONES DEL FORMULARIO DE EGRESO -->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class='modal-footer'>\r\n                            <div class=\"btn-group\">\r\n                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                            </button>\r\n                            <button [hidden]=\"idsEgreso.length == 1\" type=\"button\" class=\"btn btn-secondary\" (click)=\"restarItem()\">\r\n                                <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                            </button>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button\r\n                                type=\"button\"\r\n                                class=\"btn btn-warning\"\r\n                                (click)=\"egresarItems()\"\r\n                                [disabled]='!valido || !f.valid'>\r\n                                <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","<div class=\"container\">\r\n    <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfEgresos\" class=\"btn btn-warning float-end\">\r\n        <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF</button>\r\n    <div class=\"row\">\r\n        <h1>Egresos</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <table class=\"table shadow table-striped\">\r\n        <!--FILTROS DE LA TABLA DE EGRESOS-->\r\n        <thead class=\"thead bg-warning text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroObra=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por obra\"></th>\r\n            <th scope=\"col\"><input #filtroResponsable=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por responsable\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-warning\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Obra</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Egreso</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--Ng For IMPRIME DATA DE EGRESOS, Y USA FILTROS PARA REDUCIR-->\r\n            <ng-container *ngFor=\"let egreso of egresos\">\r\n\r\n            <tr *ngIf=\"(egreso.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (egreso.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (egreso.responsable.toLocaleLowerCase().includes(filtroResponsable.value.toLowerCase()) || filtroResponsable.value == '')\r\n                &&\r\n                (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLowerCase()) || filtroObra.value == '')\r\n                \"scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td>{{ egreso.nombre | titlecase }} </td>\r\n                <td>{{ egreso.categoria }}</td>\r\n                <td>{{ egreso.cantidad }} {{ egreso.unidad }}</td>\r\n                <td>{{ egreso.obra }}</td>\r\n                <td>{{ egreso.responsable }}</td>\r\n                <td>{{ egreso.fecha | date:'short' }}</td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n\r\n<!--INICIO DE TABLA DE BD ELIMINADOS-->\r\n    <div class=\"row\">\r\n        <h1>Eliminados</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <table class=\"table shadow table-striped\">\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombreEliminados=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre eliminados\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoriaEliminados=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoriaEliinados\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Eliminación</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <ng-container *ngFor=\"let eliminado of listaEliminados\">\r\n            <tr\r\n            *ngIf=\"(\r\n            (eliminado.nombre.toLocaleLowerCase().includes(filtroNombreEliminados.value.toLocaleLowerCase()) || filtroNombreEliminados.value == '')\r\n            &&\r\n            (eliminado.categoria.includes(filtroCategoriaEliminados.value)|| filtroCategoriaEliminados.value == null))\"\r\n            scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td> {{ eliminado.nombre | titlecase }} </td>\r\n                <td> {{ eliminado.categoria }} </td>\r\n                <td> {{ eliminado.cantidad }} {{ eliminado.unidad }} </td>\r\n                <td> {{ eliminado.responsable }} </td>\r\n                <td> {{ eliminado.fecha | date:'short'}} </td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n<!-- FIN TABLA DE ELIMINADOS -->\r\n\r\n<!-- MODAL PDF EGRESOS -->\r\n<div class=\"modal fade\" id=\"pdfEgresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n            <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-warning\">\r\n                <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n            </button>\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n        </div>\r\n        <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n            <h4>Egresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n                <thead class=\"thead bg-warning\">\r\n                <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Categoría</th>\r\n                    <th scope=\"col\">Cantidad</th>\r\n                    <th scope=\"col\">Obra</th>\r\n                    <th scope=\"col\">Responsable</th>\r\n                    <th scope=\"col\">Fecha Egreso</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n                <ng-container *ngFor=\"let egreso of egresos\">\r\n                    <tr>\r\n                    <td>{{ egreso.nombre | titlecase }}</td>\r\n                    <td>{{ egreso.categoria }}</td>\r\n                    <td>{{ egreso.cantidad }} {{ egreso.unidad }}</td>\r\n                    <td>{{ egreso.obra }}</td>\r\n                    <td>{{ egreso.responsable }}</td>\r\n                    <td>{{ egreso.fecha | date:'short' }}</td>\r\n                </tr>\r\n                </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { EgresosService } from '../../../services/egresos.service'\r\nimport { CategoriasService } from '../../../services/categorias.service'\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\n\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-egresos',\r\n  templateUrl: './egresos.component.html',\r\n  styleUrls: ['./egresos.component.css']\r\n})\r\nexport class EgresosComponent implements OnInit {\r\n\r\n  egresos: any = [];\r\n  categorias: any = [];\r\n  oculto = true;\r\n  fechaDesde: Date;\r\n  fechaHasta: string;\r\n  listaEliminados: any =[];\r\n\r\n  faFileDownload = faFileDownload;\r\n  faTimesCircle = faTimesCircle; \r\n\r\n  constructor(private servicioEgresos: EgresosService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioEliminados: EliminadosService) { }\r\n\r\n  ngOnInit(): void {\r\n    // DESCARGA DE INFORMACION DE BD, E INYECCION EN VARIABLES LOCALES\r\n    this.servicioEgresos.getEgresos().subscribe(\r\n      res => {this.egresos = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEliminados.getEliminados().subscribe(\r\n      res => {this.listaEliminados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n    //SE DESCARGA EL PDF DE EGRESOS\r\n    descargarPDF() {\r\n      const opciones = {\r\n        margin: 1,\r\n        filename: 'Egresos.pdf',\r\n        image: {type: 'jpeg', quality: 1},\r\n        html2canvas: {},\r\n        jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n      };\r\n\r\n      const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n      html2pdf()\r\n        .from(contenido)\r\n        .set(opciones)\r\n        .save();\r\n    }\r\n\r\n\r\n}\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild, ɵConsole } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n//SERVICIOS BD\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingresar',\r\n  templateUrl: './ingresar.component.html',\r\n  styleUrls: ['./ingresar.component.css']\r\n})\r\n\r\nexport class IngresarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  itemExistenteVar: boolean[] = [];\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faSignInAlt = faSignInAlt;\r\n\r\n  respuesta: any;\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  inventario: any = [];\r\n  nombre = \"\";\r\n  valido: boolean = true;\r\n\r\n  nuevosItems: any[] = [\r\n    {\r\n      id: null,\r\n      nombre: null,\r\n      categoria: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n  idItem: any;\r\n\r\n  constructor(private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private inventarioService: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private ingresosService: IngresosService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => this.categorias = res,\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => this.subcategorias = res,\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => this.ubicaciones = res,\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => this.unidades = res,\r\n      err => console.log(err)\r\n    );\r\n    this.inventarioService.getInventario().subscribe(\r\n      res => this.inventario = res,\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let indice: number = 0;\r\n    for(var item of this.nuevosItems) {\r\n\r\n      if(!this.itemExistenteVar[indice]) {\r\n        this.inventarioService.createItem(item).subscribe(\r\n          res => {\r\n            console.log(res[\"text\"]);\r\n            this.registrarIngreso(res[\"id\"], item, 1);\r\n          },\r\n          err => { console.log(err); }\r\n        );\r\n      }\r\n\r\n      else if (this.itemExistenteVar[indice]) {\r\n        let itemOriginal = this.inventario.find(itemInventario => itemInventario.id == item.id);\r\n\r\n        let itemModificar = {\r\n          cantidad: itemOriginal.cantidad + item.cantidad,\r\n          precio: itemOriginal.precio + item.precio,\r\n          descripcion: this.nuevosItems[indice].descripcion\r\n        };\r\n        this.inventarioService.updateItem(itemOriginal.id, itemModificar, false).subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.registrarIngreso(item.id, {cantidad: item.cantidad, precio: item.precio, categoria: item.categoria, unidades: item.unidades, nombre:item.nombre}, 3);\r\n          },\r\n          err => { console.log(err); }\r\n        );\r\n      }\r\n      indice++;\r\n    }\r\n    this.router.navigate(['inventario']);\r\n    }\r\n\r\n    registrarIngreso(id: any, item: any, modalidad: number) {\r\n      let ingreso = {\r\n        nombre_item_ingresado: item.nombre,\r\n        id_categoria_item_ingresado: +item.categoria,\r\n        id_unidad_item_ingresado: +item.unidades,\r\n        id_modalidad: +modalidad,\r\n        cantidad: +item.cantidad,\r\n        cedula_responsable_ingreso: this.auth.user.getValue().cedula,\r\n        precio: +item.precio\r\n      }\r\n      this.ingresosService.createIngreso(ingreso).subscribe(\r\n        res => { console.log(res); },\r\n        err => { console.log(err); }\r\n      );\r\n    }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevosItems = [{nombre: null,\r\n                        categoria: null,\r\n                        cantidad: null,\r\n                        ubicacion: null,\r\n                        vencimiento: null,\r\n                        serial: null,\r\n                        precio: null,\r\n                        unidades: null,\r\n                        estado: \"Disponible\"}];\r\n    this.router.navigate(['inventario']);\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        categoria: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.nuevosItems){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  regresarItem(id: any) {\r\n    return this.inventario.find(itemInv => itemInv.id == id);\r\n  }\r\n\r\n  actDescripcion(valor: any, index: number) {\r\n    this.nuevosItems[index].descripcion = valor.target.value;\r\n  }\r\n\r\n}\r\n","<div class=\"margin-top-form\">\r\n  <div class=\"container\">\r\n    <div class=\"body form-body-style\">\r\n      <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Ingreso</h3>\r\n        </div>  \r\n      </div>\r\n      <div class=\"container pe-5 ps-5 pt-2\">\r\n        <form #f=\"ngForm\">\r\n          <div class=\"pt-2\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n              <!-- <h3>Item {{i+1}}</h3> -->\r\n              <div class=\"form-check form-switch\">\r\n                <input class=\"form-check-input\" #itemExistente=\"ngModel\" type=\"checkbox\" id=\"flexSwitchCheckDefault\" [(ngModel)]='itemExistenteVar[i]' [name]=\"'checkboxExistente' + [i]\">\r\n                <label class=\"form-check-label\" for=\"flexSwitchCheckDefault\"></label>\r\n                <strong>Item Existente</strong>\r\n              </div>\r\n                <!--Nombre de producto-->\r\n                <div *ngIf=\"!itemExistenteVar[i]\" class=\"\">\r\n                  <div class=\"row mt-3 mb-4\">\r\n                    <div class=\"col-4\">\r\n                        <label>Nombre</label>\r\n                        <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" [name]=\"'nombre' + [i]\" class=\"form-control mt-2\">\r\n                        <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <!--Label y Select del tipo de producto-->\r\n                      <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                      <select #cat=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].categoria\" [name]=\"'cat' + [i]\">\r\n                        <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.id }}\">{{ categoria.nombre }}</option>\r\n                      </select>\r\n                      <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                      <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                        <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.id }}\">{{ subcategoria.nombre }}</option>\r\n                      </select>\r\n                      <small *ngIf=\"!subcat.valid && subcat.touched\" class=\"text-danger\">Ingrese una subcategoria.<br></small>\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label>Serial</label>\r\n                      <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" [name]=\"'serial' + [i]\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                    </div>\r\n                    <div class=\"col-2\">\r\n                      <label>Precio</label>\r\n                      <div class=\"input-group\">\r\n                      <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control mt-2\">\r\n                      <div class=\"input-group-append\">\r\n                        <span class=\"input-group-text mt-2\" id=\"basic-addon1\">$</span>\r\n                      </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                <div class=\"row mb-4\">\r\n                  <div class=\"col-3\">\r\n                    <!--Cantidad de producto-->\r\n                    <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        #cantidad=\"ngModel\"\r\n                        required\r\n                        type=\"number\"\r\n                        [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                        [name]=\"'cantidad' + [i]\"\r\n                        class=\"form-control mt-2\"\r\n                        (keyup)='revisarCantidad()'>\r\n                      <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" [name]=\"'unidades' + [i]\" class=\"form-select mt-2\">\r\n                        <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                      </select>\r\n                    </div>\r\n                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                    <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <label>Ubicación en almacén</label>\r\n                    <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" [name]=\"'ubicacion' + [i]\" class=\"form-select mt-2\" aria-describedby=\"emailHelp\">\r\n                      <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.id }}\">{{ ubicacion.nombre }}</option>\r\n                    </select>\r\n                  </div>\r\n                  <div class=\"col-2\" >\r\n                    <div class=\"form-group\">\r\n                      <label>Vencimiento</label>\r\n                      <input class=\"form-control mt-2\" [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n                  </div>\r\n                  </div>\r\n                  <div class=\"col-5\">\r\n                    <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                    <div class=\"form-group\">\r\n                      <label>Descripción</label>\r\n                      <input class=\"form-control mt-2\" >\r\n                  </div>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n\r\n                <!-- INICIO DEL FORM DE ITEM EXISTENTE -->\r\n                <div *ngIf=\"itemExistenteVar[i]\">\r\n                <div class=\"row mt-3 mb-3\">\r\n                  <div class=\"col-3\">\r\n                    <!--Label y Select del tipo de producto-->\r\n                    <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                    <select #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].categoria\" [name]=\"'cat' + [i]\">\r\n                      <ng-container *ngFor=\"let categoria of categorias\">\r\n                        <option value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                      </ng-container>\r\n\r\n                    </select>\r\n                    <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                    <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                      <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.nombre }}\">{{ subcategoria.nombre }}</option>\r\n                    </select>\r\n                    <small *ngIf=\"!subcat.valid && subcat.touched\" class=\"text-danger\">Ingrese una subcategoria.<br></small>\r\n                  </div>\r\n                  <div class=\"col-6\">\r\n                    <label>Nombre</label>\r\n                    <select #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].id\" [name]=\"'nombre' + [i]\" class=\"form-select mt-2\">\r\n                      <ng-container *ngFor=\"let item of inventario\">\r\n                        <option *ngIf=\"item.categoria == cat.value && item.subcategoria == subcat.value\" value=\"{{ item.id }}\">{{ item.nombre }}</option>\r\n                      </ng-container>\r\n                    </select>\r\n                      <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Seleccione un nombre.</small>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row mb-3\">\r\n                  <div class=\"col-3\">\r\n                    <!--Cantidad de producto-->\r\n                    <label for=\"exampleInputPassword1\">Cantidad a Ingresar</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        #cantidad=\"ngModel\"\r\n                        required\r\n                        type=\"number\"\r\n                        [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                        [name]=\"'cantidad' + [i]\"\r\n                        class=\"form-control mt-2\"\r\n                        (keyup)='revisarCantidad()'>\r\n                        <input *ngIf=\"nombre.value != undefined\" [placeholder]=\"regresarItem(nombre.value).unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                    </div>\r\n                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <label>Precio</label>\r\n                    <div class=\"input-group\">\r\n                    <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control mt-2\">\r\n                    <div class=\"input-group-append\">\r\n                      <span class=\"input-group-text mt-2\" id=\"basic-addon1\">$</span>\r\n                    </div>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                      <label>Vencimiento</label>\r\n                      <input class=\"form-control mt-2\" disabled [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n                  </div>\r\n                  <div class=\"col-5\">\r\n                    <label>Descripción</label>\r\n                    <input\r\n                      class=\"form-control mt-2\"\r\n                      [ngModel]=\"((nombre.value != undefined) ? regresarItem(nombre.value).descripcion : '')\"\r\n                      [name]=\"'descripcion' + [i]\"\r\n                      (keyup)=\"actDescripcion($event, i)\">\r\n                  </div>\r\n                </div>\r\n              </div>\r\n          </div>\r\n\r\n        <!--Footer de Modal con botones de cerrar e ingresar-->\r\n        <div class=\"form-footer-style\">\r\n          <div class=\"modal-footer\">\r\n                <div class=\"btn-group\">\r\n                    <button disabled type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                      <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                    </button>\r\n                    <button type=\"button\" [hidden]=\"nuevosItems.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" disabled (click)=\"nuevosItems.pop()\">\r\n                      <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                    </button>\r\n                </div>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                      <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                    </button>\r\n                    <!-- !f.valid significa cuando el form no sea valido -->\r\n                    <button [disabled]='!f.valid || !valido' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n                      <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n                  </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"container\">\r\n  <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfIngresos\" class=\"btn btn-primary float-end\">\r\n    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF </button>\r\n  <div class=\"row\">\r\n    <h1>Ingresos</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!--Tabla de inventario en donde se muestra el inventario general-->\r\n      <table class=\"table shadow table-striped\">\r\n        <thead data-html2canvas-ignore class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n              </select>\r\n            </th>\r\n            <th></th>\r\n            <th colspan=\"3\">\r\n              <div class=\"row\">\r\n                <div class=\"col\">Desde:</div>\r\n                <!--FILTRO POR FECHAS DE TABLA DE INGRESOS-->\r\n                <div class=\"col\">\r\n                  <input [(ngModel)]=\"fechaDesde\"\r\n                  (change)=\"changeFirstInput($event)\"\r\n                  class=\"form-control form-control-sm\" type=\"date\" value=\"\"\r\n                  name=\"fechaDesde\"></div>\r\n                <div class=\"col-2\">Hasta:</div>\r\n                <div class=\"col\"><input [(ngModel)]=\"fechaHasta\" class=\"form-control form-control-sm\" type=\"date\" [value]=\"fechaHasta\" name=\"fechaHasta\"></div>\r\n              </div>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <select #filtroModalidad=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroModalidad\">\r\n              <option value=\"\">Modalidad (Todas)</option>\r\n              <option *ngFor=\"let mod of modalidades\" [value]=\"mod.nombre\">{{ mod.nombre }}</option>\r\n              </select>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Fecha Ingreso</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Modalidad</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n          <ng-container *ngFor=\"let ingreso of ingresos\">\r\n            <tr *ngIf=\"(ingreso.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n            &&\r\n            (ingreso.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n            &&\r\n            (ingreso.modalidad.toLocaleLowerCase().includes(filtroModalidad.value.toLowerCase()) || filtroModalidad.value == '')\r\n            \"scope=\"row\" class=\"bg-light linea-tabla\">\r\n              <td>{{ ingreso.nombre | titlecase }}</td>\r\n              <td>{{ ingreso.categoria }}</td>\r\n              <td>{{ ingreso.cantidad }} {{ ingreso.unidad }}</td>\r\n              <td>\r\n                <div *ngIf=\"ingreso.precio != null && ingreso.precio != 0 && ingreso.modalidad != 'Reingreso'; else sinPrecio\">\r\n                  {{ ingreso.precio | currency }}\r\n                </div>\r\n                <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                <ng-template #sinPrecio>\r\n                  N/A\r\n                </ng-template>\r\n              </td>\r\n              <td>{{ ingreso.fecha | date:'dd-MM-yyyy h:m a'}}</td>\r\n              <td>{{ ingreso.responsable | titlecase }}</td>\r\n              <td>{{ ingreso.modalidad }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL PDF -->\r\n<div class=\"modal fade\" id=\"pdfIngresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n          <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-header\">\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Ingresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-primary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                  <th scope=\"col\">Responsable</th>\r\n                  <th scope=\"col\">Modalidad</th>\r\n                  <th scope=\"col\">Fecha Ingreso</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <ng-container *ngFor=\"let ingreso of ingresos\">\r\n                  <tr>\r\n                    <td>{{ ingreso.nombre | titlecase }}</td>\r\n                    <td>{{ ingreso.categoria }}</td>\r\n                    <td>{{ ingreso.cantidad }} {{ ingreso.unidad }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"ingreso.precio != null && ingreso.precio != 0 && ingreso.modalidad != 'Reingreso'; else sinPrecio\">\r\n                        {{ ingreso.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n                    <td>{{ ingreso.responsable }}</td>\r\n                    <td>{{ ingreso.modalidad }}</td>\r\n                    <td>{{ ingreso.fecha | date:'short'}}</td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { ModalidadesService } from 'src/app/services/modalidades.service';\r\n\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-ingresos',\r\n  templateUrl: './ingresos.component.html',\r\n  styleUrls: ['./ingresos.component.css']\r\n})\r\nexport class IngresosComponent implements OnInit {\r\n  ingresos: any = [];\r\n  categorias: any = [];\r\n  modalidades: any = [];\r\n  oculto = true;\r\n  fechaDesde: Date;\r\n  fechaHasta: Date;\r\n\r\n  faFileDownload = faFileDownload;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  constructor(private servicioIngresos: IngresosService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioModalidades: ModalidadesService) {\r\n              }\r\n\r\n  ngOnInit(): void {\r\n    // DESCARGA DE INFORMACION DE BD, E INYECCION EN VARIABLES LOCALES\r\n    this.servicioIngresos.getIngresos().subscribe(\r\n      res => {this.ingresos = res;},\r\n      err => console.log(err));\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioModalidades.getModalidades().subscribe(\r\n      res => {this.modalidades = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION DESCARGAR PDF DE INGRESOS\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Ingresos.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  dateAString(date: Date) {\r\n    let stringFecha: string = \"\";\r\n    stringFecha += date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getUTCDate();\r\n    console.log(stringFecha);\r\n    return stringFecha;\r\n  }\r\n\r\n    //FUNCIONES DE FILTRO POR FECHA (NO SIRVIERON)\r\n  changeFirstInput(e){\r\n    this.fechaDesde = e.target.value;\r\n    console.log(this.ingresos.filter(o => new Date(o.date) >= this.fechaDesde &&\r\n                                      new Date(o.date) <= this.fechaHasta  ));\r\n  }\r\n  changeSecondInput(e){\r\n    this.fechaHasta = e.target.value;\r\n    console.log(this.ingresos.filter(o => new Date(o.date) >= this.fechaDesde &&\r\n                                      new Date(o.date) <= this.fechaHasta  ));\r\n  } \r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-inventario-base',\n  templateUrl: './inventario-base.component.html',\n  styleUrls: ['./inventario-base.component.css']\n})\nexport class InventarioBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../inventario-models/item.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n// IMPORTS DE BD\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { EliminadosService } from 'src/app/services/eliminados.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n  faSearch = faSearch;\r\n  faFileDownload = faFileDownload;\r\n\r\n  oculto = true;\r\n\r\n  datosInfo: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    unidades: null,\r\n    ubicacion: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n  }\r\n\r\n  itemBorrar = {\r\n    id: null,\r\n    nombre: null\r\n  }\r\n\r\n  //VARIABLE PARA HACER LAS BUSQUEDA POR ID DEL ITEM DE AVERIA\r\n  idItemElegido:string = null;\r\n\r\n  filtroTipo: string = \"\";\r\n\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  estados: any = [];\r\n  unidades: any = [];\r\n\r\n  permisoAdmin:boolean = false;\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEliminados: EliminadosService,\r\n              public auth: AuthService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {\r\n        this.inventarioSQL = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {\r\n        this.categorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {\r\n        this.subcategorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {\r\n        this.ubicaciones = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {\r\n        this.estados = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {\r\n        this.unidades = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.permisoAdmin = this.auth.hasPermission([1]);\r\n  }\r\n\r\n  //RECIBE EL ITEM DE LA FILA, E IMPRIME DICHOS DATOS EN UNA VARIABLE\r\n  asignarDetalles(item: Item) {\r\n    this.datosInfo = item;\r\n  }\r\n\r\n  // ASIGNA LOS DATOS DEL ITEM A BORRAR EN LA VARIABLE itemBorrar\r\n  asignarBorrar(id, nombre) {\r\n    this.itemBorrar.id = id;\r\n    this.itemBorrar.nombre = nombre;\r\n  }\r\n  // ELIMINA EL ITEM SELECCIONADO DE LA BD CUANDO EL USUARIO ACEPTA EN EL MODAL\r\n  eliminarItem() {\r\n\r\n    this.servicioInventarioSQL.deleteItem(this.itemBorrar.id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n      let eliminacion = {\r\n        nombre: this.itemBorrar.nombre,\r\n        cantidad: +this.inventarioSQL.find(item => item.id == this.itemBorrar.id).cantidad,\r\n        cedula_responsable_eliminado: +10470050,\r\n        id_categoria: +this.categorias.find(categoria => categoria.nombre == this.inventarioSQL.find(item => item.id == this.itemBorrar.id).categoria).id,\r\n        id_unidad: +this.unidades.find(unidad => unidad.nombre == this.inventarioSQL.find(item => item.id == this.itemBorrar.id).unidades).id,\r\n      }\r\n      // COMUNICACION CON EL SERVICIO QUE INSERTA ELIMINADO EN BD\r\n      this.servicioEliminados.createEliminado(eliminacion).subscribe(\r\n        res => { console.log(res); },\r\n        err => { console.log(err); }\r\n      );\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE INVENTARIO\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Inventario.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n<!--Botones de ingreso y reingreso de productos-->\r\n  <div class=\"row px-4\">\r\n    <div class=\"container mt-lg-2\">\r\n      <h1>Inventario</h1>\r\n    </div>\r\n  </div>\r\n  <div class=\"row px-4\">\r\n    <div class=\"mb-2\">\r\n      <div class=\"btn-group float-end\">\r\n        <button type=\"button\" class=\"btn btn-success cool-btn\" routerLink='ingresar'>\r\n          <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-info cool-btn text-white\" routerLink='reingreso' >\r\n          <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Reingreso\r\n        </button>\r\n        <button type=\"button\" class=\"btn btn-warning cool-btn\" routerLink='egresar'>\r\n          <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egreso\r\n        </button>\r\n        <button *ngIf=\"permisoAdmin\" type=\"button\" class=\"btn btn-primary text-white cool-btn\" routerLink='modificar'>\r\n          <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n        </button>\r\n        <button data-bs-toggle=\"modal\" data-bs-target=\"#pdfInventario\" class=\"btn btn-secondary float-right\">\r\n          <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF\r\n        </button>\r\n      </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"row px-4\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n  <div class=\"table-responsive\">\r\n    <table class=\"table table-sm shadow table-striped\">\r\n      <thead class=\"table-dark \">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\">\r\n            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n          </th>\r\n          <th scope=\"col\">\r\n            <select #filtroCategoria=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\">\r\n            <select #filtroUbicacion=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroUbicacion\">\r\n              <option value=\"\">Ubicación (Todas)</option>\r\n              <option *ngFor=\"let ubicacion of ubicaciones\" [value]=\"ubicacion.nombre\">{{ ubicacion.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"table-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Subcategoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!-- *ngIf=\"(item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase() || item.tipo == filtroCategoria.value)) || filtroNombre.value == ''\" -->\r\n\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventarioSQL\">\r\n          <ng-container *ngIf=\"item.cantidad != 0\">\r\n            <tr\r\n              class=\"table-sm\"\r\n              scope=\"row\"\r\n              *ngIf=\"(\r\n                (item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (item.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (item.ubicacion == filtroUbicacion.value || filtroUbicacion.value == '')\r\n              )\"\r\n            class=\"bg-light linea-tabla\">\r\n            <td>{{ item.nombre | titlecase }}</td>\r\n            <td>{{ item.categoria }}</td>\r\n            <td>{{ item.subcategoria }}</td>\r\n            <td><span [ngClass]=\"{'text-danger': item.estado=='En Obra'}\">{{ item.cantidad }} {{ item.unidades }}</span></td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible',\r\n                            'text-danger': item.estado=='Dañado',\r\n                            'text-info': item.estado=='En Obra'}\"> <span *ngIf=\"item.estado=='En Obra'\">{{ item.cantidadObra }}</span> {{ item.estado }}</td>\r\n            <td>\r\n              <div class=\"btn-group\">\r\n                <button (click)=\"asignarDetalles(item)\" type=\"button\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Detalles\r\n              </button>\r\n              <button *ngIf=\"permisoAdmin\" (click)=\"asignarBorrar(item.id, item.nombre)\" type=\"button\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Eliminar\r\n              </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </ng-container>\r\n\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n</div>\r\n\r\n<!-- INICIO MODAL ELIMINAR -->\r\n<div class=\"modal\" tabindex=\"-1\" id=\"modalEliminar\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-danger\">\r\n        <h5 class=\"modal-title text-white\">Eliminar Item</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>¿Estás seguro que deseas eliminar <strong>{{ itemBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n        <button (click)=\"eliminarItem()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR -->\r\n\r\n<!-- MODAL DE INFO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n          <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.id }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.serial != null\">\r\n                <th>Serial</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.serial }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Categoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.categoria }}</td>\r\n              </tr>\r\n              <tr>\r\n              <tr>\r\n                <th>Subcategoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.subcategoria }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidad }} {{datosInfo.unidades }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.cantidadObra != null && datosInfo.cantidadObra !=0\">\r\n                <th>Cantidad en Obra</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidadObra }} {{datosInfo.unidades }} en obra</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.ubicacion != null\">\r\n                <th>Ubicación</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.ubicacion }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.estado != null\">\r\n                <th>Estado</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.estado }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.vencimiento != null\">\r\n                <th>Vencimiento</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.vencimiento | date}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.precio != null\">\r\n                <th>Precio</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.precio |currency}}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.descripcion != null\">\r\n                <th>Descripcion</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.descripcion | lowercase}}</td>\r\n              </tr>\r\n              <tr><th></th><td></td><td></td></tr>\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO -->\r\n</div>\r\n\r\n<!-- MODAL PDF DE INVENTARIO-->\r\n<div class=\"modal fade\" id=\"pdfInventario\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <div class=\"btn-group rounded\" role=\"group\">\r\n          <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">\r\n              <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n          </button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Inventario</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-secondary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <ng-container *ngFor=\"let itemPDF of inventarioSQL\">\r\n                  <ng-container *ngIf=\"itemPDF.cantidad != 0\">\r\n                  <tr>\r\n                    <td>{{ itemPDF.nombre }}</td>\r\n                    <td>{{ itemPDF.categoria }}</td>\r\n                    <td>{{ itemPDF.cantidad }} {{ itemPDF.unidades }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"itemPDF.precio != null; else sinPrecio\">\r\n                        {{ itemPDF.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n                  </tr>\r\n                </ng-container>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { Categoria } from 'src/app/modulo_inventario/inventario-models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\n\r\n// IMPORTS DE BD\r\nimport { InventarioSQLService } from '../../../services/inventario-sql.service';\r\nimport { CategoriasService } from '../../../services/categorias.service';\r\nimport { UbicacionesService } from '../../../services/ubicaciones.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-modificar',\r\n  templateUrl: './modificar.component.html',\r\n  styleUrls: ['./modificar.component.css']\r\n})\r\nexport class ModificarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  //VARIABLES QUE CONTIENEN BASES DE DATOS\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n    private servicioCategorias: CategoriasService,\r\n    private servicioSubcategorias: SubcategoriasService,\r\n    private servicioUbicaciones: UbicacionesService,\r\n    private servicioUnidades: UnidadesService,\r\n    private servicioEstados: EstadosService,\r\n    private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {this.inventarioSQL = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n    //ENCUENTRA EL ID DEL ITEM A MODIFICAR\r\n  alElegirItem(idItem: string) {\r\n    // this.itemElegido = this.inventarioSQL.find(item => item.id == idItem);\r\n    this.itemElegido = Object.assign({}, this.inventarioSQL.find(item => item.id == idItem));\r\n  }\r\n\r\n  onModificar() {\r\n    this.itemElegido.categoria = this.categorias.find(cat => cat.nombre == this.itemElegido.categoria).id;\r\n    this.itemElegido.subcategoria = this.subcategorias.find(subcat => subcat.nombre == this.itemElegido.subcategoria).id;\r\n    this.itemElegido.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == this.itemElegido.ubicacion).id;\r\n    this.itemElegido.unidades = this.unidades.find(und => und.nombre == this.itemElegido.unidades).id;\r\n    this.itemElegido.estado = this.estados.find(est => est.nombre == this.itemElegido.estado).id;\r\n\r\n    this.servicioInventarioSQL.updateItem(this.itemElegido.id, this.itemElegido, true).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate(['inventario']);\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-modificar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Modificar</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-3'>\r\n                <form #f=\"ngForm\">\r\n                    <div class=\"container \">\r\n                        <h5>Seleccione el item a modificar:</h5>\r\n                    </div> \r\n                    <div class=\"container\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select class=\"form-select mt-2\" ngModel required name=\"selectCategoriaModificar\" #selectCategoriaModificar=\"ngModel\">\r\n                                <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectCategoriaModificar.valid && selectCategoriaModificar.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Subcategoría</label>\r\n                                <select class=\"form-select mt-2\" ngModel required name=\"selectSubcategoriaModificar\" #selectSubcategoriaModificar=\"ngModel\">\r\n                                <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.nombre }}\">{{ subcategoria.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!selectSubcategoriaModificar.valid && selectSubcategoriaModificar.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                            </div>\r\n                            <div class=\"col-6\">\r\n                                <label>Item</label>\r\n                                <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class=\"form-select mt-2\" ngModel required name=\"item\" #selectItemModif='ngModel'>\r\n                                <ng-container *ngFor=\"let item of inventarioSQL\">\r\n                                    <option\r\n                                    *ngIf=\"item.categoria == selectCategoriaModificar.value &&\r\n                                    item.subcategoria == selectSubcategoriaModificar.value\"\r\n                                    value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                    </ng-container>\r\n                                </select>\r\n                                <small *ngIf=\"!selectItemModif.valid && selectItemModif.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                            </div>\r\n                        </div>\r\n                    <hr>\r\n                    <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS-->\r\n                    <div class=\"container mt-2\">\r\n                        <h5>Modifique los datos que desee:</h5>\r\n                    </div> \r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Nombre</label>\r\n                                <input required type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.nombre\"\r\n                                name=\"nombre\" class=\"form-control mt-2\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Categoría</label>\r\n                                <select required class=\"form-select mt-2\"\r\n                                [(ngModel)]=\"itemElegido.categoria\"\r\n                                name=\"categoria\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.nombre }}\">{{ categoria.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Subcategoría</label>\r\n                                <select required class=\"form-select mt-2\"\r\n                                [(ngModel)]=\"itemElegido.subcategoria\"\r\n                                name=\"subcategoria\">\r\n                                    <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Precio</label>\r\n                                <input onkeypress=\"return event.charCode > 48\" min=\"0\" type=\"number\"\r\n                                [(ngModel)]=\"itemElegido.precio\"\r\n                                name=\"precio\" class=\"form-control mt-2\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Cantidad y Unidades</label>\r\n                                <div class=\"input-group\">\r\n                                    <input onkeypress=\"return event.charCode > 48\" min=\"1\" [(ngModel)]=\"itemElegido.cantidad\" type=\"number\" name=\"cantidad\" class=\"form-control mt-2\">\r\n                                    <select type=\"text\" placeholder=\":itemElegido.unidad\"  name=\"unidades\" [(ngModel)]=\"itemElegido.unidades\" class=\"form-select mt-2\">\r\n                                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Ubicación</label>\r\n                                <select type=\"text\" name=\"ubicacion\" [(ngModel)]=\"itemElegido.ubicacion\" class=\"form-select mt-2\" aria-describedby=\"emailHelp\">\r\n                                    <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Estado</label>\r\n                                <select type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.estado\"\r\n                                name=\"estado\" class=\"form-select mt-2\">\r\n                                    <option *ngFor='let estado of estados' value=\"{{ estado.nombre }}\">{{ estado.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <label>Serial</label>\r\n                                <input type=\"text\"\r\n                                [(ngModel)]=\"itemElegido.serial\"\r\n                                name=\"serial\" class=\"form-control mt-2\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-9\">\r\n                                <label>Descripción</label>\r\n                                <input\r\n                                class=\"form-control mt-2\"\r\n                                [(ngModel)]=\"itemElegido.descripcion\"\r\n                                [name]=\"'descripcion'\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Fecha de Vencimiento</label>\r\n                                <input class=\"form-control mt-2\"\r\n                                [(ngModel)]=\"itemElegido.vencimiento\"\r\n                                name=\"vencimiento\" type=\"date\">\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--BOTONES FUNCIONES MODIFICAR-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button (click)=\"borrarForm()\" type=\"button\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid' (click)=\"onModificar()\" type=\"button\" class=\"btn btn-primary text-white\">\r\n                                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { Categoria } from 'src/app/modulo_inventario/inventario-models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Ingreso } from 'src/app/modulo_inventario/inventario-models/ingreso.model';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\nexport class ReingresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  inventario: any = [];\r\n  categorias: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n  ubicaciones: any = [];\r\n  subcategorias: any = [];\r\n  cantidadIngreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsReingreso = [\r\n    {id: \"\", cantidad: 1}\r\n  ];\r\n\r\n  constructor(private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioInventario: InventarioSQLService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioIngresos: IngresosService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioInventario.getInventario().subscribe(\r\n      res => {this.inventario = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},);\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsReingreso[indice].id);\r\n  }\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  reingresarItems() {\r\n    for(let item of this.idsReingreso) {\r\n      let nuevoItem = Object.assign({},this.inventario.find(itemInv => itemInv.id == item.id));\r\n      let itemListaIngresos = Object.assign({},nuevoItem);\r\n\r\n      if(item.cantidad == nuevoItem.cantidadObra) {\r\n        nuevoItem.estado = \"Disponible\";\r\n        nuevoItem.cantidadObra = 0;\r\n      }\r\n      else if(item.cantidad < nuevoItem.cantidadObra){\r\n        nuevoItem.estado = \"En Obra\";\r\n        nuevoItem.cantidadObra -= item.cantidad;\r\n      }\r\n\r\n      //CAMPOS FALTANTES EN INGRESO\r\n      itemListaIngresos.cantidad = item.cantidad;\r\n\r\n      nuevoItem.cantidad += item.cantidad;\r\n      nuevoItem.categoria = this.categorias.find(cat => cat.nombre == nuevoItem.categoria).id;\r\n      nuevoItem.subcategoria = this.subcategorias.find(subcat => subcat.nombre == nuevoItem.subcategoria).id;\r\n      nuevoItem.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == nuevoItem.ubicacion).id;\r\n      nuevoItem.unidades = this.unidades.find(und => und.nombre == nuevoItem.unidades).id;\r\n      nuevoItem.estado = this.estados.find(est => est.nombre == nuevoItem.estado).id;\r\n\r\n      this.servicioInventario.updateItem(nuevoItem.id, nuevoItem, true).subscribe(\r\n        res => {\r\n          console.log(res);\r\n          console.log(res[\"text\"]);\r\n          this.registrarIngreso(+nuevoItem.id, itemListaIngresos);\r\n        },\r\n        err => {console.log(err);}\r\n      );\r\n\r\n    }\r\n    this.form.reset();\r\n    this.router.navigate(['inventario']);\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n  }\r\n\r\n  // FUNCION QUE REGISTRA REINGRESO EN BD DE INGRESOS\r\n  registrarIngreso(id: any, itemListaIngresos){\r\n    let ingreso = {\r\n      nombre_item_ingresado: itemListaIngresos.nombre,\r\n      id_categoria_item_ingresado: +this.categorias.find(cat => cat.nombre == itemListaIngresos.categoria).id,\r\n      id_unidad_item_ingresado: +this.unidades.find(und => und.nombre == itemListaIngresos.unidades).id,\r\n      id_modalidad: +2,\r\n      cantidad: +itemListaIngresos.cantidad,\r\n      cedula_responsable_ingreso: this.auth.user.getValue().cedula,\r\n      precio: +itemListaIngresos.precio\r\n    }\r\n    this.servicioIngresos.createIngreso(ingreso).subscribe(\r\n      res => { console.log(res); },\r\n      err => { console.log(err); }\r\n    );\r\n  }\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n    this.router.navigate(['inventario']);\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsReingreso.push({id: \"\", cantidad: 1});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsReingreso.pop();\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.idsReingreso){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  restaurarValor(i: number) {\r\n    this.idsReingreso[i].cantidad = 1;\r\n    this.revisarCantidad();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"margin-top-form\">\r\n  <div class=\"container\">\r\n    <div class=\"body form-body-style\">\r\n      <div class=\"container pt-3 form-header-style header-color-reingreso\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Reingreso</h3>\r\n        </div>  \r\n      </div>\r\n      <div class='container pe-5 ps-5 pt-2'>\r\n        <form #f=\"ngForm\">\r\n          <div *ngFor=\"let item of idsReingreso; let i=index\">\r\n            <div class=\"container mt-2\">\r\n              <h5>Item {{i+1}}</h5>\r\n            </div>\r\n            <div class=\"container\">\r\n              <div class=\"row mt-3 mb-4\">\r\n                  <div class=\"col-2\">\r\n                      <label>Categoría</label>\r\n                        <select (change)=\"restaurarValor(i)\" required class=\"form-select mt-2\" ngModel [name]=\"'selectTipo'+[i]\" #selectCategoria=\"ngModel\">\r\n                          <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                        <small *ngIf=\"!selectCategoria.valid && selectCategoria.touched\" class=\"text-danger\">Ingrese una categoría.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                      <label>Subcategoria</label>\r\n                        <select required class=\"form-select mt-2\" ngModel [name]=\"'selectSubcategoria'+[i]\" #selectSubcategoria=\"ngModel\">\r\n                          <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                        </select>\r\n                        <small *ngIf=\"!selectSubcategoria.valid && selectSubcategoria.touched\" class=\"text-danger\">Ingrese una subcategoría.</small>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                      <label>Item</label>\r\n                      <select #itemSelect=\"ngModel\" required class=\"form-select mt-2\" [(ngModel)]=\"idsReingreso[i].id\" [name]=\"'selectId'+[i]\">\r\n                        <!--NGFOR QUE IMPRIME ITEMS DE BD-->\r\n                        <ng-container *ngFor=\"let item of inventario\">\r\n                          <!--FILTRO POR CATEGORIA DE ITEMS BD-->\r\n                          <ng-container *ngIf=\"item.categoria == selectCategoria.value && item.subcategoria == selectSubcategoria.value\">\r\n                            <option *ngIf=\"(item.categoria == 'Herramienta' && item.estado == 'En Obra') || (item.categoria != 'Herramienta')\" value='{{ item.id }}'>{{ item.nombre }}</option>\r\n                          </ng-container>\r\n                        </ng-container>\r\n                      </select>\r\n                      <small *ngIf=\"!itemSelect.valid && itemSelect.touched\" class=\"text-danger\">Ingrese un item.</small>\r\n                  </div>\r\n                  <div class=\"col-2\">\r\n                    <!--INPUT DE CANTIDAD (MUESTRA CANTIDAD EXISTENTE)-->\r\n                    <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                    <p *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\">{{ inventario[regresarIndice(i)].cantidad }} {{ inventario[regresarIndice(i)].unidades }}</p>\r\n                  </div>\r\n                  <div class=\"col-3\">\r\n                    <!--INPUT DE CANTIDAD (INGRESO DE CANTIDAD)-->\r\n                    <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                    <div class=\"input-group\">\r\n                      <input\r\n                        *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\"\r\n                        onkeypress=\"return event.charCode >= 46\"\r\n                        min=\"1\"\r\n                        type=\"number\"\r\n                        (keyup)='revisarCantidad()'\r\n                        [(ngModel)]=\"idsReingreso[i].cantidad\"\r\n                        [name]=\"'cantidad'+[i]\"\r\n                        class=\"form-control mt-2\">\r\n                        <input *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\" [placeholder]=\"inventario[regresarIndice(i)].unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control mt-2\">\r\n                      </div>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!--BOTONES DE FUNCIONES REINGRESO-->\r\n            <div class=\"form-footer-style\">\r\n              <div class=\"modal-footer\">\r\n                <div class=\"btn-group\">\r\n                  <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                  </button>\r\n                  <button type=\"button\" [hidden]=\"idsReingreso.length == 1\" class=\"btn btn-secondary\" [disabled]=\"idsReingreso.length == 1\" (click)=\"restarItem()\">\r\n                    <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                  </button>\r\n                </div>\r\n                  <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                    <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                  </button>\r\n                  <button [disabled]='!valido || !f.valid' type=\"button\" class=\"btn btn-info text-white\" (click)=\"reingresarItems()\">\r\n                    <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n                  </button>\r\n              </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { EgresarComponent } from './components/egresar/egresar.component';\r\nimport { EgresosComponent } from './components/egresos/egresos.component';\r\nimport { IngresarComponent } from './components/ingresar/ingresar.component';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\nimport { InventarioBaseComponent } from './components/inventario-base/inventario-base.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport { ModificarComponent } from './components/modificar/modificar.component';\r\nimport { ReingresoComponent } from './components/reingreso/reingreso.component';\r\n\r\nconst inventarioRoutes: Routes = [\r\n  { path: '', component: InventarioBaseComponent,\r\n    children: [\r\n      { path: '', component: InventarioComponent },\r\n      { path: 'egresar', component: EgresarComponent},\r\n      { path: 'egresos', component: EgresosComponent },\r\n      { path: 'ingresar', component: IngresarComponent},\r\n      { path: 'ingresos', component: IngresosComponent },\r\n      { path: 'reingreso', component: ReingresoComponent},\r\n      { path: 'modificar', component: ModificarComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(inventarioRoutes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class InventarioRoutingModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getCategorias() {\n    return this.http.get(`${this.API_URI}/categorias`);\n  }\n\n  getCategoria(id: string) {\n    return this.http.get(`${this.API_URI}/categorias/${id}`);\n  }\n\n  createCategoria(categoria: any) {\n    return this.http.post(`${this.API_URI}/categorias`, categoria);\n  }\n\n  deleteCategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/categorias/${id}`);\n  }\n\n  updateCategoria(id: string, categoria: string) {\n    return this.http.put(`${this.API_URI}/categorias/${id}`, categoria);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EgresosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEgresos() {\r\n    return this.http.get(`${this.API_URI}/egresos`);\r\n  }\r\n\r\n  // getItem(id: string) {\r\n  //   return this.http.get(`${this.API_URI}/herramientas/${id}`);\r\n  // }\r\n\r\n  createEgreso(egreso: any) {\r\n    return this.http.post(`${this.API_URI}/egresos`, egreso);\r\n  }\r\n\r\n  deleteEgreso(id: string) {\r\n    return this.http.delete(`${this.API_URI}/egresos/${id}`);\r\n  }\r\n\r\n  updateEgreso(id: string, egreso: any) {\r\n    return this.http.put(`${this.API_URI}/egresos/${id}`, egreso);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EliminadosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEliminados() {\r\n    return this.http.get(`${this.API_URI}/eliminados`);\r\n  }\r\n\r\n  createEliminado(eliminado: any) {\r\n    return this.http.post(`${this.API_URI}/eliminados`, eliminado);\r\n  }\r\n\r\n  deleteEliminado(id: string) {\r\n    return this.http.delete(`${this.API_URI}/eliminados/${id}`);\r\n  }\r\n\r\n  updateEliminado(id: string, eliminado: any) {\r\n    return this.http.put(`${this.API_URI}/eliminados/${id}`, eliminado);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class EstadosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getEstados() {\r\n    return this.http.get(`${this.API_URI}/estados`);\r\n  }\r\n\r\n  getEstado(id: string) {\r\n    return this.http.get(`${this.API_URI}/estados/${id}`);\r\n  }\r\n\r\n  createEstado(estado: string) {\r\n    return this.http.post(`${this.API_URI}/estados`, estado);\r\n  }\r\n\r\n  deleteEstado(id: string) {\r\n    return this.http.delete(`${this.API_URI}/estados/${id}`);\r\n  }\r\n\r\n  updateEstado(id: string, estado: string) {\r\n    return this.http.put(`${this.API_URI}/estados/${id}`, estado);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Ingreso } from '../modulo_inventario/inventario-models/ingreso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getIngresos() {\n    return this.http.get(`${this.API_URI}/ingresos`);\n  }\n\n  // getItem(id: string) {\n  //   return this.http.get(`${this.API_URI}/herramientas/${id}`);\n  // }\n\n  createIngreso(ingreso: any) {\n    return this.http.post(`${this.API_URI}/ingresos`, ingreso);\n  }\n\n  deleteItem(id: string) {\n    return this.http.delete(`${this.API_URI}/ingresos/${id}`);\n  }\n\n  updateItem(id: string, ingreso: any) {\n    return this.http.put(`${this.API_URI}/ingresos/${id}`, ingreso);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http'\r\nimport { Item } from '../modulo_inventario/inventario-models/item.model';\r\nimport { environment } from '../../environments/environment';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class InventarioSQLService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient, private auth: AuthService) { }\r\n\r\n  getInventario() {\r\n    return this.http.get(`${this.API_URI}/herramientas`);\r\n  }\r\n\r\n  getItem(id: string) {\r\n    return this.http.get(`${this.API_URI}/herramientas/${id}`);\r\n  }\r\n\r\n  createItem(item: Item) {\r\n    let nuevoItem = {\r\n      nombre: item.nombre,\r\n      id_categoria: +item.categoria,\r\n      id_subcategoria: +item.subcategoria,\r\n      cantidad: item.cantidad,\r\n      id_unidad: +item.unidades,\r\n      id_ubicacion: +item.ubicacion,\r\n      id_estado: 1,\r\n      vencimiento: item.vencimiento,\r\n      serial: item.serial,\r\n      precio: item.precio,\r\n      descripcion: item.descripcion,\r\n      cantidadObra: item.cantidadObra\r\n    }\r\n    return this.http.post(`${this.API_URI}/herramientas`, nuevoItem);\r\n  }\r\n\r\n  deleteItem(id: string) {\r\n    return this.http.delete(`${this.API_URI}/herramientas/${id}`);\r\n  }\r\n\r\n  updateItem(id: string, item: any, full: boolean=true) {\r\n\r\n    if(full){\r\n      let nuevoItem = {\r\n        nombre: item.nombre,\r\n        id_categoria: +item.categoria,\r\n        id_subcategoria: +item.subcategoria,\r\n        cantidad: item.cantidad,\r\n        id_unidad: +item.unidades,\r\n        id_ubicacion: +item.ubicacion,\r\n        id_estado: +item.estado,\r\n        vencimiento: item.vencimiento,\r\n        serial: item.serial,\r\n        precio: item.precio,\r\n        descripcion: item.descripcion,\r\n        cantidadObra: item.cantidadObra\r\n      }\r\n      return this.http.put(`${this.API_URI}/herramientas/${id}`, nuevoItem);\r\n    }\r\n    else {\r\n      return this.http.put(`${this.API_URI}/herramientas/${id}`, item);\r\n    }\r\n\r\n  }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ModalidadesService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getModalidades() {\r\n    return this.http.get(`${this.API_URI}/modalidades`);\r\n  }\r\n\r\n  getModadlidad(id: string) {\r\n    return this.http.get(`${this.API_URI}/modalidades/${id}`);\r\n  }\r\n\r\n  createModalidad(modalidad: string) {\r\n    return this.http.post(`${this.API_URI}/modalidades`, modalidad);\r\n  }\r\n\r\n  deleteModalidad(id: string) {\r\n    return this.http.delete(`${this.API_URI}/modalidades/${id}`);\r\n  }\r\n\r\n  updateModalidad(id: string, modalidad: string) {\r\n    return this.http.put(`${this.API_URI}/modalidades/${id}`, modalidad);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubcategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getSubcategorias() {\n    return this.http.get(`${this.API_URI}/subcategorias`);\n  }\n\n  getSubcategoria(id: string) {\n    return this.http.get(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  createSubcategoria(subcategoria: any) {\n    return this.http.post(`${this.API_URI}/subcategorias`, subcategoria);\n  }\n\n  deleteSubcategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  updateSubcategoria(id: string, subcategoria: string) {\n    return this.http.put(`${this.API_URI}/subcategorias/${id}`, subcategoria);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UbicacionesService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUbicaciones() {\r\n    return this.http.get(`${this.API_URI}/ubicaciones`);\r\n  }\r\n\r\n  getUbicacion(id: string) {\r\n    return this.http.get(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  createUbicacion(categoria: any) {\r\n    return this.http.post(`${this.API_URI}/ubicaciones`, categoria);\r\n  }\r\n\r\n  deleteUbicacion(id: string) {\r\n    return this.http.delete(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  updateUbicacion(id: string, categoria: string) {\r\n    return this.http.put(`${this.API_URI}/ubicaciones/${id}`, categoria);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getUnidades() {\n    return this.http.get(`${this.API_URI}/unidades`);\n  }\n\n  getUnidad(id: string) {\n    return this.http.get(`${this.API_URI}/unidades/${id}`);\n  }\n\n  createUnidad(unidad: any) {\n    return this.http.post(`${this.API_URI}/unidades`, unidad);\n  }\n\n  deleteUnidad(id: string) {\n    return this.http.delete(`${this.API_URI}/unidades/${id}`);\n  }\n\n  updateUnidad(id: string, unidad: string) {\n    return this.http.put(`${this.API_URI}/unidades/${id}`, unidad);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UsuariosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUsuarios() {\r\n    return this.http.get(`${this.API_URI}/empleados`);\r\n  }\r\n\r\n  getUsuario(id: string) {\r\n    return this.http.get(`${this.API_URI}/empleados/${id}`);\r\n  }\r\n\r\n  // createUsuario(categoria: any) {\r\n  //   return this.http.post(`${this.API_URI}/ubicaciones`, categoria);\r\n  // }\r\n\r\n  // deleteUbicacion(id: string) {\r\n  //   return this.http.delete(`${this.API_URI}/ubicaciones/${id}`);\r\n  // }\r\n\r\n  updateUsuario(id: string, usuario: string) {\r\n    return this.http.put(`${this.API_URI}/empleados/${id}`, usuario);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row d-flex justify-content-center\">\r\n    <div class=\"col-10 col-sm-8 col-md-6 col-lg-5 col-xl-4 shadow mt-5\">\r\n      <div class=\"row\">\r\n        <div class=\"col shadow bg-white d-flex justify-content-center\">\r\n          <div class=\"pt-4 pb-4\">\r\n            <img src=\"../../../assets/logo-gris.svg\" style=\"max-width: 450px; width: 100%\" class=\"card-img-top\">\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"row bg-white\">\r\n        <div class=\"col\">\r\n          <div class=\"px-3 pt-2 pb-4\">\r\n\r\n            <div *ngIf=\"error\" class=\"alert alert-danger\">\r\n              <p>{{ error }}</p>\r\n            </div>\r\n\r\n            <div *ngIf=\"isLoading\" class=\"d-flex justify-content-center\">\r\n              <div\r\n                style=\"text-align: center; width: 3rem; height: 3rem;\"\r\n                class=\"spinner-border text-primary align-self-center\"\r\n                role=\"status\">\r\n                <span class=\"visually-hidden\">Loading...</span>\r\n              </div>\r\n            </div>\r\n\r\n          <form #authForm=\"ngForm\" (ngSubmit)=\"onSubmit(authForm)\" *ngIf=\"!isLoading\">\r\n          <h5 class=\"mt-3 pb-1\">Inicia Sesión</h5>\r\n\r\n          <div class=\"pb-2\">\r\n            <label>Número de Cédula</label>\r\n            <input type=\"text\" class=\"form-control\" required ngModel name=\"cedula\">\r\n          </div>\r\n\r\n          <div class=\"pb-3\">\r\n            <label>Contraseña</label>\r\n            <input type=\"password\" class=\"form-control\" required ngModel name=\"password\">\r\n          </div>\r\n          <div class=\"pt-2 pb-3\">\r\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\r\n            <button type=\"submit\" [disabled]='!this.authForm.valid' class=\"btn btn-success float-end\">Ingresar</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  isLoading = false;\r\n  error: string = null;\r\n\r\n  constructor(private router: Router, private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(form: NgForm) {\r\n    if(!form.valid) {\r\n      return;\r\n    }\r\n    this.error = null;\r\n    const cedula = form.value.cedula;\r\n    const password = form.value.password;\r\n\r\n    this.isLoading = true;\r\n\r\n    this.auth.signIn(cedula, password).subscribe(\r\n      resData => {\r\n        this.isLoading = false;\r\n      }, errorRes => {\r\n        this.error = 'Error: ' + errorRes.error.message;\r\n        this.isLoading = false;\r\n      });\r\n      form.reset();\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row mb-3 pt-3\">\r\n      <div class=\"col\">\r\n        <h3>Bienvenido, seleccione el módulo al que desee acceder:</h3>\r\n      </div>\r\n    </div>\r\n    <div class=\"row justify-content-center\">\r\n      <div class=\"col-12 col-sm-6 col-lg-4 mt-5\" *ngIf=\"auth.hasPermission([2])\">\r\n        <div class=\"card-section rounded p-3 bg-white\">\r\n          <div class=\"card-header-style-within header-color-inventario rounded pb-3\">\r\n            <h2 class=\"card-header-title text-white text-center pt-3\">Inventario</h2>\r\n          </div>\r\n          <div class=\"card-body text-center\">\r\n            <h5 class=\"card-title mb-4\">Módulo de gestión de inventario</h5>\r\n              <div class=\"row gy-4 justify-content-center\">\r\n                <div class=\"col-6 col-sm-12 col-md-6\">\r\n                  <a class=\"btn btn-outline-dark shadow w-100\" routerLink='/inventario'>\r\n                    <fa-icon [icon]=\"faWarehouse\"></fa-icon><br>Inventario</a>\r\n                </div>\r\n                <div class=\"col-6 col-sm-12 col-md-6\">\r\n                  <a class=\"btn btn-outline-dark shadow w-100\" routerLink='/inventario/ingresos'>\r\n                    <fa-icon [icon]=\"faSignInAlt\"></fa-icon><br>Ingresos</a>\r\n                </div>\r\n                <div class=\"col-6 col-sm-12 col-md-6\">\r\n                  <a class=\"btn btn-outline-dark shadow w-100\" routerLink='/inventario/egresos'>\r\n                    <fa-icon [icon]=\"faSignOutAlt\"></fa-icon><br>Egresos</a>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 col-lg-4 mt-5\" *ngIf=\"auth.hasPermission([3])\">\r\n        <div class=\"card-section rounded p-3 bg-white\">\r\n          <div class=\"card-header-style-within header-color-procura rounded pb-3\">\r\n            <h2 class=\"card-header-title text-white text-center pt-3\">Procura</h2>\r\n          </div>\r\n          <div class=\"card-body text-center\">\r\n            <h5 class=\"card-title mb-4\">Módulo de procura</h5>\r\n              <div class=\"row gy-4 justify-content-center\">\r\n                <div class=\"col-6 col-sm-12 col-md-6\">\r\n                  <a class=\"btn btn-outline-dark shadow w-100\" routerLink='/procura/proveedores'>\r\n                    <fa-icon [icon]=\"faStore\"></fa-icon><br>Proveedores</a>\r\n                </div>\r\n                <div class=\"col-6 col-sm-12 col-md-6\">\r\n                  <a class=\"btn btn-outline-dark shadow w-100\" routerLink='/procura/productos'>\r\n                    <fa-icon [icon]=\"faHammer\"></fa-icon><br>Productos</a>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"col-12 col-sm-6 col-lg-4 mt-5\" *ngIf=\"auth.hasPermission([1])\">\r\n        <div class=\"card-section rounded p-3 bg-white\">\r\n          <div class=\"card-header-style-within header-color-administrador rounded pb-3\">\r\n            <h2 class=\"card-header-title text-white text-center pt-3\">Administrador</h2>\r\n          </div>\r\n          <div class=\"card-body text-center\">\r\n            <h5 class=\"card-title mb-4\">Módulo de administración</h5>\r\n              <div class=\"row gy-4 justify-content-center\">\r\n                <div class=\"col-6 col-sm-12 col-md-6\">\r\n                  <a class=\"btn btn-outline-dark shadow w-100\" routerLink='/administrador/empleados'>\r\n                    <fa-icon [icon]=\"faUsers\"></fa-icon><br>Personal</a>\r\n                </div>\r\n              </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { faWarehouse, faSignInAlt, faSignOutAlt, faUser, faHome, faStore, faUsersCog, faUsers, faHammer } from '@fortawesome/free-solid-svg-icons';\nimport { AuthService } from 'src/app/auth/auth.service';\n\n@Component({\n  selector: 'app-menu',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.css']\n})\nexport class MenuComponent implements OnInit {\n\n  faWarehouse = faWarehouse;\n  faSignInAlt = faSignInAlt;\n  faSignOutAlt = faSignOutAlt;\n  faUser = faUser;\n  faHome = faHome;\n  faStore = faStore;\n  faUsersCog = faUsersCog;\n  faUsers = faUsers;\n  faHammer = faHammer;\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit(): void {\n    // this.userSub = this.auth.user.subscribe(user => {\n    //   this.isAuthenticated = !!user;\n    //   // EQUIVALENTE A this.isAuthenticated = !user ? false : true;\n    // });\n  }\n\n}\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand ps-5\" href=\"#\">\r\n      <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid me-2\" style=\"max-width: 50px; width: 100%; margin: 0; padding: 0\">\r\n      <strong> GrupoCDV</strong>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n\r\n    <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <li class=\"nav-item ms-5\" *ngIf=\"isAuthenticated\">\r\n        <a class=\"nav-link\" routerLink=\"/menu\"> <fa-icon [icon]=\"faHome\"></fa-icon> Menú <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n    </ul>\r\n    <div class=\"d-flex\">\r\n      <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n\r\n            <li class=\"nav-item dropdown me-3\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"dropdownInventario\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"dropdownInventario\">\r\n                <li><a class=\"dropdown-item\" routerLink=\"/inventario\"><fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario</a></li>\r\n                <li><a class=\"dropdown-item\" routerLink=\"/inventario/ingresos\"><fa-icon [icon]=\"faSignInAlt\"></fa-icon>  Ingresos</a></li>\r\n                <li><a class=\"dropdown-item\" routerLink=\"/inventario/egresos\"><fa-icon [icon]=\"faSignOutAlt\"></fa-icon>  Egresos</a></li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li class=\"nav-item dropdown me-3\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <fa-icon [icon]=\"faStore\"></fa-icon> Procura\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a class=\"dropdown-item\" routerLink=\"/procura/proveedores\"><fa-icon [icon]=\"faStore\"></fa-icon> Proveedores</a></li>\r\n                <li><a class=\"dropdown-item\" routerLink=\"/procura/productos\"><fa-icon [icon]=\"faHammer\"></fa-icon> Productos</a></li>\r\n                <!-- <li><a class=\"dropdown-item\" href=\"#\">Pedidos</a></li> -->\r\n              </ul>\r\n            </li>\r\n\r\n            <li class=\"nav-item dropdown me-3\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <fa-icon [icon]=\"faUsersCog\"></fa-icon> Administrador\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a class=\"dropdown-item\" routerLink=\"/administrador/empleados\"><fa-icon [icon]=\"faUsers\"></fa-icon> Personal</a></li>\r\n              </ul>\r\n            </li>\r\n\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('administrador')\">\r\n              <a class=\"nav-link\" routerLink=\"/administrador\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Menú Administrador</a>\r\n            </li>\r\n            <li class=\"nav-item me-2\" *ngIf=\"isAuthenticated && router.url.includes('procura')\">\r\n              <a class=\"nav-link\" routerLink=\"/procura\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Menú Procura</a>\r\n            </li>\r\n            <li class=\"nav-item dropdown mx-5 pe-5\" *ngIf=\"isAuthenticated\">\r\n              <a class=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n                <fa-icon [icon]=\"faUser\"></fa-icon> Usuario\r\n              </a>\r\n              <ul class=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\r\n                <li><a role=\"button\" class=\"dropdown-item\" (click)='alPerfil()'>Perfil</a></li>\r\n                <li><hr class=\"dropdown-divider\"></li>\r\n                <li><a role=\"button\" class=\"dropdown-item\" (click)='onLogout()'>Cerrar Sesión</a></li>\r\n              </ul>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    </div>\r\n  </div>\r\n</nav>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faWarehouse, faUsersSlash, faHome, faSignInAlt, faSignOutAlt, faUser, faStore, faUsersCog, faUsers, faHammer } from '@fortawesome/free-solid-svg-icons';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit, OnDestroy {\r\n  isAuthenticated = false;\r\n  private userSub: Subscription;\r\n  cedulaUser:number = null;\r\n\r\n    faWarehouse = faWarehouse;\r\n    faSignInAlt = faSignInAlt;\r\n    faSignOutAlt = faSignOutAlt;\r\n    faUser = faUser;\r\n    faHome = faHome;\r\n    faStore = faStore;\r\n    faUsersCog = faUsersCog;\r\n    faUsers = faUsers;\r\n    faHammer = faHammer;\r\n\r\n  constructor(private auth: AuthService, public router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.userSub = this.auth.user.subscribe(user => {\r\n      this.isAuthenticated = !!user;\r\n      // EQUIVALENTE A this.isAuthenticated = !user ? false : true;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.userSub.unsubscribe();\r\n  }\r\n\r\n  alPerfil() {\r\n    this.router.navigate([`usuario/${this.auth.user.getValue().cedula}`]);\r\n  }\r\n\r\n  onLogout() {\r\n    this.auth.logout();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sin-auth',\n  templateUrl: './sin-auth.component.html',\n  styleUrls: ['./sin-auth.component.css']\n})\nexport class SinAuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"card\">\n    No tienes autorización\n  </div>\n</div>\n","<div class=\"container\">\n\n  <div class=\"row\">\n    <div class=\"col\">\n      <div *ngIf=\"usuario\" class=\"card shadow\">\n        <div class=\"card-header bg-info\">\n          <h5>Información personal</h5>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"row\">\n            <div class=\"col-5 col-lg-3\">\n              <img src=\"../../../assets/profileGeneric.png\" alt=\"profileGeneric\">\n            </div>\n\n            <div class=\"col\">\n              <h1>{{ usuario.nombre | titlecase }} {{ usuario.apellido | titlecase}}</h1>\n              <h2>{{ usuario.cargo | titlecase }}</h2> <br>\n              <h4>{{ cedula }}</h4>\n              <h4>{{ usuario.correo }}</h4>\n            </div>\n            <div class=\"col-3\">\n              <h5>Permisos</h5>\n              <ul>\n                <li>Inventario</li>\n                <li>Administración</li>\n              </ul>\n              <button type=\"button\" class=\"btn btn-warning\" data-bs-toggle=\"modal\" data-bs-target=\"#exampleModal\">Cambiar contraseña</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<!-- Modal -->\n<div class=\"modal fade\" id=\"exampleModal\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header bg-warning\">\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Cambiar contraseña</h5>\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n      </div>\n      <form #passForm=\"ngForm\" (ngSubmit)=\"changePass(passForm)\">\n        <div class=\"modal-body\">\n          <div class=\"mb-3\">\n            <label for=\"exampleFormControlInput1\" class=\"form-label\">Nueva contraseña:</label>\n            <input #pass=\"ngModel\" ngModel required type=\"password\" class=\"form-control\" id=\"contrasena\" name=\"password\">\n          </div>\n          <div class=\"mb-3\">\n            <label for=\"exampleFormControlInput1\" class=\"form-label\">Repita la contraseña:</label>\n            <input #pass2=\"ngModel\" ngModel required type=\"password\" class=\"form-control\" id=\"contrasena2\" name=\"password2\">\n          </div>\n          <p *ngIf=\"this.pass.dirty && this.pass2.dirty  && (this.pass.value != this.pass2.value)\" class=\"text-danger\">Las contraseñas no coinciden</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cerrar</button>\n          <button [disabled]='!this.passForm.valid || (this.pass.value != this.pass2.value)' type=\"submit\" class=\"btn btn-warning\">Guardar nueva contraseña</button>\n        </div>\n      </form>\n\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { UsuariosService } from 'src/app/services/usuarios.service';\r\n\r\n@Component({\r\n  selector: 'app-usuario',\r\n  templateUrl: './usuario.component.html',\r\n  styleUrls: ['./usuario.component.css']\r\n})\r\nexport class UsuarioComponent implements OnInit {\r\n\r\n  cedula = null;\r\n  usuario = null;\r\n\r\n  constructor(private route: ActivatedRoute,\r\n              private servicioUsuarios: UsuariosService,\r\n              private auth: AuthService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.cedula = this.route.snapshot.params['id'];\r\n    this.servicioUsuarios.getUsuario(this.cedula).subscribe(\r\n      res => {\r\n        this.usuario = res[0];\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  changePass(form: NgForm) {\r\n    this.auth.changePassword(this.cedula, form.value.password).subscribe(\r\n      resData => {\r\n        console.log(resData);\r\n        form.reset();\r\n      }, errorRes => {\r\n        console.log(errorRes);\r\n      });;\r\n  }\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  dirBackend: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
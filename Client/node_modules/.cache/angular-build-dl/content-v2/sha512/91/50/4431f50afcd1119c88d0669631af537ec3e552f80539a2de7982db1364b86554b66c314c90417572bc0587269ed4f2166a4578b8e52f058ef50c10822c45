{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/egresos/egresos.component.ts","webpack:///src/app/components/egresos/egresos.component.html","webpack:///src/app/components/ingresos/ingresos.component.ts","webpack:///src/app/components/ingresos/ingresos.component.html","webpack:///src/app/components/inventario/egreso/egreso.component.ts","webpack:///src/app/components/inventario/egreso/egreso.component.html","webpack:///src/app/components/inventario/ingreso/ingreso.component.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.html","webpack:///src/app/components/inventario/inventario.component.ts","webpack:///src/app/components/inventario/inventario.component.html","webpack:///src/app/components/inventario/modificar/modificar.component.ts","webpack:///src/app/components/inventario/modificar/modificar.component.html","webpack:///src/app/components/inventario/reingreso/reingreso.component.ts","webpack:///src/app/components/inventario/reingreso/reingreso.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/categorias.service.ts","webpack:///src/app/services/egresos.service.ts","webpack:///src/app/services/ingresos.service.ts","webpack:///src/app/services/inventario.service.ts","webpack:///src/app/services/ubicaciones.service.ts","webpack:///src/app/services/unidades.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","EgresosComponent","egresosService","inventarioService","categoriaService","obtenerEgresos","subscribe","items","egresos","sort","a","b","fecha","obtenerInventario","inventario","nombre","obtenerCategorias","categorias","idItem","findIndex","item","find","tipo","IngresosComponent","ingresosService","obtenerIngresos","ingresos","EgresoComponent","servicioInventario","servicioEgresos","idItemElegidoEgreso","cantidadEgreso","idsEgreso","cantidad","obra","responsable","itemElegidoEgreso","index","itemEgreso","estado","form","value","editarItem","egreso","Date","toISOString","reponsable","agregarEgreso","reset","indice","push","pop","borrarForm","agregarItem","restarItem","egresarItems","IngresoComponent","ubicacionesService","unidadesService","nuevosItems","ubicacion","vencimiento","serial","precio","unidades","obtenerUbicaciones","ubicaciones","obtenerUnidades","idAUsar","generarId","toString","revisarDisponibilidad","agregarIngreso","modalidad","n","Array","Math","random","objeto","cerrarModal","onSubmit","InventarioComponent","servicioCategorias","servicioUbicaciones","datosInfo","itemAveriado","idItemElegido","filtroTipo","faSearch","alElegirItem","reportarAveria","ModificarComponent","idItemElegidoModificar","itemElegido","onModificar","ReingresoComponent","cantidadIngreso","idsReingreso","nuevoItem","itemInv","reingresarItems","LoginComponent","NavbarComponent","faWarehouse","faSignInAlt","faSignOutAlt","faUser","CategoriasService","afs","categoriasColeccion","collection","snapshotChanges","pipe","actions","map","data","payload","doc","providedIn","EgresosService","egresosColeccion","nuevoEgreso","add","IngresosService","ingresosColeccion","nuevoIngreso","InventarioService","itemsColeccion","set","itemEditado","update","UbicacionesService","ubicacionesColeccion","UnidadesService","unidadesColeccion","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport {EgresosComponent}  from './components/egresos/egresos.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: InventarioComponent},\r\n  { path: 'inventario', component: InventarioComponent },\r\n  { path: 'ingresos', component: IngresosComponent },\r\n  {path: 'egresos', component: EgresosComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\r\n<!-- <app-login></app-login> -->\r\n<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\n\r\n// IMPORTACIONES PARA FIREBASE\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\r\nimport { EgresoComponent } from './components/inventario/egreso/egreso.component';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\n\r\n// IMPORT DE ICONOSDE FONTAWESOME\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { EgresosComponent } from './components/egresos/egresos.component';\r\nimport { ModificarComponent } from './components/inventario/modificar/modificar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    InventarioComponent,\r\n    IngresoComponent,\r\n    NavbarComponent,\r\n    ReingresoComponent,\r\n    EgresoComponent,\r\n    IngresosComponent,\r\n    EgresosComponent,\r\n    ModificarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAnalyticsModule,\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n    FormsModule,\r\n    FontAwesomeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Egreso } from 'src/app/models/egreso.model';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { InventarioService } from 'src/app/services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-egresos',\r\n  templateUrl: './egresos.component.html',\r\n  styleUrls: ['./egresos.component.css']\r\n})\r\nexport class EgresosComponent implements OnInit {\r\n\r\n  egresos: Egreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n\r\n\r\n  constructor(private egresosService: EgresosService, \r\n              private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService) { }\r\n\r\n  ngOnInit(): void {    \r\n    \r\n    this.egresosService.obtenerEgresos().subscribe(items => {\r\n    this.egresos = items.sort((a, b) => (a.fecha < b.fecha) ? 1 : ((a.fecha > b.fecha) ? -1 : 0));\r\n  })\r\n  this.inventarioService.obtenerInventario().subscribe(items => {\r\n    this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n  this.categoriaService.obtenerCategorias().subscribe(items => {\r\n    this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n  }\r\n\r\n  regresarIndice(idItem) {\r\n    return this.inventario.findIndex(item => item.id == idItem);\r\n}\r\n\r\n//FUNCIONES DE FILTRO DE TABLA DE EGRESOS\r\n\r\n    //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n    regresarNombre(id: string) {\r\n      return this.inventario.find(item => item.id == id).nombre;\r\n    }\r\n\r\n    //BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n    regresarCategoria(id: string) {\r\n      return this.inventario.find(item => item.id == id).tipo;\r\n    }\r\n\r\n    \r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <h1>Egresos</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <!--Tabla de inventario en donde se muestran los egresos generales-->\r\n        <table class=\"table shadow\">\r\n        <!--FILTROS DE LA TABLA DE EGRESOS-->\r\n        <thead class=\"thead bg-warning text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroObra=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por obra\"></th>\r\n            <th scope=\"col\"><input #filtroResponsable=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por responsable\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-warning\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Obra</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Egreso</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--NgFor que imprime egresos de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n            <ng-container *ngFor=\"let egreso of egresos\">\r\n              <!-- *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" -->\r\n            <tr *ngIf=\"(\r\n            (regresarNombre(egreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLocaleLowerCase()) || filtroNombre.value == '')\r\n            &&\r\n            (regresarCategoria(egreso.idItem).includes(filtroCategoria.value)|| filtroCategoria.value == null)\r\n            &&\r\n            (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value =='')\r\n            &&\r\n            (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value =='')\r\n            )\"\r\n            scope=\"row\" class=\"bg-light\">\r\n                <td>{{ inventario[regresarIndice(egreso.idItem)].nombre }} </td>\r\n                <td>{{ inventario[regresarIndice(egreso.idItem)].tipo }}</td>\r\n                <td >{{ egreso.cantidad }} {{ inventario[regresarIndice(egreso.idItem)].unidades }}</td>\r\n                <td>{{ egreso.obra }}</td>\r\n                <td>{{ egreso.reponsable }}</td>\r\n                <td>{{ egreso.fecha | date:'short' }}</td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\nimport { InventarioService } from 'src/app/services/inventario.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingresos',\r\n  templateUrl: './ingresos.component.html',\r\n  styleUrls: ['./ingresos.component.css']\r\n})\r\nexport class IngresosComponent implements OnInit {\r\n  ingresos: Ingreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n\r\n  constructor(private ingresosService: IngresosService,\r\n              private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ingresosService.obtenerIngresos().subscribe(items => {\r\n      this.ingresos = items.sort((a, b) => (a.fecha < b.fecha) ? 1 : ((a.fecha > b.fecha) ? -1 : 0));\r\n    })\r\n    this.inventarioService.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre> b.nombre) ? 1: -1)\r\n    })\r\n  }\r\n\r\n  regresarIndice(idItem) {\r\n    return this.inventario.findIndex(item => item.id == idItem);\r\n}\r\n\r\n  //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n  regresarNombre(id: string) {\r\n    return this.inventario.find(item => item.id == id).nombre;\r\n  }\r\n\r\n//BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n  regresarCategoria(id: string) {\r\n    return this.inventario.find(item => item.id == id).tipo;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <h1>Ingresos</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!--Tabla de inventario en donde se muestra el inventario general-->\r\n      <table class=\"table shadow\">\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n              </select>\r\n          </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroModalidad=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por modalidad\"></th>\r\n          </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Fecha Ingreso</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Modalidad</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n          <ng-container *ngFor=\"let ingreso of ingresos\">\r\n            <tr *ngIf=\"(\r\n              (regresarNombre(ingreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n              &&\r\n              (regresarCategoria(ingreso.idItem).includes(filtroCategoria.value) || filtroCategoria.value == null)\r\n              &&\r\n              (ingreso.modalidad.toLocaleLowerCase().includes(filtroModalidad.value.toLocaleLowerCase()) || filtroModalidad.value == '')\r\n              )\" scope=\"row\" class=\"bg-light\">\r\n              <td>{{ inventario[regresarIndice(ingreso.idItem)].nombre }}</td>\r\n              <td>{{ inventario[regresarIndice(ingreso.idItem)].tipo }}</td>\r\n              <td>{{ ingreso.cantidad }} {{ inventario[regresarIndice(ingreso.idItem)].unidades }}</td>\r\n              <td>\r\n                <div *ngIf=\"ingreso.precio != null; else sinPrecio\">\r\n                  {{ ingreso.precio | currency }}\r\n                </div>\r\n                <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                <ng-template #sinPrecio>\r\n                  N/A\r\n                </ng-template>\r\n              </td>\r\n\r\n              <td>{{ ingreso.fecha | date:'short'}}</td>\r\n              <td>{{ ingreso.IdUsuario }}</td>\r\n              <td>{{ ingreso.modalidad }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { Egreso } from 'src/app/models/egreso.model';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-egreso',\r\n  templateUrl: './egreso.component.html',\r\n  styleUrls: ['./egreso.component.css']\r\n})\r\n\r\n\r\nexport class EgresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  idItemElegidoEgreso: string = null;\r\n  cantidadEgreso: number = 0;\r\n  idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}];\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private servicioEgresos: EgresosService)\r\n              { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n}\r\n//Busca item a egresar por filtro, y guarda el id del mismo\r\nbuscarIndex(itemElegidoEgreso: string) {\r\n  this.inventario.findIndex(function(item, index) {\r\n    if(item.id == itemElegidoEgreso){\r\n      return true;\r\n    }\r\n  })\r\n}\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\negresarItems() {\r\n    let itemEgreso = this.inventario[this.inventario.findIndex(item => item.id == this.idItemElegidoEgreso)];\r\n\r\n    if(itemEgreso.tipo == \"Herramienta\") {\r\n      itemEgreso.estado = \"En Obra\";\r\n    }\r\n    else {\r\n      itemEgreso.cantidad = itemEgreso.cantidad - this.cantidadEgreso;\r\n    }\r\n    itemEgreso.responsable = this.form.value.responsable;\r\n    this.servicioInventario.editarItem(itemEgreso);\r\n\r\n    let egreso: Egreso = {\r\n      idItem: itemEgreso.id,\r\n        fecha: new Date().toISOString(),\r\n        obra: this.form.value.obra,\r\n        reponsable: itemEgreso.responsable,\r\n    }\r\n    if(itemEgreso.tipo != 'Herramienta'){\r\n\r\n    egreso.cantidad = this.cantidadEgreso;\r\n    // CUANDO ES HERRAMIENTA, SE COLOCA \"1 UNIDAD\" DE DEFAULT\r\n    } else {\r\n\r\n    egreso.cantidad = 1;\r\n    }\r\n\r\n    this.servicioEgresos.agregarEgreso(egreso);\r\n\r\n    this.form.reset();\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsEgreso[indice].id);\r\n}\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}]\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsEgreso.push({id: '', cantidad: null, obra: null, responsable: null});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsEgreso.pop();\r\n  }\r\n\r\n  borrarId(indice: number) {\r\n    this.idsEgreso[indice].id = '';\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n\r\n    <!--Modal de egreso de producto-->\r\n\r\n        <div class=\"modal-header bg-warning\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Egreso</h5>\r\n            <button (click)=\"borrarForm()\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div *ngFor=\"let item of idsEgreso; let i=index\" class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n                <div class=\"row\">\r\n                <div class=\"col-3\">\r\n                  <label>Categoría</label>\r\n                  <select (change)='borrarId(i);' class=\"form-control\" ngModel [name]=\"'selectTipo'+[i]\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n            <!--Filtro por Item de egreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select [(ngModel)]='idsEgreso[i].id' class=\"form-control\" [name]=\"'idItem'+[i]\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                  <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                  <option *ngIf=\"item.tipo == selectTipo.value && item.estado == 'Disponible'\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n            <div *ngIf=\"selectTipo.value == 'Consumible' || selectTipo.value == 'Producto'\" class=\"col-3\">\r\n              <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n              <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n              <p *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n            </div>\r\n            <div *ngIf=\"selectTipo.value == 'Consumible' || selectTipo.value == 'Producto'\" class=\"col-3\">\r\n              <!--Label e input de cantidad a egresar (se escribe la cantidad a egresar)-->\r\n              <label for=\"exampleInputEmail1\">Cantidad a egresar</label>\r\n              <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\" [max]=\"inventario[regresarIndice(i)].cantidad\" type=\"number\" [(ngModel)]=\"idsEgreso[i].cantidad\" [name]=\"'cantidadEgreso'+[i]\" class=\"form-control\">\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <label for=\"exampleInputEmail1\">Obra destino</label>\r\n                    <input [(ngModel)]='idsEgreso[i].obra' [name]=\"'obra'+[i]\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"col\">\r\n                    <label for=\"exampleInputEmail1\">Responsable</label>\r\n                    <input [(ngModel)]='idsEgreso[i].responsable' [name]=\"'responsable'+[i]\" class=\"form-control\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <!--Footer de Modal de egresar, con botones de cerrar y-->\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"agregarItem()\">Más Items</button>\r\n          <button [hidden]=\"idsEgreso.length == 1\" type=\"button\" class=\"btn btn-secondary\" (click)=\"restarItem()\">Menos Items</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\"  data-dismiss=\"modal\" (click)=\"borrarForm()\">Cerrar</button>\r\n            <button\r\n\r\n              type=\"button\"\r\n              class=\"btn btn-warning\"\r\n              data-dismiss=\"modal\"\r\n              (click)=\"egresarItems()\">Egresar</button>\r\n        </div>\r\n\r\n    </form>\r\n    </div>\r\n\r\n</div>\r\n\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport * as firebase from 'firebase';\r\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { ObjectUnsubscribedError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\n\r\n// ViewChild del form de ingreso, y funcion inventarioService\r\n\r\nexport class IngresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  inventario: Item[];\r\n  nombre = \"\";\r\n  // cantidadItems = 1;\r\n\r\n  nuevosItems: Item[] = [\r\n    {\r\n      nombre: null,\r\n      tipo: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n\r\n  constructor(private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService,\r\n              private ingresosService: IngresosService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inventarioService.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n//Se agrega nuevoItem al inventario existente, y se borran los campos//\r\n    for(var item of this.nuevosItems) {\r\n      var idAUsar = this.generarId().toString();\r\n\r\n      // REVISA SI EL ID ESTA DISPONIBLE Y DE NO ESTARLO LO CAMBIA\r\n      while(!this.revisarDisponibilidad(idAUsar)){\r\n        idAUsar = this.generarId().toString();\r\n      }\r\n\r\n      item.id = idAUsar;\r\n\r\n      if(item.tipo == \"Herramienta\") {\r\n        item.cantidad = 1;\r\n        item.unidades = \"Unidad\";\r\n      }\r\n\r\n      this.inventarioService.agregarItem(item);\r\n\r\n      this.ingresosService.agregarIngreso(\r\n        {\r\n          idItem: item.id,\r\n          fecha: new Date().toISOString(),\r\n          cantidad: item.cantidad,\r\n          precio: item.precio,\r\n          modalidad: \"Ingreso\"\r\n        }\r\n      )\r\n    }\r\n    this.form.reset();\r\n    this.nuevosItems =\r\n    // this.cantidadItems = 1;\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  //Al cerrar el modal, se reinician los campos\r\n  cerrarModal() {\r\n    this.form.reset();\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  repetirNVeces(n: number) {\r\n    return[...Array(+n).keys()];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n    // this.cantidadItems++;\r\n  }\r\n\r\n  restarItem() {\r\n    this.nuevosItems.pop()\r\n    // this.cantidadItems--;\r\n  }\r\n\r\n  generarId() {\r\n    return (Math.random() * 1000000000 + 1);\r\n  }\r\n\r\n  // RERTORNA TRUE SI EL ID ESTA DISPONIBLE, SI NO RETORNA FALSE\r\n  revisarDisponibilidad(id: string) {\r\n    for(var objeto of this.inventario) {\r\n      if(objeto.id == id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de ingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-success text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\r\n      <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" (click)='cerrarModal()' aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n          <!--Nombre de producto-->\r\n            <div class=\"form-group\">\r\n              <h3>Item {{i+1}}</h3>\r\n              <div class=\"form-check\">\r\n                <input #itemExistente=\"ngModel\" class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" ngModel name=\"checkboxExistente\" >\r\n                <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                  Item Existente\r\n                </label>\r\n              </div>\r\n              <div>PRUEBA</div>\r\n            <div >\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <label>Nombre</label>\r\n                <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" name=\"nombre\" class=\"form-control\">\r\n                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-control\" [(ngModel)]=\"nuevosItems[i].tipo\" name=\"cat[i]\">\r\n                  <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n                <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n              </div>\r\n              <div class=\"col-2\">\r\n                <label>Serial</label>\r\n                <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" name=\"serial\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input onkeypress=\"return event.charCode >= 48\" type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" name=\"precio\" class=\"form-control\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\" *ngIf=\"nuevosItems[i].tipo == 'Consumible' || nuevosItems[i].tipo == 'Producto'\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                <div class=\"input-group\">\r\n                  <input onkeypress=\"return event.charCode > 48\" min=\"1\" #cantidad=\"ngModel\" required type=\"number\" [(ngModel)]=\"nuevosItems[i].cantidad\" name=\"cantidad\" class=\"form-control\">\r\n                  <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" name=\"unidades\" class=\"form-control\">\r\n                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n                <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <label>Ubicación en almacén</label>\r\n                <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" name=\"ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                  <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                <div *ngIf=\"nuevosItems[i].tipo == 'Consumible' || nuevosItems[i].tipo == 'Producto'\" class=\"form-group\">\r\n                  <label>Vencimiento</label>\r\n                  <input class=\"form-control\" [(ngModel)]=\"nuevosItems[i].vencimiento\" name=\"vencimiento\" type=\"date\">\r\n              </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n    <!--Footer de Modal con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">Más Items</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" (click)=\"restarItem()\">Menos Items</button>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\" data-dismiss=\"modal\">Cerrar</button>\r\n        <!-- !f.valid significa cuando el form no sea valido -->\r\n        <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">Ingresar</button>\r\n    </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../models/item.model';\r\nimport { InventarioService } from '../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n\r\n  datosInfo: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  }\r\n\r\n  //VARIABLE PARA MODEL DE AVERIA\r\n  itemAveriado: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  //VARIABLE PARA HACER LAS BUSQUEDA POR ID DEL ITEM DE AVERIA\r\n  idItemElegido:string = null;\r\n\r\n  filtroTipo: string = \"\";\r\n  faSearch = faSearch;\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioUbicaciones: UbicacionesService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioCategorias.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioUbicaciones.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  //RECIBE EL ITEM DE LA FILA, E IMPRIME DICHOS DATOS EN UNA VARIABLE\r\n  asignarDetalles(item: Item) {\r\n    this.datosInfo = item;\r\n  }\r\n\r\n  //BUSCA ITEM PARA REPORTAR AVERIA\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegido);\r\n}\r\n  //CREA ITEM TEMPORAL EN DONDE COLOCARA NUEVOS ESTADOS\r\n  alElegirItem(idItem: string) {\r\n  this.itemAveriado = this.inventario.find(item => item.id == idItem);\r\n}\r\n\r\n  reportarAveria() {\r\n    this.itemAveriado.estado = \"Dañado\";\r\n    this.servicioInventario.editarItem(this.itemAveriado);\r\n    //SE BORRAN LOS CAMPOS DEL FORMULARIO\r\n    this.form.reset();\r\n  }\r\n\r\n  //BORRA FORMMULARIO DE AVERIA\r\n  borrarForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n<!--Botones de ingreso y reingreso de productos-->\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <h1>Inventario</h1>\r\n  </div>\r\n  <div class=\"col\">\r\n    <div class=\"btn-group float-left\">\r\n      <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">Ingreso</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">Reingreso</button>\r\n      <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#modalEgreso\">Egreso</button>\r\n    </div>\r\n    <div class=\"btn-group float-right\">\r\n      <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#modalModificar\">Modificar</button>\r\n      <button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#modalReporte\">Reportar</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n    <table class=\"table shadow\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\">\r\n            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n          </th>\r\n\r\n          <th scope=\"col\">\r\n            <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\">\r\n            <select #filtroUbicacion=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroUbicacion\">\r\n              <option value=\"\">Ubicación (Todas)</option>\r\n              <option *ngFor=\"let ubicacion of ubicaciones\" [value]=\"ubicacion.nombre\">{{ ubicacion.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!-- *ngIf=\"(item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase() || item.tipo == filtroCategoria.value)) || filtroNombre.value == ''\" -->\r\n\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventario\">\r\n          <tr\r\n            scope=\"row\"\r\n            *ngIf=\"(\r\n              (item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n              &&\r\n              (item.tipo == filtroCategoria.value || filtroCategoria.value == '')\r\n              &&\r\n              (item.ubicacion == filtroUbicacion.value || filtroUbicacion.value == '')\r\n            )\"\r\n            class=\"bg-light\">\r\n            <td>{{ item.nombre }}</td>\r\n            <td>{{ item.tipo }}</td>\r\n            <td><span [ngClass]=\"{'text-danger': item.estado=='En Obra'}\">{{ item.cantidad }} {{ item.unidades }}</span></td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible',\r\n                            'text-danger': item.estado=='Dañado',\r\n                            'text-info': item.estado=='En Obra'}\">{{ item.estado }}</td>\r\n            <td>\r\n              <button (click)=\"asignarDetalles(item)\" type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#modalInfo\">Detalles</button>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n<!-- MODAL DE INFO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n          <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.id }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.serial != null\">\r\n                <th>Serial</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.serial }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Categoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.tipo }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidad }} {{datosInfo.unidades }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.ubicacion != null\">\r\n                <th>Ubicación</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.ubicacion }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.responsable != null && datosInfo.fecha != null\">\r\n                <th>Primer ingreso por</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.responsable }} ({{ datosInfo.fecha }})</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.estado != null\">\r\n                <th>Estado</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.estado }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.vencimiento != null\">\r\n                <th>Vencimiento</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.vencimiento }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.precio != null\">\r\n                <th>Precio</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.precio |currency}}</td>\r\n              </tr>\r\n              <tr><th></th><td></td><td></td></tr>\r\n\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO -->\r\n  </div>\r\n\r\n<!--MODAL DE REPORTE DE PRODUCTO-->\r\n\r\n<div class=\"modal fade\" id=\"modalReporte\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n  <div class=\"modal-content\">\r\n\r\n      <div class=\"modal-header bg-danger text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reporte</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!--Filtro por Tipo de reingreso-->\r\n      <div class=\"modal-body\">\r\n      <form #f=\"ngForm\">\r\n          <h3>Item</h3>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                  <label>Categoría</label>\r\n                    <select class=\"form-control\" ngModel name=\"selectTipoReporte\" #selectTipoReporte=\"ngModel\">\r\n                      <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                    </select>\r\n              </div>\r\n\r\n              <div class=\"col\">\r\n                  <label>Item</label>\r\n                  <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class='form-control' ngModel name=\"id\">\r\n                    <!--NG FOR QUE COLOCA LA LISTA DE INVENTARIO-->\r\n                    <ng-container *ngFor=\"let item of inventario\">\r\n                      <!--NG IF QUE FILTRA LA LISTA FINAL POR EL TIPO-->\r\n                      <ng-container *ngIf=\"item.tipo == selectTipoReporte.value\">\r\n                        <option value='{{item.id}}'>{{ item.nombre }}</option>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n\r\n        <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"(click)=\"borrarForm()\">Cerrar</button>\r\n            <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"reportarAveria()\">Reportar</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- Modal Ingreso-->\r\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-ingreso></app-ingreso>\r\n</div>\r\n<!-- Modal Reingreso-->\r\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-reingreso></app-reingreso>\r\n</div>\r\n<!-- Modal Egreso-->\r\n<div class=\"modal fade\" id=\"modalEgreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-egreso></app-egreso>\r\n</div><!-- Modal Modificar-->\r\n<div class=\"modal fade\" id=\"modalModificar\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-modificar></app-modificar>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service'\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service'\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modificar',\r\n  templateUrl: './modificar.component.html',\r\n  styleUrls: ['./modificar.component.css']\r\n})\r\nexport class ModificarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  inventario: Item[];\r\n  idItemElegidoModificar: string = null;\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  alElegirItem(idItem: string) {\r\n    this.itemElegido = this.inventario.find(item => item.id == idItem);\r\n  }\r\n\r\n  //ENCUENTRA EL ID DEL ITEM A MODIFICAR\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegidoModificar);\r\n  }\r\n\r\n  onModificar() {\r\n    this.servicioInventario.editarItem(this.itemElegido);\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"modal-header bg-info text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modificar</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <h5>Seleccione el item a modificar:</h5>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <label>Categoría</label>\r\n                        <select class=\"form-control\" ngModel name=\"selectTipoModificar\" #selectTipoModificar=\"ngModel\">\r\n                          <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label>Item</label>\r\n                        <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class=\"form-control\" ngModel name=\"item\">\r\n                          <ng-container *ngFor=\"let item of inventario\">\r\n                            <option *ngIf=\"item.tipo == selectTipoModificar.value\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                          </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n                <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS-->\r\n                <div class=\"form-group\">\r\n                    <h5>Modifique los datos que desee:</h5>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-3\">\r\n                            <label>Nombre</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.nombre\" name=\"nombre\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <label>Categoría</label>\r\n                            <select required class=\"form-control\" [(ngModel)]=\"itemElegido.tipo\" name=\"categoria\">\r\n                                <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <label>Cantidad y Unidades</label>\r\n                            <div class=\"input-group\">\r\n                                <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" onkeypress=\"return event.charCode >= 48\" [(ngModel)]=\"itemElegido.cantidad\" required type=\"number\" name=\"cantidad\" class=\"form-control\">\r\n                                <select [disabled]=\"itemElegido.tipo == 'Herramienta'\" required type=\"text\" placeholder=\"0\"  name=\"unidades\" [(ngModel)]=\"itemElegido.unidades\" class=\"form-control\">\r\n                                <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-2\">\r\n                            <label>Ubicación</label>\r\n                            <select type=\"text\"  name=\"ubicacion\" [(ngModel)]=\"itemElegido.ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                                <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <label>Serial</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.serial\" name=\"serial\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Fecha de Vencimiento</label>\r\n                            <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" class=\"form-control\" [(ngModel)]=\"itemElegido.vencimiento\" name=\"vencimiento\" type=\"date\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Estado</label>\r\n                            <select type=\"text\" [(ngModel)]=\"itemElegido.estado\" name=\"estado\" class=\"form-control\">\r\n                                <option>Disponible</option>\r\n                                <option>En Obra</option>\r\n                                <option>Dañado</option>\r\n                                <option>Agotado</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Precio</label>\r\n                            <input onkeypress=\"return event.charCode >= 48\" type=\"number\" [(ngModel)]=\"itemElegido.precio\" name=\"precio\" class=\"form-control\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        <!--Footer de Modal con botones de cerrar y modificar-->\r\n        <div class=\"modal-footer\">\r\n            <button (click)=\"f.reset()\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n            <button (click)=\"onModificar()\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-info\">Modificar</button>\r\n        </div>\r\n\r\n    </form>\r\n</div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\n//Se declaran las variables a utilizar en reingreso\r\nexport class ReingresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  cantidadIngreso: number = 0;\r\n\r\n  idsReingreso = [\r\n    {id: \"\", cantidad: null}\r\n  ];\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ingresosService: IngresosService)\r\n              { }\r\n\r\n\r\n//Se obtiene inventario en orden alfabetico, y se imprime en la tabla//\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsReingreso[indice].id);\r\n}\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  reingresarItems() {\r\n    for(let item of this.idsReingreso) {\r\n      let nuevoItem = this.inventario.find(itemInv => itemInv.id == item.id);\r\n      // let nuevoItem = this.inventario[this.inventario.findIndex(itemInv => itemInv.id == item.id)];\r\n      if(nuevoItem.tipo == \"Herramienta\") {\r\n        nuevoItem.estado = \"Disponible\"\r\n      }\r\n      else {\r\n        nuevoItem.cantidad += item.cantidad;\r\n      }\r\n      this.servicioInventario.editarItem(nuevoItem);\r\n\r\n      this.ingresosService.agregarIngreso(\r\n        {\r\n          idItem: nuevoItem.id,\r\n          fecha: new Date().toISOString(),\r\n          cantidad: nuevoItem.cantidad,\r\n          modalidad: \"Reingreso\",\r\n          precio: null\r\n        }\r\n      )\r\n    }\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: null}];\r\n  }\r\n\r\n\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: null}];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsReingreso.push({id: \"\", cantidad: null});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsReingreso.pop();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de reingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-primary text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\r\n      <button (click)=\"borrarForm()\" type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!--Filtro por Tipo de reingreso-->\r\n\r\n    <form #f=\"ngForm\">\r\n      <div *ngFor=\"let item of idsReingreso; let i=index\" class=\"modal-body\">\r\n        <h3>Item {{i+1}}</h3>\r\n        <div class=\"form-group\">\r\n          <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <label>Categoría</label>\r\n                  <select class=\"form-control\" ngModel [name]=\"'selectTipo'+[i]\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n            </div>\r\n            <!--Filtro por Item de reingreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select class=\"form-control\" [(ngModel)]=\"idsReingreso[i].id\" [name]=\"'selectId'+[i]\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                    <ng-container *ngIf=\"item.tipo == selectTipo.value\">\r\n                      <option *ngIf=\"(item.tipo == 'Herramienta' && item.estado == 'En Obra') || (item.tipo != 'Herramienta')\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n                <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                <p *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n              </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n                <!--Label e input de cantidad a ingresar (se escribe la cantidad a ingresar)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                <input type=\"number\"  [(ngModel)]=\"idsReingreso[i].cantidad\" [name]=\"'cantidad'+[i]\" class=\"form-control\">\r\n              </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n      <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">Más Items</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"idsReingreso.length == 1\" (click)=\"restarItem()\">Menos Items</button>\r\n        </div>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">Cerrar</button>\r\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"reingresarItems()\" data-dismiss=\"modal\">Ingresar</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { faWarehouse, faUsersSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n    faWarehouse = faWarehouse;\r\n    faSignInAlt = faSignInAlt;\r\n    faSignOutAlt = faSignOutAlt;\r\n    faUser = faUser;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  <nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n      <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 50px; width: 100%; margin: 0; padding: 0\">\r\n      <strong> GrupoCDV</strong>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/inventario\"> <fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/ingresos\"> <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresos </a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/egresos\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresos</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"#\"> <fa-icon [icon]=\"faUser\"></fa-icon> Usuario</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Features</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n  </div> -->\r\n  </nav>\r\n\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Categoria } from '../models/categoria.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  categoriasColeccion: AngularFirestoreCollection<Categoria>\n  categorias: Observable<Categoria[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.categoriasColeccion = afs.collection<Categoria>('categoria');\n    this.categorias = this.categoriasColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Categoria;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerCategorias() {\n    return this.categorias;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Egreso } from '../models/egreso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EgresosService {\n  egresosColeccion: AngularFirestoreCollection<Egreso>;\n  egresos: Observable<Egreso[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.egresosColeccion = afs.collection<Egreso>('egresos');\n    this.egresos = this.egresosColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Egreso;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerEgresos() {\n    return this.egresos;\n  }\n\n  agregarEgreso(nuevoEgreso: Egreso) {\n    this.egresosColeccion.add(nuevoEgreso);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Ingreso } from '../models/ingreso.model';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n  ingresosColeccion: AngularFirestoreCollection<Ingreso>;\n  ingresos: Observable<Ingreso[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ingresosColeccion = afs.collection<Ingreso>('ingresos');\n    this.ingresos = this.ingresosColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Ingreso;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerIngresos() {\n    return this.ingresos;\n  }\n\n  agregarIngreso(nuevoIngreso: Ingreso) {\n    this.ingresosColeccion.add(nuevoIngreso);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { Item } from '../models/item.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventarioService {\r\n\r\n  itemsColeccion: AngularFirestoreCollection<Item>;\r\n  items: Observable<Item[]>\r\n\r\n  constructor(private readonly afs: AngularFirestore) {\r\n\r\n    this.itemsColeccion = afs.collection<Item>('inventario');\r\n    this.items = this.itemsColeccion.snapshotChanges().pipe(\r\n      map(actions => actions.map(a => {\r\n        const data = a.payload.doc.data() as Item;\r\n        const id = a.payload.doc.id;\r\n        return { id, ...data };\r\n      }))\r\n    )\r\n  }\r\n\r\n  obtenerInventario() {\r\n    return this.items;\r\n  }\r\n\r\n  agregarItem(nuevoItem: Item) {\r\n    this.itemsColeccion.doc(nuevoItem.id).set(nuevoItem);\r\n  }\r\n\r\n  editarItem(itemEditado: Item) {\r\n    return this.itemsColeccion.doc(itemEditado.id).update(itemEditado);\r\n  }\r\n\r\n\r\n  }\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UbicacionesService {\n\n  ubicacionesColeccion: AngularFirestoreCollection<any>\n  ubicaciones: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ubicacionesColeccion = afs.collection<any>('ubicaciones');\n    this.ubicaciones = this.ubicacionesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUbicaciones() {\n    return this.ubicaciones;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  unidadesColeccion: AngularFirestoreCollection<any>\n  unidades: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.unidadesColeccion = afs.collection<any>('unidades');\n    this.unidades = this.unidadesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUnidades() {\n    return this.unidades;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtYNyuJH5IxYQaG-JX866zpdZ7vT7FIiw\",\n    authDomain: \"grupo360-21212.firebaseapp.com\",\n    databaseURL: \"https://grupo360-21212.firebaseio.com\",\n    projectId: \"grupo360-21212\",\n    storageBucket: \"grupo360-21212.appspot.com\",\n    messagingSenderId: \"42315631196\",\n    appId: \"1:42315631196:web:afc7162df29b7595d43499\",\n    measurementId: \"G-BSEHC8XG3G\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
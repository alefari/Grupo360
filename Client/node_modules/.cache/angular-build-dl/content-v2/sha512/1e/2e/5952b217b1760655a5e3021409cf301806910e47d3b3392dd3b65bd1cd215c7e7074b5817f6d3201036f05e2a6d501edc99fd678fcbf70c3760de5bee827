{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/egresos/egresos.component.ts","./src/app/components/egresos/egresos.component.html","./src/app/components/ingresos/ingresos.component.ts","./src/app/components/ingresos/ingresos.component.html","./src/app/components/inventario/egreso/egreso.component.ts","./src/app/components/inventario/egreso/egreso.component.html","./src/app/components/inventario/ingreso/ingreso.component.ts","./src/app/components/inventario/ingreso/ingreso.component.html","./src/app/components/inventario/inventario.component.ts","./src/app/components/inventario/inventario.component.html","./src/app/components/inventario/modificar/modificar.component.ts","./src/app/components/inventario/modificar/modificar.component.html","./src/app/components/inventario/reingreso/reingreso.component.ts","./src/app/components/inventario/reingreso/reingreso.component.html","./src/app/components/login/login.component.ts","./src/app/components/login/login.component.html","./src/app/components/navbar/navbar.component.ts","./src/app/components/navbar/navbar.component.html","./src/app/services/categorias.service.ts","./src/app/services/egresos.service.ts","./src/app/services/ingresos.service.ts","./src/app/services/inventario.service.ts","./src/app/services/ubicaciones.service.ts","./src/app/services/unidades.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport {EgresosComponent}  from './components/egresos/egresos.component'\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: InventarioComponent},\r\n  { path: 'inventario', component: InventarioComponent },\r\n  { path: 'ingresos', component: IngresosComponent },\r\n  {path: 'egresos', component: EgresosComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\r\n<!-- <app-login></app-login> -->\r\n<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\n\r\n// IMPORTACIONES PARA FIREBASE\r\nimport { AngularFireModule } from '@angular/fire';\r\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\r\nimport { AngularFireAuthModule } from '@angular/fire/auth';\r\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\r\nimport { environment } from 'src/environments/environment';\r\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\r\nimport { EgresoComponent } from './components/inventario/egreso/egreso.component';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\n\r\n// IMPORT DE ICONOSDE FONTAWESOME\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { EgresosComponent } from './components/egresos/egresos.component';\r\nimport { ModificarComponent } from './components/inventario/modificar/modificar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    InventarioComponent,\r\n    IngresoComponent,\r\n    NavbarComponent,\r\n    ReingresoComponent,\r\n    EgresoComponent,\r\n    IngresosComponent,\r\n    EgresosComponent,\r\n    ModificarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    AngularFireModule.initializeApp(environment.firebase),\r\n    AngularFireAnalyticsModule,\r\n    AngularFirestoreModule,\r\n    AngularFireAuthModule,\r\n    FormsModule,\r\n    FontAwesomeModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Egreso } from 'src/app/models/egreso.model';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { InventarioService } from 'src/app/services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-egresos',\r\n  templateUrl: './egresos.component.html',\r\n  styleUrls: ['./egresos.component.css']\r\n})\r\nexport class EgresosComponent implements OnInit {\r\n\r\n  egresos: Egreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n\r\n\r\n  constructor(private egresosService: EgresosService, \r\n              private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService) { }\r\n\r\n  ngOnInit(): void {    \r\n    \r\n    this.egresosService.obtenerEgresos().subscribe(items => {\r\n    this.egresos = items.sort((a, b) => (a.fecha < b.fecha) ? 1 : ((a.fecha > b.fecha) ? -1 : 0));\r\n  })\r\n  this.inventarioService.obtenerInventario().subscribe(items => {\r\n    this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n  this.categoriaService.obtenerCategorias().subscribe(items => {\r\n    this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n  }\r\n\r\n  regresarIndice(idItem) {\r\n    return this.inventario.findIndex(item => item.id == idItem);\r\n}\r\n\r\n//FUNCIONES DE FILTRO DE TABLA DE EGRESOS\r\n\r\n    //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n    regresarNombre(id: string) {\r\n      return this.inventario.find(item => item.id == id).nombre;\r\n    }\r\n\r\n    //BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n    regresarCategoria(id: string) {\r\n      return this.inventario.find(item => item.id == id).tipo;\r\n    }\r\n\r\n    \r\n\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <h1>Egresos</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <!--Tabla de inventario en donde se muestran los egresos generales-->\r\n        <table class=\"table shadow\">\r\n        <!--FILTROS DE LA TABLA DE EGRESOS-->\r\n        <thead class=\"thead bg-warning text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroObra=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por obra\"></th>\r\n            <th scope=\"col\"><input #filtroResponsable=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por responsable\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-warning\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Obra</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Egreso</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--NgFor que imprime egresos de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n            <ng-container *ngFor=\"let egreso of egresos\">\r\n              <!-- *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" -->\r\n            <tr *ngIf=\"(\r\n            (regresarNombre(egreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLocaleLowerCase()) || filtroNombre.value == '')\r\n            &&\r\n            (regresarCategoria(egreso.idItem).includes(filtroCategoria.value)|| filtroCategoria.value == null)\r\n            &&\r\n            (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value =='')\r\n            &&\r\n            (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value =='')\r\n            )\"\r\n            scope=\"row\" class=\"bg-light\">\r\n                <td>{{ inventario[regresarIndice(egreso.idItem)].nombre }} </td>\r\n                <td>{{ inventario[regresarIndice(egreso.idItem)].tipo }}</td>\r\n                <td >{{ egreso.cantidad }} {{ inventario[regresarIndice(egreso.idItem)].unidades }}</td>\r\n                <td>{{ egreso.obra }}</td>\r\n                <td>{{ egreso.reponsable }}</td>\r\n                <td>{{ egreso.fecha | date:'short' }}</td>\r\n            </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\nimport { InventarioService } from 'src/app/services/inventario.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingresos',\r\n  templateUrl: './ingresos.component.html',\r\n  styleUrls: ['./ingresos.component.css']\r\n})\r\nexport class IngresosComponent implements OnInit {\r\n  ingresos: Ingreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n\r\n  constructor(private ingresosService: IngresosService,\r\n              private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.ingresosService.obtenerIngresos().subscribe(items => {\r\n      this.ingresos = items.sort((a, b) => (a.fecha < b.fecha) ? 1 : ((a.fecha > b.fecha) ? -1 : 0));\r\n    })\r\n    this.inventarioService.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre> b.nombre) ? 1: -1)\r\n    })\r\n  }\r\n\r\n  regresarIndice(idItem) {\r\n    return this.inventario.findIndex(item => item.id == idItem);\r\n}\r\n\r\n  //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n  regresarNombre(id: string) {\r\n    return this.inventario.find(item => item.id == id).nombre;\r\n  }\r\n\r\n//BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n  regresarCategoria(id: string) {\r\n    return this.inventario.find(item => item.id == id).tipo;\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <div class=\"row\">\r\n    <h1>Ingresos</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!--Tabla de inventario en donde se muestra el inventario general-->\r\n      <table class=\"table shadow\">\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n              </select>\r\n          </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroModalidad=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por modalidad\"></th>\r\n          </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Fecha Ingreso</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Modalidad</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n          <ng-container *ngFor=\"let ingreso of ingresos\">\r\n            <tr *ngIf=\"(\r\n              (regresarNombre(ingreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n              &&\r\n              (regresarCategoria(ingreso.idItem).includes(filtroCategoria.value) || filtroCategoria.value == null)\r\n              &&\r\n              (ingreso.modalidad.toLocaleLowerCase().includes(filtroModalidad.value.toLocaleLowerCase()) || filtroModalidad.value == '')\r\n              )\" scope=\"row\" class=\"bg-light\">\r\n              <td>{{ inventario[regresarIndice(ingreso.idItem)].nombre }}</td>\r\n              <td>{{ inventario[regresarIndice(ingreso.idItem)].tipo }}</td>\r\n              <td>{{ ingreso.cantidad }} {{ inventario[regresarIndice(ingreso.idItem)].unidades }}</td>\r\n              <td>\r\n                <div *ngIf=\"ingreso.precio != null; else sinPrecio\">\r\n                  {{ ingreso.precio | currency }}\r\n                </div>\r\n                <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                <ng-template #sinPrecio>\r\n                  N/A\r\n                </ng-template>\r\n              </td>\r\n\r\n              <td>{{ ingreso.fecha | date:'short'}}</td>\r\n              <td>{{ ingreso.IdUsuario }}</td>\r\n              <td>{{ ingreso.modalidad }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { EgresosService } from 'src/app/services/egresos.service';\r\nimport { Egreso } from 'src/app/models/egreso.model';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-egreso',\r\n  templateUrl: './egreso.component.html',\r\n  styleUrls: ['./egreso.component.css']\r\n})\r\n\r\n\r\nexport class EgresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  idItemElegidoEgreso: string = null;\r\n  cantidadEgreso: number = 0;\r\n  idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}];\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private servicioEgresos: EgresosService)\r\n              { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n  })\r\n}\r\n//Busca item a egresar por filtro, y guarda el id del mismo\r\nbuscarIndex(itemElegidoEgreso: string) {\r\n  this.inventario.findIndex(function(item, index) {\r\n    if(item.id == itemElegidoEgreso){\r\n      return true;\r\n    }\r\n  })\r\n}\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\negresarItems() {\r\n    let itemEgreso = this.inventario[this.inventario.findIndex(item => item.id == this.idItemElegidoEgreso)];\r\n\r\n    if(itemEgreso.tipo == \"Herramienta\") {\r\n      itemEgreso.estado = \"En Obra\";\r\n    }\r\n    else {\r\n      itemEgreso.cantidad = itemEgreso.cantidad - this.cantidadEgreso;\r\n    }\r\n    itemEgreso.responsable = this.form.value.responsable;\r\n    this.servicioInventario.editarItem(itemEgreso);\r\n\r\n    let egreso: Egreso = {\r\n      idItem: itemEgreso.id,\r\n        fecha: new Date().toISOString(),\r\n        obra: this.form.value.obra,\r\n        reponsable: itemEgreso.responsable,\r\n    }\r\n    if(itemEgreso.tipo != 'Herramienta'){\r\n\r\n    egreso.cantidad = this.cantidadEgreso;\r\n    // CUANDO ES HERRAMIENTA, SE COLOCA \"1 UNIDAD\" DE DEFAULT\r\n    } else {\r\n\r\n    egreso.cantidad = 1;\r\n    }\r\n\r\n    this.servicioEgresos.agregarEgreso(egreso);\r\n\r\n    this.form.reset();\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsEgreso[indice].id);\r\n}\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsEgreso = [{id: '', cantidad: null, obra: null, responsable: null}]\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsEgreso.push({id: '', cantidad: null, obra: null, responsable: null});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsEgreso.pop();\r\n  }\r\n\r\n  borrarId(indice: number) {\r\n    this.idsEgreso[indice].id = '';\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n\r\n    <!--Modal de egreso de producto-->\r\n\r\n        <div class=\"modal-header bg-warning\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Egreso</h5>\r\n            <button (click)=\"borrarForm()\" type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n        </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div *ngFor=\"let item of idsEgreso; let i=index\" class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n                <div class=\"row\">\r\n                <div class=\"col-3\">\r\n                  <label>Categoría</label>\r\n                  <select (change)='borrarId(i);' class=\"form-control\" ngModel [name]=\"'selectTipo'+[i]\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n            <!--Filtro por Item de egreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select [(ngModel)]='idsEgreso[i].id' class=\"form-control\" [name]=\"'idItem'+[i]\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                  <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                  <option *ngIf=\"item.tipo == selectTipo.value && item.estado == 'Disponible'\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n            <div *ngIf=\"selectTipo.value == 'Consumible' || selectTipo.value == 'Producto'\" class=\"col-3\">\r\n              <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n              <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n              <p *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n            </div>\r\n            <div *ngIf=\"selectTipo.value == 'Consumible' || selectTipo.value == 'Producto'\" class=\"col-3\">\r\n              <!--Label e input de cantidad a egresar (se escribe la cantidad a egresar)-->\r\n              <label for=\"exampleInputEmail1\">Cantidad a egresar</label>\r\n              <input *ngIf=\"idsEgreso[i].id != null && idsEgreso[i].id != undefined && idsEgreso[i].id != ''\" [max]=\"inventario[regresarIndice(i)].cantidad\" type=\"number\" [(ngModel)]=\"idsEgreso[i].cantidad\" [name]=\"'cantidadEgreso'+[i]\" class=\"form-control\">\r\n            </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"form-group\">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <label for=\"exampleInputEmail1\">Obra destino</label>\r\n                    <input [(ngModel)]='idsEgreso[i].obra' [name]=\"'obra'+[i]\" class=\"form-control\">\r\n                </div>\r\n                <div class=\"col\">\r\n                    <label for=\"exampleInputEmail1\">Responsable</label>\r\n                    <input [(ngModel)]='idsEgreso[i].responsable' [name]=\"'responsable'+[i]\" class=\"form-control\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        <!--Footer de Modal de egresar, con botones de cerrar y-->\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" (click)=\"agregarItem()\">Más Items</button>\r\n          <button [hidden]=\"idsEgreso.length == 1\" type=\"button\" class=\"btn btn-secondary\" (click)=\"restarItem()\">Menos Items</button>\r\n            <button type=\"button\" class=\"btn btn-secondary\"  data-dismiss=\"modal\" (click)=\"borrarForm()\">Cerrar</button>\r\n            <button\r\n\r\n              type=\"button\"\r\n              class=\"btn btn-warning\"\r\n              data-dismiss=\"modal\"\r\n              (click)=\"egresarItems()\">Egresar</button>\r\n        </div>\r\n\r\n    </form>\r\n    </div>\r\n\r\n</div>\r\n\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport * as firebase from 'firebase';\r\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { ObjectUnsubscribedError } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\n\r\n// ViewChild del form de ingreso, y funcion inventarioService\r\n\r\nexport class IngresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  inventario: Item[];\r\n  nombre = \"\";\r\n  // cantidadItems = 1;\r\n\r\n  nuevosItems: Item[] = [\r\n    {\r\n      nombre: null,\r\n      tipo: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n\r\n  constructor(private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService,\r\n              private ingresosService: IngresosService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.inventarioService.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n\r\n  }\r\n\r\n  onSubmit() {\r\n//Se agrega nuevoItem al inventario existente, y se borran los campos//\r\n    for(var item of this.nuevosItems) {\r\n      var idAUsar = this.generarId().toString();\r\n\r\n      // REVISA SI EL ID ESTA DISPONIBLE Y DE NO ESTARLO LO CAMBIA\r\n      while(!this.revisarDisponibilidad(idAUsar)){\r\n        idAUsar = this.generarId().toString();\r\n      }\r\n\r\n      item.id = idAUsar;\r\n\r\n      if(item.tipo == \"Herramienta\") {\r\n        item.cantidad = 1;\r\n        item.unidades = \"Unidad\";\r\n      }\r\n\r\n      this.inventarioService.agregarItem(item);\r\n\r\n      this.ingresosService.agregarIngreso(\r\n        {\r\n          idItem: item.id,\r\n          fecha: new Date().toISOString(),\r\n          cantidad: item.cantidad,\r\n          precio: item.precio,\r\n          modalidad: \"Ingreso\"\r\n        }\r\n      )\r\n    }\r\n    this.form.reset();\r\n    this.nuevosItems =\r\n    // this.cantidadItems = 1;\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  //Al cerrar el modal, se reinician los campos\r\n  cerrarModal() {\r\n    this.form.reset();\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  repetirNVeces(n: number) {\r\n    return[...Array(+n).keys()];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n    // this.cantidadItems++;\r\n  }\r\n\r\n  restarItem() {\r\n    this.nuevosItems.pop()\r\n    // this.cantidadItems--;\r\n  }\r\n\r\n  generarId() {\r\n    return (Math.random() * 1000000000 + 1);\r\n  }\r\n\r\n  // RERTORNA TRUE SI EL ID ESTA DISPONIBLE, SI NO RETORNA FALSE\r\n  revisarDisponibilidad(id: string) {\r\n    for(var objeto of this.inventario) {\r\n      if(objeto.id == id) {\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de ingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-success text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\r\n      <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" (click)='cerrarModal()' aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n          <!--Nombre de producto-->\r\n            <div class=\"form-group\">\r\n              <h3>Item {{i+1}}</h3>\r\n              <div class=\"form-check\">\r\n                <input #itemExistente=\"ngModel\" class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"defaultCheck1\" ngModel name=\"checkboxExistente\" >\r\n                <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n                  Item Existente\r\n                </label>\r\n              </div>\r\n              <div>PRUEBA</div>\r\n            <div >\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <label>Nombre</label>\r\n                <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" name=\"nombre\" class=\"form-control\">\r\n                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-control\" [(ngModel)]=\"nuevosItems[i].tipo\" name=\"cat[i]\">\r\n                  <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n                <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n              </div>\r\n              <div class=\"col-2\">\r\n                <label>Serial</label>\r\n                <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" name=\"serial\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input onkeypress=\"return event.charCode >= 48\" type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" name=\"precio\" class=\"form-control\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\" *ngIf=\"nuevosItems[i].tipo == 'Consumible' || nuevosItems[i].tipo == 'Producto'\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                <div class=\"input-group\">\r\n                  <input onkeypress=\"return event.charCode > 48\" min=\"1\" #cantidad=\"ngModel\" required type=\"number\" [(ngModel)]=\"nuevosItems[i].cantidad\" name=\"cantidad\" class=\"form-control\">\r\n                  <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" name=\"unidades\" class=\"form-control\">\r\n                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n                <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <label>Ubicación en almacén</label>\r\n                <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" name=\"ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                  <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                <div *ngIf=\"nuevosItems[i].tipo == 'Consumible' || nuevosItems[i].tipo == 'Producto'\" class=\"form-group\">\r\n                  <label>Vencimiento</label>\r\n                  <input class=\"form-control\" [(ngModel)]=\"nuevosItems[i].vencimiento\" name=\"vencimiento\" type=\"date\">\r\n              </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n\r\n      </div>\r\n\r\n    <!--Footer de Modal con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">Más Items</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" (click)=\"restarItem()\">Menos Items</button>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\" data-dismiss=\"modal\">Cerrar</button>\r\n        <!-- !f.valid significa cuando el form no sea valido -->\r\n        <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">Ingresar</button>\r\n    </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../models/item.model';\r\nimport { InventarioService } from '../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n\r\n  datosInfo: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  }\r\n\r\n  //VARIABLE PARA MODEL DE AVERIA\r\n  itemAveriado: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  //VARIABLE PARA HACER LAS BUSQUEDA POR ID DEL ITEM DE AVERIA\r\n  idItemElegido:string = null;\r\n\r\n  filtroTipo: string = \"\";\r\n  faSearch = faSearch;\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioUbicaciones: UbicacionesService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioCategorias.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioUbicaciones.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  //RECIBE EL ITEM DE LA FILA, E IMPRIME DICHOS DATOS EN UNA VARIABLE\r\n  asignarDetalles(item: Item) {\r\n    this.datosInfo = item;\r\n  }\r\n\r\n  //BUSCA ITEM PARA REPORTAR AVERIA\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegido);\r\n}\r\n  //CREA ITEM TEMPORAL EN DONDE COLOCARA NUEVOS ESTADOS\r\n  alElegirItem(idItem: string) {\r\n  this.itemAveriado = this.inventario.find(item => item.id == idItem);\r\n}\r\n\r\n  reportarAveria() {\r\n    this.itemAveriado.estado = \"Dañado\";\r\n    this.servicioInventario.editarItem(this.itemAveriado);\r\n    //SE BORRAN LOS CAMPOS DEL FORMULARIO\r\n    this.form.reset();\r\n  }\r\n\r\n  //BORRA FORMMULARIO DE AVERIA\r\n  borrarForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n<!--Botones de ingreso y reingreso de productos-->\r\n<div class=\"row\">\r\n  <div class=\"col\">\r\n    <h1>Inventario</h1>\r\n  </div>\r\n  <div class=\"col\">\r\n    <div class=\"btn-group float-left\">\r\n      <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">Ingreso</button>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">Reingreso</button>\r\n      <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#modalEgreso\">Egreso</button>\r\n    </div>\r\n    <div class=\"btn-group float-right\">\r\n      <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#modalModificar\">Modificar</button>\r\n      <button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#modalReporte\">Reportar</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n    <table class=\"table shadow\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\">\r\n            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n          </th>\r\n\r\n          <th scope=\"col\">\r\n            <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\">\r\n            <select #filtroUbicacion=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroUbicacion\">\r\n              <option value=\"\">Ubicación (Todas)</option>\r\n              <option *ngFor=\"let ubicacion of ubicaciones\" [value]=\"ubicacion.nombre\">{{ ubicacion.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!-- *ngIf=\"(item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase() || item.tipo == filtroCategoria.value)) || filtroNombre.value == ''\" -->\r\n\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventario\">\r\n          <tr\r\n            scope=\"row\"\r\n            *ngIf=\"(\r\n              (item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n              &&\r\n              (item.tipo == filtroCategoria.value || filtroCategoria.value == '')\r\n              &&\r\n              (item.ubicacion == filtroUbicacion.value || filtroUbicacion.value == '')\r\n            )\"\r\n            class=\"bg-light\">\r\n            <td>{{ item.nombre }}</td>\r\n            <td>{{ item.tipo }}</td>\r\n            <td><span [ngClass]=\"{'text-danger': item.estado=='En Obra'}\">{{ item.cantidad }} {{ item.unidades }}</span></td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible',\r\n                            'text-danger': item.estado=='Dañado',\r\n                            'text-info': item.estado=='En Obra'}\">{{ item.estado }}</td>\r\n            <td>\r\n              <button (click)=\"asignarDetalles(item)\" type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#modalInfo\">Detalles</button>\r\n            </td>\r\n          </tr>\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n<!-- MODAL DE INFO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n          <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.id }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.serial != null\">\r\n                <th>Serial</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.serial }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Categoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.tipo }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidad }} {{datosInfo.unidades }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.ubicacion != null\">\r\n                <th>Ubicación</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.ubicacion }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.responsable != null && datosInfo.fecha != null\">\r\n                <th>Primer ingreso por</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.responsable }} ({{ datosInfo.fecha }})</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.estado != null\">\r\n                <th>Estado</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.estado }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.vencimiento != null\">\r\n                <th>Vencimiento</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.vencimiento }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.precio != null\">\r\n                <th>Precio</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.precio |currency}}</td>\r\n              </tr>\r\n              <tr><th></th><td></td><td></td></tr>\r\n\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO -->\r\n  </div>\r\n\r\n<!--MODAL DE REPORTE DE PRODUCTO-->\r\n\r\n<div class=\"modal fade\" id=\"modalReporte\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n  <div class=\"modal-content\">\r\n\r\n      <div class=\"modal-header bg-danger text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reporte</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <!--Filtro por Tipo de reingreso-->\r\n      <div class=\"modal-body\">\r\n      <form #f=\"ngForm\">\r\n          <h3>Item</h3>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                  <label>Categoría</label>\r\n                    <select class=\"form-control\" ngModel name=\"selectTipoReporte\" #selectTipoReporte=\"ngModel\">\r\n                      <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                    </select>\r\n              </div>\r\n\r\n              <div class=\"col\">\r\n                  <label>Item</label>\r\n                  <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class='form-control' ngModel name=\"id\">\r\n                    <!--NG FOR QUE COLOCA LA LISTA DE INVENTARIO-->\r\n                    <ng-container *ngFor=\"let item of inventario\">\r\n                      <!--NG IF QUE FILTRA LA LISTA FINAL POR EL TIPO-->\r\n                      <ng-container *ngIf=\"item.tipo == selectTipoReporte.value\">\r\n                        <option value='{{item.id}}'>{{ item.nombre }}</option>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n\r\n        <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\"(click)=\"borrarForm()\">Cerrar</button>\r\n            <button type=\"button\" class=\"btn btn-success\" data-dismiss=\"modal\" (click)=\"reportarAveria()\">Reportar</button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n<!-- Modal Ingreso-->\r\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-ingreso></app-ingreso>\r\n</div>\r\n<!-- Modal Reingreso-->\r\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-reingreso></app-reingreso>\r\n</div>\r\n<!-- Modal Egreso-->\r\n<div class=\"modal fade\" id=\"modalEgreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-egreso></app-egreso>\r\n</div><!-- Modal Modificar-->\r\n<div class=\"modal fade\" id=\"modalModificar\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-modificar></app-modificar>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service'\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service'\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-modificar',\r\n  templateUrl: './modificar.component.html',\r\n  styleUrls: ['./modificar.component.css']\r\n})\r\nexport class ModificarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  inventario: Item[];\r\n  idItemElegidoModificar: string = null;\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService) { }\r\n\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  alElegirItem(idItem: string) {\r\n    this.itemElegido = this.inventario.find(item => item.id == idItem);\r\n  }\r\n\r\n  //ENCUENTRA EL ID DEL ITEM A MODIFICAR\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegidoModificar);\r\n  }\r\n\r\n  onModificar() {\r\n    this.servicioInventario.editarItem(this.itemElegido);\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"modal-header bg-info text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modificar</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <h5>Seleccione el item a modificar:</h5>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <label>Categoría</label>\r\n                        <select class=\"form-control\" ngModel name=\"selectTipoModificar\" #selectTipoModificar=\"ngModel\">\r\n                          <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label>Item</label>\r\n                        <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class=\"form-control\" ngModel name=\"item\">\r\n                          <ng-container *ngFor=\"let item of inventario\">\r\n                            <option *ngIf=\"item.tipo == selectTipoModificar.value\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                          </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n                <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS-->\r\n                <div class=\"form-group\">\r\n                    <h5>Modifique los datos que desee:</h5>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-3\">\r\n                            <label>Nombre</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.nombre\" name=\"nombre\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <label>Categoría</label>\r\n                            <select required class=\"form-control\" [(ngModel)]=\"itemElegido.tipo\" name=\"categoria\">\r\n                                <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <label>Cantidad y Unidades</label>\r\n                            <div class=\"input-group\">\r\n                                <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" onkeypress=\"return event.charCode >= 48\" [(ngModel)]=\"itemElegido.cantidad\" required type=\"number\" name=\"cantidad\" class=\"form-control\">\r\n                                <select [disabled]=\"itemElegido.tipo == 'Herramienta'\" required type=\"text\" placeholder=\"0\"  name=\"unidades\" [(ngModel)]=\"itemElegido.unidades\" class=\"form-control\">\r\n                                <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-2\">\r\n                            <label>Ubicación</label>\r\n                            <select type=\"text\"  name=\"ubicacion\" [(ngModel)]=\"itemElegido.ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                                <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <label>Serial</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.serial\" name=\"serial\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Fecha de Vencimiento</label>\r\n                            <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" class=\"form-control\" [(ngModel)]=\"itemElegido.vencimiento\" name=\"vencimiento\" type=\"date\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Estado</label>\r\n                            <select type=\"text\" [(ngModel)]=\"itemElegido.estado\" name=\"estado\" class=\"form-control\">\r\n                                <option>Disponible</option>\r\n                                <option>En Obra</option>\r\n                                <option>Dañado</option>\r\n                                <option>Agotado</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Precio</label>\r\n                            <input onkeypress=\"return event.charCode >= 48\" type=\"number\" [(ngModel)]=\"itemElegido.precio\" name=\"precio\" class=\"form-control\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        <!--Footer de Modal con botones de cerrar y modificar-->\r\n        <div class=\"modal-footer\">\r\n            <button (click)=\"f.reset()\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n            <button (click)=\"onModificar()\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-info\">Modificar</button>\r\n        </div>\r\n\r\n    </form>\r\n</div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { IngresosService } from 'src/app/services/ingresos.service';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\n//Se declaran las variables a utilizar en reingreso\r\nexport class ReingresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  cantidadIngreso: number = 0;\r\n\r\n  idsReingreso = [\r\n    {id: \"\", cantidad: null}\r\n  ];\r\n\r\n  constructor(private servicioInventario: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ingresosService: IngresosService)\r\n              { }\r\n\r\n\r\n//Se obtiene inventario en orden alfabetico, y se imprime en la tabla//\r\n  ngOnInit(): void {\r\n\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsReingreso[indice].id);\r\n}\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  reingresarItems() {\r\n    for(let item of this.idsReingreso) {\r\n      let nuevoItem = this.inventario.find(itemInv => itemInv.id == item.id);\r\n      // let nuevoItem = this.inventario[this.inventario.findIndex(itemInv => itemInv.id == item.id)];\r\n      if(nuevoItem.tipo == \"Herramienta\") {\r\n        nuevoItem.estado = \"Disponible\"\r\n      }\r\n      else {\r\n        nuevoItem.cantidad += item.cantidad;\r\n      }\r\n      this.servicioInventario.editarItem(nuevoItem);\r\n\r\n      this.ingresosService.agregarIngreso(\r\n        {\r\n          idItem: nuevoItem.id,\r\n          fecha: new Date().toISOString(),\r\n          cantidad: nuevoItem.cantidad,\r\n          modalidad: \"Reingreso\",\r\n          precio: null\r\n        }\r\n      )\r\n    }\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: null}];\r\n  }\r\n\r\n\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: null}];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsReingreso.push({id: \"\", cantidad: null});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsReingreso.pop();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de reingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-primary text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\r\n      <button (click)=\"borrarForm()\" type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!--Filtro por Tipo de reingreso-->\r\n\r\n    <form #f=\"ngForm\">\r\n      <div *ngFor=\"let item of idsReingreso; let i=index\" class=\"modal-body\">\r\n        <h3>Item {{i+1}}</h3>\r\n        <div class=\"form-group\">\r\n          <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <label>Categoría</label>\r\n                  <select class=\"form-control\" ngModel [name]=\"'selectTipo'+[i]\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n            </div>\r\n            <!--Filtro por Item de reingreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select class=\"form-control\" [(ngModel)]=\"idsReingreso[i].id\" [name]=\"'selectId'+[i]\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                    <ng-container *ngIf=\"item.tipo == selectTipo.value\">\r\n                      <option *ngIf=\"(item.tipo == 'Herramienta' && item.estado == 'En Obra') || (item.tipo != 'Herramienta')\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n                <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                <p *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n              </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n                <!--Label e input de cantidad a ingresar (se escribe la cantidad a ingresar)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                <input type=\"number\"  [(ngModel)]=\"idsReingreso[i].cantidad\" [name]=\"'cantidad'+[i]\" class=\"form-control\">\r\n              </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n      <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">Más Items</button>\r\n          <button type=\"button\" class=\"btn btn-secondary\" [disabled]=\"idsReingreso.length == 1\" (click)=\"restarItem()\">Menos Items</button>\r\n        </div>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">Cerrar</button>\r\n          <button type=\"button\" class=\"btn btn-success\" (click)=\"reingresarItems()\" data-dismiss=\"modal\">Ingresar</button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { faWarehouse, faUsersSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n    faWarehouse = faWarehouse;\r\n    faSignInAlt = faSignInAlt;\r\n    faSignOutAlt = faSignOutAlt;\r\n    faUser = faUser;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  <nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n      <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 50px; width: 100%; margin: 0; padding: 0\">\r\n      <strong> GrupoCDV</strong>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/inventario\"> <fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/ingresos\"> <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresos </a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" routerLink=\"/egresos\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresos</a>\r\n        </li>\r\n        <li class=\"nav-item active\">\r\n          <a class=\"nav-link\" href=\"#\"> <fa-icon [icon]=\"faUser\"></fa-icon> Usuario</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n    <ul class=\"navbar-nav\">\r\n      <li class=\"nav-item active\">\r\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Features</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\r\n      </li>\r\n      <li class=\"nav-item\">\r\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\r\n      </li>\r\n    </ul>\r\n  </div> -->\r\n  </nav>\r\n\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Categoria } from '../models/categoria.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  categoriasColeccion: AngularFirestoreCollection<Categoria>\n  categorias: Observable<Categoria[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.categoriasColeccion = afs.collection<Categoria>('categoria');\n    this.categorias = this.categoriasColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Categoria;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerCategorias() {\n    return this.categorias;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { Egreso } from '../models/egreso.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EgresosService {\n  egresosColeccion: AngularFirestoreCollection<Egreso>;\n  egresos: Observable<Egreso[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.egresosColeccion = afs.collection<Egreso>('egresos');\n    this.egresos = this.egresosColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Egreso;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerEgresos() {\n    return this.egresos;\n  }\n\n  agregarEgreso(nuevoEgreso: Egreso) {\n    this.egresosColeccion.add(nuevoEgreso);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Ingreso } from '../models/ingreso.model';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class IngresosService {\n  ingresosColeccion: AngularFirestoreCollection<Ingreso>;\n  ingresos: Observable<Ingreso[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ingresosColeccion = afs.collection<Ingreso>('ingresos');\n    this.ingresos = this.ingresosColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Ingreso;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerIngresos() {\n    return this.ingresos;\n  }\n\n  agregarIngreso(nuevoIngreso: Ingreso) {\n    this.ingresosColeccion.add(nuevoIngreso);\n  }\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\r\nimport { Item } from '../models/item.model';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class InventarioService {\r\n\r\n  itemsColeccion: AngularFirestoreCollection<Item>;\r\n  items: Observable<Item[]>\r\n\r\n  constructor(private readonly afs: AngularFirestore) {\r\n\r\n    this.itemsColeccion = afs.collection<Item>('inventario');\r\n    this.items = this.itemsColeccion.snapshotChanges().pipe(\r\n      map(actions => actions.map(a => {\r\n        const data = a.payload.doc.data() as Item;\r\n        const id = a.payload.doc.id;\r\n        return { id, ...data };\r\n      }))\r\n    )\r\n  }\r\n\r\n  obtenerInventario() {\r\n    return this.items;\r\n  }\r\n\r\n  agregarItem(nuevoItem: Item) {\r\n    this.itemsColeccion.doc(nuevoItem.id).set(nuevoItem);\r\n  }\r\n\r\n  editarItem(itemEditado: Item) {\r\n    return this.itemsColeccion.doc(itemEditado.id).update(itemEditado);\r\n  }\r\n\r\n\r\n  }\r\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UbicacionesService {\n\n  ubicacionesColeccion: AngularFirestoreCollection<any>\n  ubicaciones: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ubicacionesColeccion = afs.collection<any>('ubicaciones');\n    this.ubicaciones = this.ubicacionesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUbicaciones() {\n    return this.ubicaciones;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  unidadesColeccion: AngularFirestoreCollection<any>\n  unidades: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.unidadesColeccion = afs.collection<any>('unidades');\n    this.unidades = this.unidadesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUnidades() {\n    return this.unidades;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtYNyuJH5IxYQaG-JX866zpdZ7vT7FIiw\",\n    authDomain: \"grupo360-21212.firebaseapp.com\",\n    databaseURL: \"https://grupo360-21212.firebaseio.com\",\n    projectId: \"grupo360-21212\",\n    storageBucket: \"grupo360-21212.appspot.com\",\n    messagingSenderId: \"42315631196\",\n    appId: \"1:42315631196:web:afc7162df29b7595d43499\",\n    measurementId: \"G-BSEHC8XG3G\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}
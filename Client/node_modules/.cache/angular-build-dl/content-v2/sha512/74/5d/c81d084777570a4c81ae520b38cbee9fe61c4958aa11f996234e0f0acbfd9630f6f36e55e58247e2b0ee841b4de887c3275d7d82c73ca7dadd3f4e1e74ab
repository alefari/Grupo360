{"version":3,"sources":["webpack:///src/app/modulo_procura/components/actualizar-productos/actualizar-productos.component.ts","webpack:///src/app/modulo_procura/components/actualizar-productos/actualizar-productos.component.html","webpack:///src/app/modulo_procura/components/agregar-producto/agregar-producto.component.ts","webpack:///src/app/modulo_procura/components/agregar-producto/agregar-producto.component.html","webpack:///src/app/modulo_procura/components/agregar-proveedor/agregar-proveedor.component.ts","webpack:///src/app/modulo_procura/components/agregar-proveedor/agregar-proveedor.component.html","webpack:///src/app/modulo_procura/components/gestion-productos/gestion-productos.component.ts","webpack:///src/app/modulo_procura/components/gestion-productos/gestion-productos.component.html","webpack:///src/app/modulo_procura/components/menu-procura/menu-procura.component.ts","webpack:///src/app/modulo_procura/components/menu-procura/menu-procura.component.html","webpack:///src/app/modulo_procura/components/modificar-producto/modificar-producto.component.ts","webpack:///src/app/modulo_procura/components/modificar-producto/modificar-producto.component.html","webpack:///src/app/modulo_procura/components/modificar-proveedor/modificar-proveedor.component.ts","webpack:///src/app/modulo_procura/components/modificar-proveedor/modificar-proveedor.component.html","webpack:///src/app/modulo_procura/components/procura-base/procura-base.component.ts","webpack:///src/app/modulo_procura/components/procura-base/procura-base.component.html","webpack:///src/app/modulo_procura/components/productos/productos.component.ts","webpack:///src/app/modulo_procura/components/productos/productos.component.html","webpack:///src/app/modulo_procura/components/proveedores/proveedores.component.ts","webpack:///src/app/modulo_procura/components/proveedores/proveedores.component.html","webpack:///src/app/modulo_procura/procura-routing.module.ts","webpack:///src/app/modulo_procura/procura.module.ts","webpack:///src/app/services/productos-proveedores.service.ts","webpack:///src/app/services/productos.service.ts","webpack:///src/app/services/proveedores.service.ts"],"names":["ActualizarProductosComponent","servicioProductosProveedores","servicioAreas","servicioProveedores","router","route","faTimesCircle","faPlusCircle","faMinusCircle","productosProveedor","areas","idProducto","datosInfoProducto","id","nombre","area","unidad","garantia","dias_garantia","proveedor","fecha_act","precio","datosActualizarProducto","datosProveedor","id_area","direccion","correo","credito","dias_credito","ciudad","telefono","celular","contacto","rif","descripcion","precioNuevo","productoProveedorBorrar","snapshot","params","getProductosProveedoresElegido","subscribe","res","err","console","log","getAreas","getProveedorElegido","producto","updatePrecioProducto","form","reset","deleteProductoProveedor","eliminarProductoProducto","actualizarProductoPrecio","selector","templateUrl","styleUrls","AgregarProductoComponent","servicioUnidades","proveedores","unidades","nuevoProducto","valido","getProveedores","getUnidades","productoCiclo","createProductoProveedor","navigate","push","agregarProducto","borrarForm","onSubmit","AgregarProveedorComponent","auth","nuevoProveedor","responsable","proveedorNuevo","user","getValue","cedula","createProveedor","GestionProductosComponent","servicioProductos","faTrashAlt","faFileDownload","faSyncAlt","faPencilAlt","productos","productoModificar","productoBorrar","getProductos","createProducto","Object","assign","find","updateProducto","deleteProducto","eliminarProducto","onModificar","MenuProcuraComponent","ModificarProductoComponent","productosProveedores","productoElegido","nombreProveedor","getProductosProveedores","updateProductoProveedor","alElegirProducto","revisarPrecio","ModificarProveedorComponent","proveedorElegido","idProveedor","updateProveedor","alElegirProveedor","ProcuraBaseComponent","ProductosComponent","faSignInAlt","faListAlt","faSignOutAlt","faExclamationCircle","faInfoCircle","faFolderPlus","oculto","modoActPrecios","preciosNuevos","index","idProductoAct","opciones","margin","filename","image","type","quality","html2canvas","jsPDF","unit","format","orientation","contenido","document","getElementById","from","set","save","descargarPDF","ProveedoresComponent","datosInfo","fecha","proveedorBorrar","deleteProveedor","eliminarProveedor","routes","path","component","children","ProcuraRoutingModule","forChild","imports","exports","ProcuraModule","declarations","ProductosProveedoresService","http","API_URI","dirBackend","get","id_Proveedor","productoProveedorNuevo","id_area_producto","id_unidad_producto","id_proveedor_producto","Date","toISOString","slice","replace","post","put","precioAct","productoPrecioNuevo","providedIn","ProductosService","productoNuevo","id_unidad","ProveedoresService","id_proveedor"],"mappings":"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","file":"modulo_procura-procura-module-es5.js","sourcesContent":["import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-actualizar-productos',\r\n  templateUrl: './actualizar-productos.component.html',\r\n  styleUrls: ['./actualizar-productos.component.css']\r\n})\r\nexport class ActualizarProductosComponent implements OnInit {\r\n  @ViewChild('fi') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faMinusCircle = faMinusCircle;\r\n\r\n  //VARRIABLES DE BD\r\n  productosProveedor:any = [];\r\n  areas:any = [];\r\n  idProducto = null;\r\n\r\n  //VARIABLES DE FUNCIONES COMPONENT\r\n  datosInfoProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    proveedor: null,\r\n    fecha_act: null,\r\n    precio: null\r\n  }\r\n\r\n  datosActualizarProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    proveedor: null,\r\n    fecha_act: null,\r\n    precio: null\r\n  }\r\n\r\n  datosProveedor: any = {\r\n    id: null,\r\n    nombre: null,\r\n    id_area: null,\r\n    direccion: null,\r\n    correo: null,\r\n    credito: null,\r\n    dias_credito: null,\r\n    ciudad: null,\r\n    telefono: null,\r\n    celular: null,\r\n    contacto: null,\r\n    rif: null,\r\n    descripcion: null\r\n    };\r\n\r\n  precioNuevo:number = null;\r\n\r\n  productoProveedorBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n\r\n  constructor(private servicioProductosProveedores: ProductosProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private servicioProveedores: ProveedoresService,\r\n              private router: Router,\r\n              private route: ActivatedRoute) { }\r\n\r\n  ngOnInit(): void {\r\n    this.idProducto = this.route.snapshot.params['id'];\r\n    this.servicioProductosProveedores.getProductosProveedoresElegido(this.idProducto).subscribe(\r\n      res => {this.productosProveedor = res;},\r\n      err => console.log(err));\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedorElegido(this.idProducto).subscribe(\r\n      res => {this.datosProveedor = res[0];},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE DETALLES DE PRODUCTO\r\n  asignarDetalles(producto:any){\r\n    this.datosInfoProducto = producto;\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE ACTUALIZAR  PRODUCTO\r\n  asignarActualizar(producto:any){\r\n    this.datosActualizarProducto = producto;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  actualizarProductoPrecio() {\r\n    if(this.precioNuevo!=null && this.precioNuevo>=0){\r\n      this.servicioProductosProveedores.updatePrecioProducto(this.datosActualizarProducto.id, this.precioNuevo).subscribe(\r\n        res => {console.log(res);},\r\n        err => {console.log(err);});\r\n    }\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE BORRAR PRODUCTO (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.productoProveedorBorrar.nombre = nombre;\r\n    this.productoProveedorBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  eliminarProductoProducto() {\r\n    this.servicioProductosProveedores.deleteProductoProveedor(this.productoProveedorBorrar.id).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);});\r\n  }\r\n}\r\n","<div class=\"bg-white shadow-lg container body\">\r\n    <div class=\"container pt-3\">\r\n        <div class=\"mx-auto\">\r\n            <h3>Productos de: <strong>{{ datosProveedor.nombre}}</strong></h3>\r\n        </div>  \r\n    </div>\r\n    <div class=\"container\">\r\n    <!-- INICIO DEL MODAL ACTUALIZAR PRODUCTOS -->\r\n        <div class=\"table-responsive-md mt-lg-3\">\r\n            <table class=\"table table-sm shadow table-striped\">\r\n                <thead class=\"table-dark\">\r\n                    <tr>\r\n                        <!--FILTROS TABLA DE PRODUCTOS-->\r\n                        <th scope=\"col-2\">\r\n                            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel name=\"filtroNombre\" type=\"text\" placeholder=\"Filtro por nombre\">\r\n                        </th>\r\n                        <th scope=\"col-2\">\r\n                            <select #filtroArea=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroArea\">\r\n                            <option value=\"\">Area (Todas)</option>\r\n                            <option [value]=\"area.nombre\" *ngFor=\"let area of areas\">{{ area.nombre }}</option>\r\n                            </select>\r\n                        </th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                        <th scope=\"col\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <thead class=\"table-dark\">\r\n                    <tr>\r\n                        <th scope=\"col-sm-2\">Nombre</th>\r\n                        <th scope=\"col-sm-2\">Área</th>\r\n                        <th scope=\"col-sm-2\">Precio/Unidad</th>\r\n                        <th scope=\"col-sm-2\">Fecha Actualizado</th>\r\n                        <th scope=\"col-sm-2\"></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    <ng-container *ngFor=\"let producto of productosProveedor; let i=index\">\r\n                    <!--FILTROS DE TABLA DE PRODUCTOS-->\r\n                        <tr\r\n                        class=\"bg-light table-sm linea-tabla\"\r\n                        scope=\"row\"\r\n                        *ngIf=\"(\r\n                        (producto.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                        &&\r\n                        (producto.area.toLocaleLowerCase().includes(filtroArea.value.toLowerCase()) || filtroArea.value == ''))\">\r\n                            <td class=\"col-sm-2\">{{ producto.nombre }}</td>\r\n                            <td class=\"col-sm-2\">{{ producto.area }}</td>\r\n                            <td class=\"col-sm-2\">{{ producto.precio | currency}} / {{ producto.unidad }}</td>\r\n                            <td class=\"col-sm-2\">{{ producto.fecha | date}}</td>\r\n                            <td class=\"col-sm-2\">\r\n                                <!--BOTONES DE DETALLES, ACTUALIZAR Y ELIMINACION-->\r\n                                <div class=\"btn-group\">\r\n                                    <button type=\"button\" (click)=\"asignarActualizar(producto)\" class=\"btn btn-primary text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalActualizar\">\r\n                                        Actualizar\r\n                                    </button>\r\n                                    <button type=\"button\" (click)=\"asignarDetalles(producto)\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                                        Detalles\r\n                                    </button>\r\n                                    <button type=\"button\" (click)=\"asignarBorrar(producto.id, producto.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                        Eliminar\r\n                                    </button>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n            \r\n    <!--FOOTER DEL MODAL-->\r\n    <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" routerLink='/procura/proveedores' >\r\n                Cerrar\r\n            </button>\r\n    </div>\r\n</div>\r\n</div>\r\n\r\n\r\n<!-- MODAL DE INFO PRODUCTO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-info\">\r\n            <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfoProducto.nombre }}</strong></h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <table class=\"table table-sm\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.id }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Área</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.area }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Proveedor</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.nombreProveedor }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.precio != null && datosInfoProducto.unidad != null\">\r\n                    <th>Precio</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.precio | currency }} / {{ datosInfoProducto.unidad }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.garantia != null\">\r\n                    <th>Garantía</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.garantia }} / {{ datosInfoProducto.dias_garantia }} Días</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.fecha != null\">\r\n                    <th>Fecha Actualizado</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.fecha | date }}</td>\r\n                </tr>\r\n                <tr><th></th><td></td><td></td></tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <!-- FIN DEL MODAL INFO PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ELIMINAR PRODUCTO -->\r\n    <div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header bg-danger\">\r\n                <h5 class=\"modal-title text-white\">Eliminar Producto</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>¿Estás seguro que deseas eliminar <strong>{{ productoProveedorBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    Cancelar\r\n                </button>\r\n                <button (click)=\"eliminarProductoProducto()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                    Eliminar\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- FIN MODAL ELIMINAR PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ACTUALIZAR PRODUCTO -->\r\n    <form #fi=\"ngForm\">\r\n        <div class=\"modal fade\" tabindex=\"-1\" id=\"modalActualizar\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header bg-primary\">\r\n                        <h5 class=\"modal-title text-white\">Actualizar Precio Producto</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"row\">\r\n                            <p>Usted esta actualizando el producto <strong>{{ datosActualizarProducto.nombre }}</strong> del proveedor <strong>{{ datosActualizarProducto.nombreProveedor }}</strong>?.</p>\r\n                        </div>\r\n                        <div class=\"row mb-4 mt-4\">\r\n                            <div class=\"col\">\r\n                                <div class=\"mb-2\">\r\n                                    <label for=\"exampleInputEmail1\">Precio actual</label>\r\n                                </div>\r\n                                <p>{{datosActualizarProducto.precio | currency}} por {{datosActualizarProducto.unidad}}</p>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label for=\"exampleInputEmail1\">Precio nuevo</label>\r\n                                <div class=\"input-group\">\r\n                                    <input onkeypress=\"return event.charCode >= 48\"\r\n                                    min=\"1\"\r\n                                    type=\"number\"\r\n                                    [(ngModel)]=\"precioNuevo\"\r\n                                    [name]=\"'precioNuevo'\"\r\n                                    class=\"form-control mt-2\">\r\n                                    <input [placeholder]=\"datosActualizarProducto.unidad\" disabled type=\"text\" ngModel [name]=\"'unidadesAct'\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                        <div class=\"row\">\r\n                            <p><span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n                        </button>\r\n                        <button (click)=\"actualizarProductoPrecio()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\">\r\n                            Actualizar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <!-- FIN MODAL ACTUALIZAR PRODUCTO -->\r\n\r\n","import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n//SERVICIOS IMPORTADOS\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from '../../../services/proveedores.service'\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n@Component({\r\n  selector: 'app-agregar-producto',\r\n  templateUrl: './agregar-producto.component.html',\r\n  styleUrls: ['./agregar-producto.component.css']\r\n})\r\nexport class AgregarProductoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faMinusCircle = faMinusCircle;\r\n\r\n  //VARIABLES QUE ALMACENAN DATOS DE BD\r\n  areas: any = [];\r\n  proveedores:any = [];\r\n  unidades: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  nuevoProducto: any[] = [{\r\n      id: null,\r\n      nombre: null,\r\n      area: null,\r\n      unidad: null,\r\n      garantia: null,\r\n      dias_garantia: null,\r\n      proveedor: null,\r\n      fecha_act: null,\r\n      precio: null,\r\n    }];\r\n  valido: boolean = true;\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private servicioProductosProveedores: ProductosProveedoresService,\r\n              private servicioUnidades: UnidadesService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION PARA AGREGAR PRODUCTO A BD\r\n  onSubmit(){\r\n    for(let productoCiclo of this.nuevoProducto){\r\n      if(productoCiclo.nombre!=null && productoCiclo.nombre!=\"\" &&\r\n        productoCiclo.area!=null && productoCiclo.area!=\"\" &&\r\n        productoCiclo.proveedor!=null && productoCiclo.proveedor!=\"\" &&\r\n        productoCiclo.precio!=null && productoCiclo.precio!=\"\" &&\r\n        productoCiclo.unidad!=null && productoCiclo.unidad!=\"\"){\r\n          if(productoCiclo.garantia == 'No'){\r\n            productoCiclo.dias_garantia = 0;\r\n          }\r\n        this.servicioProductosProveedores.createProductoProveedor(productoCiclo).subscribe(\r\n          res => {console.log(res);\r\n                  this.form.reset();\r\n                  this.router.navigate(['procura/productos']);},\r\n          err => { console.log(err); });\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevoProducto = [{\r\n      id: null,\r\n      nombre: null,\r\n      area: null,\r\n      unidad: null,\r\n      garantia: null,\r\n      dias_garantia: null,\r\n      proveedor: null,\r\n      fecha_act: null,\r\n      precio: null,}];\r\n    this.router.navigate(['procura/productos']);\r\n  }\r\n\r\n  //FUNCION PARA REVISAR EL PRECIO INGRESADO POR EL USUARIO\r\n  revisarPrecio() {\r\n    for(let producto of this.nuevoProducto){\r\n      if(producto.precio <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n  this.valido = true;\r\n  }\r\n\r\n  //FUNCIONES DE AGREGAR MULTIPLE\r\n  agregarProducto() {\r\n    this.nuevoProducto.push({\r\n      id: null,\r\n      nombre: null,\r\n      area: null,\r\n      unidad: null,\r\n      garantia: null,\r\n      dias_garantia: null,\r\n      proveedor: null,\r\n      fecha_act: null,\r\n      precio: null});\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Agregar Producto de Proveedor</h3>\r\n                </div>  \r\n            </div>\r\n            <div class=\"container pe-5 ps-5 pt-2\">\r\n                <!-- INICIO DEL MODAL AGREGAR PRODUCTO -->\r\n                <form #f=\"ngForm\">\r\n                    <div *ngFor=\"let prod of nuevoProducto; let i=index\">\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Producto {{i+1}}</h5>\r\n                        </div>\r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-3 mb-4\">\r\n                                <div class=\"col-3\">\r\n                                    <label>Nombre</label>\r\n                                    <input #nombre=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].nombre\" required type=\"text\" [name]=\"'nombre'+ [i]\" class=\"form-control mt-2\">\r\n                                    <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                                </div>\r\n                                <div class=\"col-2\">\r\n                                    <label for=\"exampleFormControlSelect1\">Área profesional</label>\r\n                                    <select #area=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].area\" required class=\"form-select mt-2\"  [name]=\"'area'+ [i]\">\r\n                                        <option *ngFor=\"let area of areas\" value=\"{{ area.id }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!area.valid && area.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label for=\"exampleFormControlSelect1\">Proveedor</label>\r\n                                        <select #proveedor=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].proveedor\" required class=\"form-select mt-2\"  [name]=\"'proveedor'+ [i]\">\r\n                                    <option *ngFor=\"let prov of proveedores\" value=\"{{ prov.id }}\">{{ prov.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!area.valid && area.touched\" class=\"text-danger\">Ingrese un proveedor.</small>\r\n                                </div>\r\n                                <div class=\"col-2\">\r\n                                    <label for=\"exampleInputPassword1\">Precio y Unidades</label>\r\n                                    <div class=\"input-group\">\r\n                                    <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        required\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"nuevoProducto[i].precio\"\r\n                                        [name]=\"'precio'+ [i]\"\r\n                                        class=\"form-control mt-2\"\r\n                                        (keyup)='revisarPrecio()'>\r\n                                    <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevoProducto[i].unidad\" [name]=\"'unidades'+ [i]\" class=\"form-select mt-2\">\r\n                                        <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                                    </select>\r\n                                    </div>\r\n                                    <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese un precio.<br></small>\r\n                                    <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n                                </div>\r\n                                <div class=\"col-2\">\r\n                                    <label for=\"exampleInputPassword1\">Garantía y días</label>\r\n                                    <div class=\"input-group\">\r\n                                    <select #garantia=\"ngModel\" \r\n                                            required type=\"text\" \r\n                                            placeholder=\"0\" \r\n                                            [(ngModel)]=\"nuevoProducto[i].garantia\" \r\n                                            [name]=\"'garantia' + [i]\" class=\"form-select mt-2\">\r\n                                        <option value=\"Si\" > Si </option>\r\n                                        <option value=\"No\" > No </option>\r\n                                    </select>\r\n                                    <ng-container *ngIf=\"garantia.value == 'Si'\">\r\n                                        <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"nuevoProducto[i].dias_garantia\"\r\n                                        [name]=\"'dias' + [i]\"\r\n                                        class=\"form-control mt-2\">\r\n                                    </ng-container>\r\n                                    </div>\r\n                                    <small *ngIf=\"!garantia.valid && garantia.touched\" class=\"text-danger\">Reporte garantía.<br></small>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <!--FOOTER DEL MODAL AGREGAR (FUNCIONES)-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <div class=\"btn-group\">\r\n                                <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarProducto()\">\r\n                                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                                </button>\r\n                                <button type=\"button\" [hidden]=\"nuevoProducto.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevoProducto.length == 1\"  (click)=\"nuevoProducto.pop()\">\r\n                                    <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                                </button>\r\n                            </div>\r\n                            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid || !valido' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n//SERVICIOS IMPORTADOS\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from '../../../services/proveedores.service'\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-agregar-proveedor',\r\n  templateUrl: './agregar-proveedor.component.html',\r\n  styleUrls: ['./agregar-proveedor.component.css']\r\n})\r\nexport class AgregarProveedorComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  //VARIABLES QUE ALMACENAN DATOS DE BD\r\n  areas: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  nuevoProveedor: any = \r\n    {\r\n      id: null,\r\n      nombre: null,\r\n      credito:null,\r\n      dias_credito:null,\r\n      ciudad: null,\r\n      area: null,\r\n      direccion: null,\r\n      correo: null,\r\n      telefono: null,\r\n      celular: null,\r\n      contacto: null,\r\n      rif: null,\r\n      descripcion: null,\r\n      responsable: null,\r\n    };\r\n\r\n  \r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION PARA AGREGAR PROVEEDOR A BD\r\n  onSubmit(){\r\n    let proveedorNuevo = this.nuevoProveedor\r\n    if(proveedorNuevo.nombre!=null && proveedorNuevo.nombre!=\"\" &&\r\n      proveedorNuevo.area!=null && proveedorNuevo.area!=\"\"){\r\n        if(proveedorNuevo.credito == 'No'){\r\n          proveedorNuevo.dias_credito = 0;\r\n        }\r\n      proveedorNuevo.responsable = this.auth.user.getValue().cedula;\r\n      this.servicioProveedores.createProveedor(proveedorNuevo).subscribe(\r\n        res => {console.log(res);\r\n                this.form.reset();\r\n                this.router.navigate(['procura/proveedores']);},\r\n        err => { console.log(err); });\r\n    }\r\n  }\r\n  \r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevoProveedor = {id: null,\r\n                          nombre: null,\r\n                          area: null,\r\n                          direccion: null,\r\n                          ciudad:null,\r\n                          credito:null,\r\n                          dias_credito:null,\r\n                          correo: null,\r\n                          telefono: null,\r\n                          celular: null,\r\n                          contacto: null,\r\n                          rif: null,\r\n                          descripcion: null};\r\n    this.router.navigate(['procura/proveedores']);\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Agregar Proveedor</h3>\r\n                </div>  \r\n            </div>\r\n            <div class=\"container pe-5 ps-5 pt-2\">\r\n            <!-- INICIO DEL MODAL AGREGAR PROVEEDOR -->\r\n                <form #f=\"ngForm\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <label>Nombre jurídico del proveedor</label>\r\n                                <input #nombre=\"ngModel\" [(ngModel)]=\"nuevoProveedor.nombre\" required type=\"text\" [name]=\"'nombre'\" class=\"form-control mt-2\">\r\n                                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                            </div>\r\n                            <div class=\"col-2\">\r\n                                <label for=\"exampleFormControlSelect1\">Área profesional</label>\r\n                                <select #area=\"ngModel\" [(ngModel)]=\"nuevoProveedor.area\" required class=\"form-select mt-2\"  [name]=\"'area'\">\r\n                                <option *ngFor=\"let area of areas\" value=\"{{ area.id }}\">{{ area.nombre }}</option>\r\n                                </select>\r\n                                <small *ngIf=\"!area.valid && area.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>RIF del proveedor</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.rif\" [name]=\"'rif'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Ciudad y país</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.ciudad\" [name]=\"'ciudad'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-3\" >\r\n                                <label>Correo de contacto</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.correo\" [name]=\"'correo'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Teléfono fijo</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.telefono\" [name]=\"'telefono'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Celular de contacto</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.celular\" [name]=\"'celular'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label>Nombre del Vendedor ó Contacto</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.contacto\" [name]=\"'contacto'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Dirección fiscal del proveedor</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.direccion\" [name]=\"'direccion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                            <div class=\"col-3\">\r\n                                <label for=\"exampleInputPassword1\">Crédito y días</label>\r\n                                <div class=\"input-group\">\r\n                                <select #credito=\"ngModel\" type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevoProveedor.credito\" [name]=\"'credito'\" class=\"form-select mt-2\">\r\n                                    <option value=\"Si\" > Si </option>\r\n                                    <option value=\"No\" > No </option>\r\n                                </select>\r\n                                <ng-container *ngIf=\"credito.value == 'Si'\">\r\n                                    <input\r\n                                    onkeypress=\"return event.charCode >= 46\"\r\n                                    min=\"1\"\r\n                                    #cantidad=\"ngModel\"\r\n                                    type=\"number\"\r\n                                    [(ngModel)]=\"nuevoProveedor.dias_credito\"\r\n                                    [name]=\"'dias'\"\r\n                                    class=\"form-control mt-2\">\r\n                                </ng-container>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Descripción</label>\r\n                                <input type=\"text\" [(ngModel)]=\"nuevoProveedor.descripcion\" [name]=\"'descripcion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                            </div>\r\n                        </div>\r\n\r\n                    <!--FOOTER DEL MODAL AGREGAR (FUNCIONES)-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingresar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ProductosService } from 'src/app/services/productos.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\n\r\n@Component({\r\n  selector: 'app-gestion-productos',\r\n  templateUrl: './gestion-productos.component.html',\r\n  styleUrls: ['./gestion-productos.component.css']\r\n})\r\nexport class GestionProductosComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faTrashAlt = faTrashAlt;\r\n  faFileDownload = faFileDownload;\r\n  faSyncAlt = faSyncAlt;\r\n  faPencilAlt = faPencilAlt;\r\n  \r\n  \r\n  //VARIABLES DE BD\r\n  productos: any = [];\r\n  unidades: any =[];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  nuevoProducto: any[] = [{\r\n    id: null,\r\n    nombre: null,\r\n    unidad: null,\r\n  }];\r\n\r\n  productoModificar: any = {\r\n    id: null,\r\n    nombre: null,\r\n    unidad: null\r\n  }\r\n\r\n  productoBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n\r\n  constructor(private servicioProductos: ProductosService,\r\n              private servicioUnidades: UnidadesService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioProductos.getProductos().subscribe(\r\n      res => {this.productos = res;},\r\n      err => console.log(err));\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n    }\r\n    \r\n  //FUNCION PARA AGREGAR PRODUCTO A BD\r\n  onSubmit(){\r\n    for(let productoCiclo of this.nuevoProducto){\r\n      if(productoCiclo.nombre!=null && productoCiclo.nombre!=\"\" &&\r\n        productoCiclo.unidad!=null && productoCiclo.unidad!=\"\"){ \r\n          console.log(productoCiclo);\r\n        this.servicioProductos.createProducto(productoCiclo).subscribe(\r\n          res => {console.log(res);\r\n                  this.form.reset();\r\n                  this.router.navigate(['procura/productos']);},\r\n          err => { console.log(err); });\r\n      }\r\n    }\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.nuevoProducto = [{\r\n      id: null,\r\n      nombre: null,\r\n      unidad: null,}];\r\n    this.router.navigate(['procura/productos']);\r\n  }\r\n\r\n  //FUNCIONES DE AGREGAR MULTIPLE\r\n  agregarProducto() {\r\n    this.nuevoProducto.push({\r\n      id: null,\r\n      nombre: null,\r\n      unidad: null});\r\n    }\r\n\r\n  //FUNCION PARA BOTON DE MODIFICAR (DATOS)\r\n  asignarModificar(idProducto:string){\r\n    this.productoModificar = Object.assign({}, this.productos.find(producto => producto.id == idProducto));\r\n  }\r\n\r\n  //FUNCION MODIFICAR PRODUCTO\r\n  onModificar() {\r\n    this.productoModificar.unidad = this.unidades.find(unidad => unidad.nombre == this.productoModificar.unidad).id;\r\n    console.log(this.productoModificar);\r\n    this.servicioProductos.updateProducto(this.productoModificar.id, this.productoModificar).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE BORRAR PRODUCTO (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.productoBorrar.nombre = nombre;\r\n    this.productoBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  eliminarProducto() {\r\n    this.servicioProductos.deleteProducto(this.productoBorrar.id).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);});\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container-fluid\">\r\n    <h1>Gestión de productos</h1>\r\n        <div class=\"parent\">\r\n            <div class=\"elemento1\">\r\n                <div class=\"container\">\r\n                    <div class=\"body form-body-style-agregar\">\r\n                        <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                            <div class=\"mx-auto\">\r\n                                <h3>Agregar Producto Nuevo</h3>\r\n                            </div>  \r\n                        </div>\r\n                        <div class=\"container pe-5 ps-5 pt-2\">\r\n                            <!-- INICIO DEL MODAL AGREGAR PRODUCTO NUEVO-->\r\n                            <form #f=\"ngForm\">\r\n                                <div *ngFor=\"let prod of nuevoProducto; let i=index\">\r\n                                    <div class=\"container mt-2\">\r\n                                        <h5>Producto {{i+1}}</h5>\r\n                                    </div>\r\n                                    <div class=\"container\">\r\n                                        <div class=\"row mt-3 mb-4\">\r\n                                            <div class=\"col\">\r\n                                                <label>Nombre</label>\r\n                                                <input #nombre=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].nombre\" required type=\"text\" [name]=\"'nombre'+ [i]\" class=\"form-control mt-2\">\r\n                                                <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n                                            </div>\r\n                                            <div class=\"col\">\r\n                                                <label for=\"exampleFormControlSelect1\">Unidad</label>\r\n                                                <select #unidad=\"ngModel\" [(ngModel)]=\"nuevoProducto[i].unidad\" required class=\"form-select mt-2\"  [name]=\"'unidad'+ [i]\">\r\n                                                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                                                </select>\r\n                                                <small *ngIf=\"!unidad.valid && unidad.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <!--FOOTER DEL MODAL AGREGAR (FUNCIONES)-->\r\n                                <div class=\"form-footer-style\">\r\n                                    <div class=\"modal-footer\">\r\n                                        <div class=\"btn-group\">\r\n                                            <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarProducto()\">\r\n                                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n                                            </button>\r\n                                            <button type=\"button\" [hidden]=\"nuevoProducto.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevoProducto.length == 1\"  (click)=\"nuevoProducto.pop()\">\r\n                                                <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n                                            </button>\r\n                                        </div>\r\n                                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Volver\r\n                                        </button>\r\n                                        <button [disabled]='!f.valid' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-agregar\" (click)=\"onSubmit()\">\r\n                                            <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingresar\r\n                                        </button>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"elemento2\">\r\n                <div class=\"container especial\">\r\n                    <div class=\"table-responsive-sm special\">\r\n                        <table class=\"table table-sm shadow table-striped\">\r\n                            <thead class=\"table-dark\">\r\n                                <tr>\r\n                                    <!--FILTROS TABLA DE PRODUCTOS-->\r\n                                    <th colspan=\"2\" scope=\"col-1\">\r\n                                        <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n                                    </th>\r\n                                    <th colspan=\"2\" scope=\"col-1\"></th>\r\n                                    <th colspan=\"2\" scope=\"col-1\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <thead class=\"table-dark\">\r\n                                <tr>\r\n                                    <th colspan=\"2\" scope=\"col\">Nombre</th>\r\n                                    <th colspan=\"2\" scope=\"col\">Unidad</th>\r\n                                    <th colspan=\"2\" scope=\"col\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                <ng-container *ngFor=\"let producto of productos; let i=index\">\r\n                                <!--FILTROS DE TABLA DE PRODUCTOS-->\r\n                                    <tr\r\n                                    class=\"bg-light table-sm linea-tabla\"\r\n                                    scope=\"row\"\r\n                                    *ngIf=\"(producto.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\">\r\n                                        <td colspan=\"1\" class=\"col\">{{ producto.nombre }}</td>\r\n                                        <td colspan=\"2\" class=\"col\">{{ producto.unidad }}</td>\r\n                                        <td colspan=\"2\" class=\"col\">\r\n                                            <div class=\"btn-group\">\r\n                                                <button type=\"button\" (click)=\"asignarModificar(producto.id)\" class=\"btn btn-primary text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalModificar\">\r\n                                                    <fa-icon [icon]=\"faPencilAlt\"></fa-icon>  Modificar\r\n                                                </button>\r\n                                                <button type=\"button\" (click)=\"asignarBorrar(producto.id, producto.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                                    <fa-icon [icon]=\"faTrashAlt\"></fa-icon>  Eliminar\r\n                                                </button>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </ng-container>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!-- INICIO MODAL ELIMINAR PRODUCTO -->\r\n<div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-danger\">\r\n            <h5 class=\"modal-title text-white\">Eliminar Producto</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p>¿Estás seguro que deseas eliminar <strong>{{ productoBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n            </button>\r\n            <button (click)=\"eliminarProducto()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                <fa-icon [icon]=\"faTrashAlt\"></fa-icon> Eliminar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR PRODUCTO -->\r\n\r\n<!-- INICIO MODAL MODIFICAR PRODUCTO -->\r\n<div class=\"modal fade\" tabindex=\"-1\" id=\"modalModificar\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n            <form #f=\"ngForm\">\r\n                <div class=\"modal-header bg-primary\">\r\n                    <h5 class=\"modal-title text-white\">{{ productoModificar.nombre }}</h5>\r\n                </div>\r\n                    <div class=\"container\">\r\n                        <div class=\"container mt-3\">\r\n                            <h5>Ingrese los datos que desee modificar</h5>\r\n                        </div>\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Nombre</label>\r\n                                <input #nombreModif=\"ngModel\" [(ngModel)]=\"productoModificar.nombre\" type=\"text\" name=\"nombre\" class=\"form-control mt-2\">\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label for=\"exampleFormControlSelect1\">Unidad</label>\r\n                                <select #unidadModif=\"ngModel\" [(ngModel)]=\"productoModificar.unidad\" class=\"form-select mt-2\"  name=\"unidadModif\">\r\n                                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                <!--FOOTER DEL MODAL MODIFICAR (FUNCIONES)-->\r\n                <div class=\"form-footer-style\">\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                        </button>\r\n                        <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"onModificar()\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- FIN MODAL MODIFICAR PRODUCTO -->","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-menu-procura',\r\n  templateUrl: './menu-procura.component.html',\r\n  styleUrls: ['./menu-procura.component.css']\r\n})\r\nexport class MenuProcuraComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n    <section>\r\n        <div class=\"content\">\r\n            <div class=\"row mb-5 \">\r\n                <h2>Elige un sub-módulo de procura</h2>\r\n            </div>\r\n        </div>\r\n    </section>\r\n    <div class=\"container\">\r\n        <div class=\"row\">\r\n            <div class=\"col-lg-12 text-center\">\r\n                <div class=\"row justify-content-center\">\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n                        <div class=\"card-section border rounded p-3 bg-white\">\r\n                                <div class=\"card-header-style-within header-color-proveedores rounded pb-5\">\r\n                                    <h2 class=\"card-header-title text-white text-center pt-3\">Proveedores</h2>\r\n                                </div>\r\n                            <div class=\"card-body text-center\">\r\n                                <h5 class=\"card-title\">Lista de proveedores</h5>\r\n                                <p class=\"card-text\">Módulo de gestión de proveedores. El usuario podrá agregar, modificar, eliminar y observar los detalles de cada uno de los proveedores de manera individual.</p>\r\n                                <a class=\"btn btn-color-proveedores card-btn text-decoration-none\" routerLink='proveedores'>Continuar</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n                        <div class=\"card-section border rounded p-3 bg-white\">\r\n                                <div class=\"card-header-style-within header-color-productos rounded pb-5\">\r\n                                    <h2 class=\"card-header-title text-white text-center pt-3\">Productos</h2>\r\n                                </div>\r\n                            <div class=\"card-body text-center\">\r\n                                <h5 class=\"card-title\">Lista de productos</h5>\r\n                                <p class=\"card-text\">Módulo de gestión de productos. El usuario podrá agregar, modificar, eliminar y observar los detalles de cada uno de los productos de manera individual.</p>\r\n                                <a class=\"btn btn-color-productos card-btn text-decoration-none\" routerLink='productos'>Continuar</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"col-lg-4 col-md-12 mb-4\">\r\n                        <div class=\"card-section border rounded p-3 bg-white\">\r\n                                <div class=\"card-header-style-within header-color-pedidos rounded pb-5\">\r\n                                    <h2 class=\"card-header-title text-white text-center pt-3\">Pedidos</h2>\r\n                                </div>\r\n                            <div class=\"card-body text-center\">\r\n                                <h5 class=\"card-title\">Gestión de pedidos</h5>\r\n                                <p class=\"card-text\">Módulo de gestión de pedidos. El usuario <br> podrá realizar todas las acciones referentes <br> a la gestión de pedidos <br> (abastecimiento y procura).</p>\r\n                                <a class=\"btn btn-color-pedidos card-btn text-decoration-none\">Continuar</a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-modificar-producto',\r\n  templateUrl: './modificar-producto.component.html',\r\n  styleUrls: ['./modificar-producto.component.css']\r\n})\r\nexport class ModificarProductoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  //VARIABLES QUE ALMACEN INFO DE BD\r\n  proveedores: any = [];\r\n  areas:any = [];\r\n  unidades: any = [];\r\n  productosProveedores: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  productoElegido: any = {\r\n    id: null,\r\n    nombre: null,\r\n    unidad: null,\r\n    nombreProveedor: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    fecha_act: null,\r\n    precio: null,\r\n    area: null,\r\n  };\r\n  valido: boolean = true;\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioProductosProveedores: ProductosProveedoresService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n    this.servicioProductosProveedores.getProductosProveedores().subscribe(\r\n      res => {this.productosProveedores = res;},\r\n      err => console.log(err));\r\n  }\r\n//ENCUENTRA EL ID DEL PRODUCTO A MODIFICAR\r\nalElegirProducto(idProducto: string) {\r\n  this.productoElegido = Object.assign({}, this.productosProveedores.find(producto => producto.id == idProducto));\r\n}\r\n\r\n//FUNCION MODIFICAR PRODUCTO\r\nonModificar() {\r\n  this.productoElegido.area = this.areas.find(area => area.nombre == this.productoElegido.area).id;\r\n  this.productoElegido.unidad = this.unidades.find(unidad => unidad.nombre == this.productoElegido.unidad).id;\r\n  this.productoElegido.nombreProveedor = this.proveedores.find(proveedor => proveedor.nombre == this.productoElegido.nombreProveedor).id;\r\n  if(this.productoElegido.garantia == 'No'){\r\n    this.productoElegido.dias_garantia = 0;\r\n  }\r\n  this.servicioProductosProveedores.updateProductoProveedor(this.productoElegido.id, this.productoElegido).subscribe(\r\n    res => {console.log(res);\r\n            this.router.navigate(['procura/productos']);\r\n            this.form.reset();},\r\n    err => {console.log(err);}\r\n  );\r\n  \r\n}\r\n\r\n//FUNCION PARA REVISAR EL PRECIO INGRESADO POR EL USUARIO MODIFICAR\r\nrevisarPrecio() {\r\n  if(this.productoElegido.precio <= 0) {\r\n    this.valido = false;\r\n    return\r\n  }\r\nthis.valido = true;\r\n}\r\n\r\n//FUNCION PARA BORRAR FORMULARIO\r\nborrarForm() {\r\n  this.form.reset();\r\n  this.router.navigate(['procura/productos']);\r\n}\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-modificar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Modificar Producto</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-3'>\r\n                <form #f=\"ngForm\">\r\n                    <!--FILTROS PARA SELECCIONAR PRODUCTO A MODIFICAR-->\r\n                        <div class=\"container \">\r\n                            <h5>Seleccione el producto a modificar:</h5>\r\n                        </div>  \r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-2 mb-4\">\r\n                                <div class=\"col-4\">\r\n                                    <label>Área profesional</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectAreaModificar\" #selectAreaModificar=\"ngModel\">\r\n                                    <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectAreaModificar.valid && selectAreaModificar.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label>Proveedor</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectProveedorModificar\" #selectProveedorModificar=\"ngModel\">\r\n                                    <option *ngFor=\"let proveedor of proveedores\" value=\"{{ proveedor.nombre }}\">{{ proveedor.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectProveedorModificar.valid && selectProveedorModificar.touched\" class=\"text-danger\">Ingrese un proveedor.</small>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <label>Producto</label>\r\n                                    <select #idProducto=\"ngModel\" (change)=\"alElegirProducto(idProducto.value)\" class=\"form-select mt-2\" ngModel required name=\"item\" #selectProductoModif='ngModel'>\r\n                                    <ng-container *ngFor=\"let producto of productosProveedores\">\r\n                                        <option\r\n                                        *ngIf=\"producto.area == selectAreaModificar.value &&\r\n                                                producto.nombreProveedor == selectProveedorModificar.value\"\r\n                                        value='{{producto.id}}'>{{ producto.nombre }}</option>\r\n                                        </ng-container>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectProductoModif.valid && selectProductoModif.touched\" class=\"text-danger\">Ingrese un producto.</small>\r\n                                </div>\r\n                        </div>\r\n                        <hr>\r\n                        <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS DEL PRODUCTO-->\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Modifique los datos que desee:</h5>\r\n                        </div>  \r\n                            <div class=\"row mt-2 mb-5\">\r\n                                <div class=\"col-4\">\r\n                                    <label>Nombre</label>\r\n                                    <input required type=\"text\"\r\n                                    [(ngModel)]=\"productoElegido.nombre\"\r\n                                    name=\"nombre\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Área profesional</label>\r\n                                    <select required class=\"form-select mt-2\"\r\n                                    [(ngModel)]=\"productoElegido.area\"\r\n                                    name=\"area\">\r\n                                        <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>Proveedor</label>\r\n                                    <select required class=\"form-select mt-2\"\r\n                                    [(ngModel)]=\"productoElegido.nombreProveedor\"\r\n                                    name=\"proveedor\">\r\n                                        <option *ngFor=\"let proveedor of proveedores\" value=\"{{ proveedor.nombre }}\">{{ proveedor.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col\">\r\n                                    <label for=\"exampleInputPassword1\">Precio y Unidades</label>\r\n                                    <div class=\"input-group\">\r\n                                        <input\r\n                                            onkeypress=\"return event.charCode >= 46\"\r\n                                            min=\"1\"\r\n                                            #cantidad=\"ngModel\"\r\n                                            required\r\n                                            type=\"number\"\r\n                                            [(ngModel)]=\"productoElegido.precio\"\r\n                                            [name]=\"'precio'\"\r\n                                            class=\"form-control mt-2\"\r\n                                            (keyup)='revisarPrecio()'>\r\n                                        <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"productoElegido.unidad\" [name]=\"'unidades'\" class=\"form-select mt-2\">\r\n                                            <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                        </select>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label for=\"exampleInputPassword1\">Garantía y días</label>\r\n                                    <div class=\"input-group\">\r\n                                    <select #garantia=\"ngModel\" \r\n                                            required type=\"text\" \r\n                                            placeholder=\"0\" \r\n                                            [(ngModel)]=\"productoElegido.garantia\" \r\n                                            [name]=\"'garantia'\" class=\"form-select mt-2\">\r\n                                        <option value=\"Si\" > Si </option>\r\n                                        <option value=\"No\" > No </option>\r\n                                    </select>\r\n                                    <ng-container *ngIf=\"garantia.value == 'Si'\">\r\n                                        <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"productoElegido.dias_garantia\"\r\n                                        [name]=\"'dias'\"\r\n                                        class=\"form-control mt-2\">\r\n                                    </ng-container>\r\n                                    </div>\r\n                                    <small *ngIf=\"!garantia.valid && garantia.touched\" class=\"text-danger\">Reporte garantía.<br></small>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>Fecha Actualizado</label>\r\n                                    <input class=\"form-control mt-2\" [(ngModel)]=\"productoElegido.fecha_act\" [name]=\"'fechaActualizacion'\" type=\"date\">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    <!--BOTONES FUNCIONES MODIFICAR PRODUCTO-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button (click)=\"borrarForm()\" type=\"button\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid || !valido' (click)=\"onModificar()\" type=\"button\" class=\"btn btn-primary text-white\">\r\n                                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild} from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { NgForm, Validators } from '@angular/forms';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\n\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-modificar-proveedor',\r\n  templateUrl: './modificar-proveedor.component.html',\r\n  styleUrls: ['./modificar-proveedor.component.css']\r\n})\r\nexport class ModificarProveedorComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  //VARIABLES QUE ALMACEN INFO DE BD\r\n  proveedores: any = [];\r\n  areas:any = [];\r\n\r\n  //VARIABLES DE FUNCIONES\r\n  proveedorElegido: any =\r\n  {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    direccion: null,\r\n    correo: null,\r\n    telefono: null,\r\n    contacto: null,\r\n    ciudad: null,\r\n    celular: null,\r\n    credito: null,\r\n    dias_credito: null,\r\n    rif: null,\r\n    descripcion: null,\r\n  };\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //ENCUENTRA EL ID DEL PROVEEDOR A MODIFICAR\r\n  alElegirProveedor(idProveedor: string) {\r\n    this.proveedorElegido = Object.assign({}, this.proveedores.find(proveedor => proveedor.id == idProveedor));\r\n    console.log(this.proveedorElegido);\r\n  }\r\n\r\n  //FUNCION MODIFICAR PROVEEDOR\r\n  onModificar() {\r\n    if(this.proveedorElegido.credito == 'No'){\r\n      this.proveedorElegido.dias_credito = 0;\r\n    }\r\n    this.proveedorElegido.area = this.areas.find(area => area.nombre == this.proveedorElegido.area).id;\r\n    this.servicioProveedores.updateProveedor(this.proveedorElegido.id, this.proveedorElegido).subscribe(\r\n      res => {console.log(res);\r\n              this.router.navigate(['procura/proveedores']);\r\n              this.form.reset();\r\n      },\r\n      err => {console.log(err);}\r\n    );\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['procura/proveedores']);\r\n  }\r\n}\r\n","<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-modificar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Modificar Proveedor</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                    <!--FILTROS PARA SELECCIONAR PROVEEDOR A MODIFICAR-->\r\n                    <div class=\"container mt-2\">\r\n                        <h5>Seleccione el proveedor a modificar:</h5>\r\n                    </div> \r\n                        <div class=\"container\">\r\n                            <div class=\"row mt-2 mb-4\">\r\n                                <div class=\"col-6\">\r\n                                    <label>Área</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectAreaModificar\" #selectAreaModificar=\"ngModel\">\r\n                                    <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectAreaModificar.valid && selectAreaModificar.touched\" class=\"text-danger\">Ingrese un área.</small>\r\n                                </div>\r\n                                <div class=\"col-6\">\r\n                                    <label>Proveedor</label>\r\n                                    <select #idProveedor=\"ngModel\" (change)=\"alElegirProveedor(idProveedor.value)\" class=\"form-select mt-2\" ngModel required name=\"item\" #selectProveedorModif='ngModel'>\r\n                                    <ng-container *ngFor=\"let proveedor of proveedores\">\r\n                                        <option\r\n                                        *ngIf=\"proveedor.area == selectAreaModificar.value\"\r\n                                        value='{{proveedor.id}}'>{{ proveedor.nombre }}</option>\r\n                                        </ng-container>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectProveedorModif.valid && selectProveedorModif.touched\" class=\"text-danger\">Ingrese un proveedor.</small>\r\n                                </div>\r\n                            </div>\r\n                        <hr>\r\n                            <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS DEL PROVEEDOR-->\r\n                        <div class=\"container mt-2\">\r\n                            <h5>Modifique los datos que desee:</h5>\r\n                        </div>    \r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col-4\">\r\n                                    <label>Nombre jurídico del proveedor</label>\r\n                                    <input required type=\"text\"\r\n                                    [(ngModel)]=\"proveedorElegido.nombre\"\r\n                                    name=\"nombre\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Área profesional</label>\r\n                                    <select required class=\"form-select mt-2\"\r\n                                    [(ngModel)]=\"proveedorElegido.area\"\r\n                                    name=\"area\">\r\n                                        <option *ngFor=\"let area of areas\" value=\"{{ area.nombre }}\">{{ area.nombre }}</option>\r\n                                    </select>\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>RIF del proveedor</label>\r\n                                    <input type=\"text\"\r\n                                    [(ngModel)]=\"proveedorElegido.rif\"\r\n                                    name=\"serial\" class=\"form-control mt-2\">\r\n                                </div>\r\n                                <div class=\"col\">\r\n                                    <label>Ciudad y país</label>\r\n                                    <input type=\"text\"\r\n                                    [(ngModel)]=\"proveedorElegido.ciudad\"\r\n                                    name=\"ciudad\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col-3\" >\r\n                                    <label>Correo de contacto</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.correo\" [name]=\"'correo'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Teléfono fijo</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.telefono\" [name]=\"'telefono'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Celular de contacto</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.celular\" [name]=\"'celular'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label>Nombre del Vendedor ó Contacto</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.contacto\" [name]=\"'contacto'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col\">\r\n                                    <label>Dirección fiscal del proveedor</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.direccion\" [name]=\"'direccion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                                <div class=\"col-3\">\r\n                                    <label for=\"exampleInputPassword1\">Crédito y días</label>\r\n                                    <div class=\"input-group\">\r\n                                    <select #credito=\"ngModel\" type=\"text\" \r\n                                            placeholder=\"0\" \r\n                                            [(ngModel)]=\"proveedorElegido.credito\" \r\n                                            [name]=\"'credito'\" class=\"form-select mt-2\">\r\n                                        <option value=\"Si\" > Si </option>\r\n                                        <option value=\"No\" > No </option>\r\n                                    </select>\r\n                                    <ng-container *ngIf=\"credito.value == 'Si'\">\r\n                                        <input\r\n                                        onkeypress=\"return event.charCode >= 46\"\r\n                                        min=\"1\"\r\n                                        #cantidad=\"ngModel\"\r\n                                        type=\"number\"\r\n                                        [(ngModel)]=\"proveedorElegido.dias_credito\"\r\n                                        [name]=\"'dias'\"\r\n                                        class=\"form-control mt-2\">\r\n                                    </ng-container>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"row mb-4\">\r\n                                <div class=\"col\">\r\n                                    <label>Descripción</label>\r\n                                    <input type=\"text\" [(ngModel)]=\"proveedorElegido.descripcion\" [name]=\"'descripcion'\" class=\"form-control mt-2\" aria-describedby=\"emailHelp\">\r\n                                </div>\r\n                            </div>\r\n                    </div>\r\n                    <!--BOTONES FUNCIONES MODIFICAR-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button (click)=\"borrarForm()\" type=\"button\" class=\"btn btn-secondary\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                            <button [disabled]='!f.valid' (click)=\"onModificar()\" type=\"button\" class=\"btn btn-primary text-white\">\r\n                                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-procura-base',\n  templateUrl: './procura-base.component.html',\n  styleUrls: ['./procura-base.component.css']\n})\nexport class ProcuraBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProductosProveedoresService } from 'src/app/services/productos-proveedores.service';\r\nimport { ProveedoresService } from 'src/app/services/proveedores.service';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFolderPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSyncAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgForm } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-productos',\r\n  templateUrl: './productos.component.html',\r\n  styleUrls: ['./productos.component.css']\r\n})\r\nexport class ProductosComponent implements OnInit {\r\n\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faListAlt = faListAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n  faTrashAlt = faTrashAlt;\r\n  faFileDownload = faFileDownload;\r\n  faSyncAlt = faSyncAlt;\r\n  faFolderPlus = faFolderPlus;\r\n\r\n  //VARIABLES QUE ALMACENA INFO DE BD\r\n  proveedores: any = [];\r\n  productosProveedores: any = [];\r\n  areas: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES COMPONENT\r\n  datosInfoProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    nombreProveedor: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    fecha_act: null,\r\n    precio: null,\r\n  }\r\n\r\n  datosActualizarProducto: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    unidad: null,\r\n    garantia: null,\r\n    dias_garantia: null,\r\n    nombreProveedor: null,\r\n    fecha_act: null,\r\n    precio: null,\r\n  }\r\n  \r\n  precioNuevo:number = null;\r\n  \r\n  productoProveedorBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n  oculto:boolean = true;\r\n\r\n  modoActPrecios = false;\r\n  preciosNuevos: any[] = [{\r\n    index: null,\r\n    idProductoAct: null,\r\n    precioNuevo: null,\r\n  }];\r\n\r\n  constructor(private servicioProductosProveedores: ProductosProveedoresService,\r\n              private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {this.proveedores = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioProductosProveedores.getProductosProveedores().subscribe(\r\n      res => {this.productosProveedores = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {this.areas = res;},\r\n      err => console.log(err));\r\n\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE DETALLES DE PRODUCTO\r\n  asignarDetalles(producto:any){\r\n    this.datosInfoProducto = producto;\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE ACTUALIZAR  PRODUCTO\r\n  asignarActualizar(producto:any){\r\n    this.datosActualizarProducto = producto;\r\n    console.log(this.datosActualizarProducto);\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  actualizarProductoPrecio() {\r\n    if(this.precioNuevo!=null && this.precioNuevo>=0){\r\n      this.servicioProductosProveedores.updatePrecioProducto(this.datosActualizarProducto.id, this.precioNuevo).subscribe(\r\n        res => {console.log(res);\r\n        this.form.reset()},\r\n        err => {console.log(err);});\r\n    } \r\n  }\r\n  \r\n\r\n  //FUNCION PARA BOTON DE BORRAR PRODUCTO (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.productoProveedorBorrar.nombre = nombre;\r\n    this.productoProveedorBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PRODUCTO\r\n  eliminarProductoProducto() {\r\n    this.servicioProductosProveedores.deleteProductoProveedor(this.productoProveedorBorrar.id).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);});\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE PRODUCTO\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Productos_Proveedores.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  onGuardarCambios() {\r\n\r\n  }\r\n\r\n  modoActPreciosOn() {\r\n    this.modoActPrecios = true;\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid mt-lg-3\">\r\n    <!--BOTONES PARA GESTIONAR PRODUCTOS-->\r\n    <div class=\"row px-4\">\r\n        <div class=\"col-3\">\r\n            <h1>Productos</h1>\r\n        </div>\r\n        <div class=\"col-9 mt-lg-3\">\r\n            <button type=\"button\" class=\"btn cool-btn btn-gestionar float-end ms-5\" routerLink='gestionar'>\r\n                <fa-icon [icon]=\"faFolderPlus\"></fa-icon> Gestionar Productos\r\n            </button>\r\n            <div class=\"btn-group float-end\" role=\"group\">\r\n                <button *ngIf=\"modoActPrecios\" type=\"button\" class=\"btn cool-btn btn-success\" (click)='onGuardarCambios()'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Guardar cambios\r\n                </button>\r\n                <button *ngIf=\"modoActPrecios\" type=\"button\" class=\"btn cool-btn btn-danger\" (click)='modoActPrecios=false'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Cancelar\r\n                </button>\r\n                <button *ngIf=\"!modoActPrecios\" type=\"button\" class=\"btn cool-btn btn-primary\" hidden (click)='modoActPreciosOn()'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Actualizar precios\r\n                </button>\r\n                <button type=\"button\" class=\"btn cool-btn btn-success\" routerLink='agregar'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary cool-btn text-white\" routerLink='modificar'>\r\n                    <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                </button>\r\n                <button class=\"btn btn-warning text-dark cool-btn float-right\" data-bs-toggle=\"modal\" data-bs-target=\"#pdfProveedores\">\r\n                    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row px-4\">\r\n    <!--TABLA DE PRODUCTOS-->\r\n    <div class=\"table-responsive-md mt-lg-3\">\r\n        <table class=\"table table-sm shadow table-striped\">\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <!--FILTROS TABLA DE PRODUCTOS-->\r\n                <th scope=\"col-2\">\r\n                    <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n                </th>\r\n                <th scope=\"col-2\">\r\n                    <select #filtroArea=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroArea\">\r\n                    <option value=\"\">Area (Todas)</option>\r\n                    <option [value]=\"area.nombre\" *ngFor=\"let area of areas\">{{ area.nombre }}</option>\r\n                    </select>\r\n                </th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <th scope=\"col-sm-2\">Nombre</th>\r\n                <th scope=\"col-sm-2\">Área</th>\r\n                <th scope=\"col-sm-2\">Proveedor</th>\r\n                <th scope=\"col-sm-2\">Precio/Unidad</th>\r\n                <th *ngIf=\"modoActPrecios\" scope=\"col-sm-2\">Nuevo precio</th>\r\n                <th scope=\"col-sm-2\">Fecha Actualizado</th>\r\n                <th scope=\"col-sm-2\"></th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <ng-container *ngFor=\"let producto of productosProveedores; let i=index\">\r\n            <!--FILTROS DE TABLA DE PRODUCTOS-->\r\n                <tr\r\n                class=\"bg-light table-sm linea-tabla\"\r\n                scope=\"row\"\r\n                *ngIf=\"(\r\n                        (producto.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                        &&\r\n                        (producto.area.toLocaleLowerCase().includes(filtroArea.value.toLowerCase()) || filtroArea.value == ''))\">\r\n                    <td class=\"col-sm-2\">{{ producto.nombre }}</td>\r\n                    <td class=\"col-sm-2\">{{ producto.area }}</td>\r\n                    <td class=\"col-sm-2\">{{ producto.nombreProveedor }}</td>\r\n                    <td class=\"col-sm-2\">{{ producto.precio | currency}} / {{ producto.unidad }}</td>\r\n                    <td *ngIf=\"modoActPrecios\" class=\"col-sm-2\">\r\n                        <form #f=\"ngForm\">\r\n                            <input [(ngModel)]='preciosNuevos[i].precio' [name]=\"'nuevoPrecio' + i\" type=\"number\" class=\"form-control form-control-sm\">\r\n                        </form>\r\n                    </td>\r\n                    <td class=\"col-sm-2\">{{ producto.fecha | date}}</td>\r\n                    <td class=\"col-sm-2\">\r\n                        <!--BOTONES DE DETALLES Y ELIMINACION-->\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" (click)=\"asignarActualizar(producto)\" class=\"btn btn-primary text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalActualizar\">\r\n                                <fa-icon [icon]=\"faSyncAlt\"></fa-icon>  Actualizar\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"asignarDetalles(producto)\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                                <fa-icon [icon]=\"faInfoCircle\"></fa-icon>  Detalles\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"asignarBorrar(producto.id, producto.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                <fa-icon [icon]=\"faTrashAlt\"></fa-icon>  Eliminar\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL DE INFO PRODUCTO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-info\">\r\n            <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfoProducto.nombre }}</strong></h5>\r\n            <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <table class=\"table table-sm\">\r\n            <tbody>\r\n                <tr>\r\n                    <th>ID</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.id }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Área</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.area }}</td>\r\n                </tr>\r\n                <tr>\r\n                    <th>Proveedor</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.nombreProveedor }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.precio != null && datosInfoProducto.unidad != null\">\r\n                    <th>Precio</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.precio | currency }} / {{ datosInfoProducto.unidad }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.garantia != null && datosInfoProducto.garantia != null\">\r\n                    <th>Garantía del proveedor (días)</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.garantia }} / {{ datosInfoProducto.dias_garantia }}</td>\r\n                </tr>\r\n                <tr *ngIf=\"datosInfoProducto.fecha != null\">\r\n                    <th>Fecha Actualizado</th>\r\n                    <td></td>\r\n                    <td>{{ datosInfoProducto.fecha | date }}</td>\r\n                </tr>\r\n                <tr><th></th><td></td><td></td></tr>\r\n            </tbody>\r\n        </table>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    <!-- FIN DEL MODAL INFO PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ELIMINAR PRODUCTO -->\r\n    <div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n        <div class=\"modal-dialog\">\r\n            <div class=\"modal-content\">\r\n            <div class=\"modal-header bg-danger\">\r\n                <h5 class=\"modal-title text-white\">Eliminar Producto</h5>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <p>¿Estás seguro que deseas eliminar <strong>{{ productoProveedorBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n            </div>\r\n            <div class=\"modal-footer\">\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                    <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n                </button>\r\n                <button (click)=\"eliminarProductoProducto()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                    <fa-icon [icon]=\"faTrashAlt\"></fa-icon> Eliminar\r\n                </button>\r\n            </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <!-- FIN MODAL ELIMINAR PRODUCTO -->\r\n\r\n    <!-- INICIO MODAL ACTUALIZAR PRODUCTO -->\r\n    <form #f=\"ngForm\">\r\n        <div class=\"modal fade\" tabindex=\"-1\" id=\"modalActualizar\">\r\n            <div class=\"modal-dialog\">\r\n                <div class=\"modal-content\">\r\n                    <div class=\"modal-header bg-primary\">\r\n                        <h5 class=\"modal-title text-white\">Actualizar Precio Producto</h5>\r\n                    </div>\r\n                    <div class=\"modal-body\">\r\n                        <div class=\"row\">\r\n                            <p>Usted esta actualizando el producto <strong>{{ datosActualizarProducto.nombre }}</strong> del proveedor <strong>{{ datosActualizarProducto.nombreProveedor }}</strong>?.</p>\r\n                        </div>\r\n                        <div class=\"row mb-4 mt-4\">\r\n                            <div class=\"col\">\r\n                                <div class=\"mb-2\">\r\n                                    <label for=\"exampleInputEmail1\">Precio actual</label>\r\n                                </div>\r\n                                <p>{{datosActualizarProducto.precio | currency}} por {{datosActualizarProducto.unidad}}</p>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label for=\"exampleInputEmail1\">Precio nuevo</label>\r\n                                <div class=\"input-group\">\r\n                                    <input onkeypress=\"return event.charCode >= 48\"\r\n                                    min=\"1\"\r\n                                    type=\"number\"\r\n                                    [(ngModel)]=\"precioNuevo\"\r\n                                    [name]=\"'precioNuevo'\"\r\n                                    class=\"form-control mt-2\">\r\n                                    <input [placeholder]=\"datosActualizarProducto.unidad\" disabled type=\"text\" ngModel [name]=\"'unidadesAct'\" class=\"form-control mt-2\">\r\n                                </div>\r\n                            </div>\r\n                        </div>  \r\n                        <div class=\"row\">\r\n                            <p><span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n                        </button>\r\n                        <button (click)=\"actualizarProductoPrecio()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\">\r\n                            <fa-icon [icon]=\"faSyncAlt\"></fa-icon> Actualizar\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <!-- FIN MODAL ACTUALIZAR PRODUCTO -->\r\n\r\n    <!-- MODAL PDF DE PRODUCTO-->\r\n    <div class=\"modal fade\" id=\"pdfProveedores\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n        <div class=\"modal-dialog modal-lg\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n            <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n                <div class=\"btn-group rounded\" role=\"group\">\r\n                    <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-warning\">\r\n                        <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                        <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-body\" id='elemento-a-exportar'>\r\n            <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n            <div class=\"row\">\r\n                <h4>Productos</h4>\r\n            </div>\r\n            <div class=\"row\">\r\n                <!--Tabla de inventario en donde se muestra el inventario general-->\r\n                <table class=\"table table-sm letras\">\r\n                    <thead class=\"thead bg-secondary text-white\">\r\n                    <tr>\r\n                        <th scope=\"col\">Nombre</th>\r\n                        <th scope=\"col\">Área</th>\r\n                        <th scope=\"col\">Proveedor</th>\r\n                        <th scope=\"col\">Precio</th>\r\n                        <th scope=\"col\">Garantía</th>\r\n                        <th scope=\"col\">Fecha Actualizado</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <ng-container *ngFor=\"let productoPDF of productosProveedores\">\r\n                        <tr>\r\n                        <td>{{ productoPDF.nombre }}</td>\r\n                        <td>{{ productoPDF.area }}</td>\r\n                        <td>{{ productoPDF.nombreProveedor }}</td>\r\n                        <td>{{ productoPDF.precio |currency }} / {{ productoPDF.unidad }}</td>\r\n                        <td>{{ productoPDF.garantia }} / {{ productoPDF.dias_garantia }} Días</td>\r\n                        <td>{{ productoPDF.fecha | date }}</td>\r\n                        </tr>\r\n                    </ng-container>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    <!-- MODAL PDF DE PRODUCTO-->\r\n","import { identifierName } from '@angular/compiler';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\nimport { ProveedoresService } from '../../../services/proveedores.service'\r\nimport * as html2pdf from 'html2pdf.js';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faListAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faList } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFileDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-proveedores',\r\n  templateUrl: './proveedores.component.html',\r\n  styleUrls: ['./proveedores.component.css']\r\n})\r\nexport class ProveedoresComponent implements OnInit {\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faListAlt = faListAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n  faTrashAlt = faTrashAlt;\r\n  faFileDownload = faFileDownload;\r\n\r\n  //VARIABLES QUE ALMACENAN DATOS DE BD\r\n  proveedores: any = [];\r\n  areas: any = [];\r\n\r\n  //VARIABLES DE FUNCIONES COMPONENT\r\n  datosInfo: any = {\r\n    id: null,\r\n    nombre: null,\r\n    area: null,\r\n    descripcion: null,\r\n    rif: null,\r\n    fecha: null,\r\n    contacto: null,\r\n    telefono: null,\r\n    direccion: null,\r\n    correo: null,\r\n  }\r\n  proveedorBorrar: any = {\r\n    id: null,\r\n    nombre: null,\r\n  }\r\n  oculto:boolean = true;\r\n\r\n  constructor(private servicioProveedores: ProveedoresService,\r\n              private servicioAreas: AreasService,\r\n              public router: Router,\r\n              private auth: AuthService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioProveedores.getProveedores().subscribe(\r\n      res => {\r\n        this.proveedores = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioAreas.getAreas().subscribe(\r\n      res => {\r\n        this.areas = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n\r\n  //FUNCION PARA BOTON DE DETALLES DE PROVEEDOR\r\n  asignarDetalles(proveedor:any){\r\n    this.datosInfo = proveedor;\r\n  }\r\n\r\n  //FUNCION PARA BOTON DE BORRAR PROVEEDOR (DATOS)\r\n  asignarBorrar(id: number, nombre:string){\r\n    this.proveedorBorrar.nombre = nombre;\r\n    this.proveedorBorrar.id = id;\r\n  }\r\n\r\n  //FUNCION PARA BORRAR PROVEEDOR\r\n  eliminarProveedor() {\r\n    this.servicioProveedores.deleteProveedor(this.proveedorBorrar.id).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE PROVEEDORES\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Proveedores.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  //FUNCION PARA NAVEGAR A ACTUALIZAR PRODUCTOS\r\n  aProductos(id: string) {\r\n    this.router.navigate([`/procura/proveedores/${id}/productos`]);\r\n  }\r\n}\r\n","\r\n<div class=\"container-fluid mt-lg-3\">\r\n    <!--BOTONES PARA GESTIONAR PROVEEDORES-->\r\n    <div class=\"row px-4\">\r\n        <div class=\"col-3\">\r\n            <h1>Proveedores</h1>\r\n        </div>\r\n        <div class=\"col-9 mt-lg-3\">\r\n            <div class=\"btn-group float-end\" role=\"group\" aria-label=\"Button group with nested dropdown\">\r\n                <button type=\"button\" class=\"btn btn-success cool-btn\" routerLink='agregar'>\r\n                    <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-primary cool-btn text-white\" routerLink='modificar'>\r\n                    <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n                </button>\r\n                <button class=\"btn btn-warning text-dark cool-btn\" data-bs-toggle=\"modal\" data-bs-target=\"#pdfProveedores\">\r\n                    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar a PDF\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"row px-4\">\r\n    <!--TABLA DE PROVEEDORES-->\r\n    <div class=\"table-responsive-md mt-lg-3\">\r\n        <table class=\"table table-sm shadow table-striped\">\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <!--FILTROS TABLA DE PROVEEDORES-->\r\n                <th scope=\"col-2\">\r\n                    <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n                </th>\r\n                <th scope=\"col-2\">\r\n                    <select #filtroArea=\"ngModel\" class=\"form-select form-select-sm\" ngModel name=\"filtroArea\">\r\n                    <option value=\"\">Area (Todas)</option>\r\n                    <option [value]=\"area.nombre\" *ngFor=\"let area of areas\">{{ area.nombre }}</option>\r\n                    </select>\r\n                </th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n                <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n                <th scope=\"col-sm-2\">Nombre</th>\r\n                <th scope=\"col-sm-1\">Área</th>\r\n                <th scope=\"col-sm-1\">Correo</th>\r\n                <th scope=\"col-sm-2\">Teléfono</th>\r\n                <th scope=\"col-sm-2\">Celular</th>\r\n                <th scope=\"col-sm-2\">Contacto</th>\r\n                <th scope=\"col-sm-2\">Ciudad</th>\r\n                <th scope=\"col-sm-3\"></th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n            <ng-container *ngFor=\"let proveedor of proveedores\">\r\n            <!--FILTROS DE TABLA DE PROVEEDORES-->\r\n                <tr\r\n                class=\"bg-light table-sm linea-tabla\"\r\n                scope=\"row\"\r\n                *ngIf=\"(\r\n                        (proveedor.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                        &&\r\n                        (proveedor.area.toLocaleLowerCase().includes(filtroArea.value.toLowerCase()) || filtroArea.value == ''))\">\r\n                    <td class=\"col-sm-2\">{{ proveedor.nombre }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.area }}</td>\r\n                    <td class=\"col-sm-2\">{{ proveedor.correo }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.telefono }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.celular }}</td>\r\n                    <td class=\"col-sm-1\">{{ proveedor.contacto }}</td>\r\n                    <td class=\"col-sm-2\">{{ proveedor.ciudad }}</td>\r\n                    <td class=\"col-sm-3\">\r\n                        <!--BOTONES DE DETALLES, MODIFICAR Y ELIMINACION-->\r\n                        <div class=\"btn-group\">\r\n                            <button type=\"button\" (click)=\"asignarDetalles(proveedor)\" class=\"btn btn-info text-white btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\">\r\n                                <fa-icon [icon]=\"faInfoCircle\"></fa-icon>  Detalles\r\n                            </button>\r\n                            <button type=\"button\" class=\"btn btn-primary btn-sm\" (click)='aProductos(proveedor.id)'>\r\n                                <fa-icon [icon]=\"faListAlt\"></fa-icon>  Productos\r\n                            </button>\r\n                            <button type=\"button\" (click)=\"asignarBorrar(proveedor.id, proveedor.nombre)\" class=\"btn btn-danger btn-sm\" data-bs-toggle=\"modal\" data-bs-target=\"#modalEliminar\">\r\n                                <fa-icon [icon]=\"faTrashAlt\"></fa-icon>  Eliminar\r\n                            </button>\r\n                        </div>\r\n                    </td>\r\n                </tr>\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL DE INFO PROVEEDOR -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n    <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n        <tbody>\r\n            <tr>\r\n                <th>ID</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.id }}</td>\r\n            </tr>\r\n            <tr>\r\n                <th>Área profesional</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.area }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.rif != null\">\r\n                <th>RIF</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.rif }} </td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.ciudad != null\">\r\n                <th>Ciudad y país</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.ciudad }} </td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.credito != null\">\r\n                <th>Opciones de crédito (días)</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.credito }} / {{ datosInfo.dias_credito }} </td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.correo != null\">\r\n                <th>Correo de contacto</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.correo }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.telefono != null\">\r\n                <th>Teléfono fijo</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.telefono }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.celular != null\">\r\n                <th>Celular de contacto</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.celular }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.contacto != null\">\r\n                <th>Nombre del Vendedor ó Contacto</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.contacto }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.direccion != null\">\r\n                <th>Dirección fiscal</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.direccion }}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.descripcion != null\">\r\n                <th>Descripcion</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.descripcion | lowercase}}</td>\r\n            </tr>\r\n            <tr *ngIf=\"datosInfo.fecha != null\">\r\n                <th>Fecha Creado</th>\r\n                <td></td>\r\n                <td>{{ datosInfo.fecha | date}}</td>\r\n            </tr>\r\n            <tr><th></th><td></td><td></td></tr>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n        </button>\r\n    </div>\r\n    </div>\r\n</div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO PROVEEDOR -->\r\n\r\n<!-- INICIO MODAL ELIMINAR PROVEEDOR -->\r\n<div class=\"modal fade\" tabindex=\"-1\" id=\"modalEliminar\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-danger\">\r\n            <h5 class=\"modal-title text-white\">Eliminar Proveedor</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n            <p>¿Estás seguro que deseas eliminar <strong>{{ proveedorBorrar.nombre }}</strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cancelar\r\n            </button>\r\n            <button (click)=\"eliminarProveedor()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">\r\n                <fa-icon [icon]=\"faTrashAlt\"></fa-icon> Eliminar\r\n            </button>\r\n        </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR PROVEEDOR -->\r\n\r\n<!-- MODAL PDF DE PROVEEDORES-->\r\n<div class=\"modal fade\" id=\"pdfProveedores\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n            <div class=\"btn-group rounded\" role=\"group\">\r\n                <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-warning\">\r\n                    <fa-icon [icon]=\"faFileDownload\"></fa-icon> Exportar\r\n                </button>\r\n                <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\" aria-label=\"Close\">\r\n                    <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar</button>\r\n            </div>\r\n        </div>\r\n        <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n            <h4>Proveedores</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n                <thead class=\"thead bg-secondary text-white\">\r\n                <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Área</th>\r\n                    <th scope=\"col\">RIF</th>\r\n                    <th scope=\"col\">Correo</th>\r\n                    <th scope=\"col\">Teléfono</th>\r\n                    <th scope=\"col\">Celular</th>\r\n                    <th scope=\"col\">Contacto</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                <ng-container *ngFor=\"let proveedoresPDF of proveedores\">\r\n                    <tr>\r\n                    <td>{{ proveedoresPDF.nombre }}</td>\r\n                    <td>{{ proveedoresPDF.area }}</td>\r\n                    <td>{{ proveedoresPDF.rif }}</td>\r\n                    <td>{{ proveedoresPDF.correo }}</td>\r\n                    <td>{{ proveedoresPDF.telefono }}</td>\r\n                    <td>{{ proveedoresPDF.celular }}</td>\r\n                    <td>{{ proveedoresPDF.contacto }}</td>\r\n                    </tr>\r\n                </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ProductosComponent } from './components/productos/productos.component';\r\nimport { ProcuraBaseComponent } from './components/procura-base/procura-base.component';\r\nimport { MenuProcuraComponent } from './components/menu-procura/menu-procura.component';\r\nimport { ProveedoresComponent } from './components/proveedores/proveedores.component';\r\nimport { AgregarProveedorComponent } from './components/agregar-proveedor/agregar-proveedor.component';\r\nimport { ModificarProveedorComponent } from './components/modificar-proveedor/modificar-proveedor.component';\r\nimport { AgregarProductoComponent } from './components/agregar-producto/agregar-producto.component';\r\nimport { ModificarProductoComponent } from './components/modificar-producto/modificar-producto.component';\r\nimport { ActualizarProductosComponent } from './components/actualizar-productos/actualizar-productos.component';\r\nimport { GestionProductosComponent } from './components/gestion-productos/gestion-productos.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: ProcuraBaseComponent,\r\n    children: [\r\n      { path: '', component: MenuProcuraComponent },\r\n      { path: 'productos', component: ProductosComponent },\r\n      { path: 'productos/agregar', component: AgregarProductoComponent },\r\n      { path: 'productos/modificar', component: ModificarProductoComponent }, \r\n      { path: 'productos/gestionar', component: GestionProductosComponent },\r\n      { path: 'proveedores', component: ProveedoresComponent },\r\n      { path: 'proveedores/agregar', component: AgregarProveedorComponent },\r\n      { path: 'proveedores/modificar', component: ModificarProveedorComponent },\r\n      { path: 'proveedores/:id/productos', component: ActualizarProductosComponent },\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ProcuraRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ProcuraRoutingModule } from './procura-routing.module';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ProcuraBaseComponent } from './components/procura-base/procura-base.component';\r\nimport { ProductosComponent } from './components/productos/productos.component';\r\nimport { MenuProcuraComponent } from './components/menu-procura/menu-procura.component';\r\nimport { ProveedoresComponent } from './components/proveedores/proveedores.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AgregarProveedorComponent } from './components/agregar-proveedor/agregar-proveedor.component';\r\nimport { ModificarProveedorComponent } from './components/modificar-proveedor/modificar-proveedor.component';\r\nimport { AgregarProductoComponent } from './components/agregar-producto/agregar-producto.component';\r\nimport { ModificarProductoComponent } from './components/modificar-producto/modificar-producto.component';\r\nimport { ActualizarProductosComponent } from './components/actualizar-productos/actualizar-productos.component';\r\nimport { GestionProductosComponent } from './components/gestion-productos/gestion-productos.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    ProcuraBaseComponent,\r\n    ProductosComponent,\r\n    MenuProcuraComponent,\r\n    ProveedoresComponent,\r\n    AgregarProveedorComponent,\r\n    ModificarProveedorComponent,\r\n    AgregarProductoComponent,\r\n    ModificarProductoComponent,\r\n    ActualizarProductosComponent,\r\n    GestionProductosComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    ProcuraRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n  ]\r\n})\r\nexport class ProcuraModule { }\r\n","import { formatDate } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductosProveedoresService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProductosProveedores() {\r\n    return this.http.get(`${this.API_URI}/productosProveedores`);\r\n  }\r\n\r\n  getProductosProveedoresElegido(id_Proveedor:string) {\r\n    return this.http.get(`${this.API_URI}/productosProveedores/${id_Proveedor}`);\r\n  }\r\n\r\n  createProductoProveedor(producto: any) {\r\n    let productoProveedorNuevo = {\r\n      nombre: producto.nombre,\r\n      id_area_producto: +producto.area,\r\n      id_unidad_producto: +producto.unidad,\r\n      garantia: producto.garantia,\r\n      dias_garantia: +producto.dias_garantia,\r\n      id_proveedor_producto: +producto.proveedor,\r\n      fecha_act: new Date().toISOString().slice(0, 19).replace('T', ' '),\r\n      precio: producto.precio,\r\n    }\r\n\r\n    return this.http.post(`${this.API_URI}/productosProveedores`, productoProveedorNuevo);\r\n  }\r\n\r\n  deleteProductoProveedor(id: string) {\r\n    return this.http.delete(`${this.API_URI}/productosProveedores/${id}`);\r\n  }\r\n\r\n  updateProductoProveedor(id: string, producto:any) {\r\n    let productoProveedorNuevo = {\r\n      nombre: producto.nombre,\r\n      id_area_producto: +producto.area,\r\n      id_unidad_producto: +producto.unidad,\r\n      garantia: producto.garantia,\r\n      dias_garantia: +producto.dias_garantia,\r\n      id_proveedor_producto: +producto.nombreProveedor,\r\n      precio: producto.precio,\r\n      }\r\n      return this.http.put(`${this.API_URI}/productosProveedores/${id}`, productoProveedorNuevo)\r\n  }\r\n\r\n  updatePrecioProducto(id: string, precioAct:number) {\r\n    let productoPrecioNuevo = {\r\n      precio: precioAct,\r\n      }\r\n      console.log(productoPrecioNuevo)\r\n      return this.http.put(`${this.API_URI}/productosProveedores/${id}`, productoPrecioNuevo)\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductosService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProductos() {\r\n    return this.http.get(`${this.API_URI}/productos`);\r\n  }\r\n\r\n  getProducto(id: string) {\r\n    return this.http.get(`${this.API_URI}/productos/${id}`);\r\n  }\r\n\r\n  createProducto(producto: any) {\r\n    let productoNuevo = {\r\n      nombre: producto.nombre,\r\n      id_unidad: +producto.unidad,\r\n    }\r\n    return this.http.post(`${this.API_URI}/productos`, productoNuevo);\r\n  }\r\n\r\n  deleteProducto(id: string) {\r\n    return this.http.delete(`${this.API_URI}/productos/${id}`);\r\n  }\r\n\r\n  updateProducto(id: string, producto: any) {\r\n    let productoModificar = {\r\n      nombre: producto.nombre,\r\n      id_unidad: +producto.unidad,\r\n      }\r\n    return this.http.put(`${this.API_URI}/productos/${id}`, productoModificar);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProveedoresService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProveedores() {\r\n    return this.http.get(`${this.API_URI}/proveedores`);\r\n  }\r\n\r\n  getProveedorElegido(id: string) {\r\n    return this.http.get(`${this.API_URI}/proveedores/${id}`);\r\n  }\r\n\r\n  createProveedor(proveedor: any) {\r\n    let proveedorNuevo = {\r\n      nombre: proveedor.nombre,\r\n      id_area: +proveedor.area,\r\n      direccion: proveedor.direccion,\r\n      correo: proveedor.correo,\r\n      credito: proveedor.credito,\r\n      dias_credito: +proveedor.dias_credito,\r\n      ciudad: proveedor.ciudad,\r\n      telefono: proveedor.telefono,\r\n      celular: proveedor.celular,\r\n      contacto: proveedor.contacto,\r\n      rif: proveedor.rif,\r\n      descripcion: proveedor.descripcion,\r\n      responsable: proveedor.responsable\r\n    }\r\n\r\n    return this.http.post(`${this.API_URI}/proveedores`, proveedorNuevo);\r\n  }\r\n\r\n  deleteProveedor(id: string) {\r\n    return this.http.delete(`${this.API_URI}/proveedores/${id}`);\r\n  }\r\n\r\n  updateProveedor(id: string, proveedor:any) {\r\n      let proveedorNuevo = {\r\n        id_proveedor: id,\r\n        nombre: proveedor.nombre,\r\n        id_area: +proveedor.area,\r\n        direccion: proveedor.direccion,\r\n        credito: proveedor.credito,\r\n        dias_credito: +proveedor.dias_credito,\r\n        ciudad: proveedor.ciudad,\r\n        correo: proveedor.correo,\r\n        telefono: proveedor.telefono,\r\n        celular: proveedor.celular,\r\n        contacto: proveedor.contacto,\r\n        rif: proveedor.rif,\r\n        descripcion: proveedor.descripcion\r\n      }\r\n      return this.http.put(`${this.API_URI}/proveedores/${id}`, proveedorNuevo)\r\n  }\r\n}\r\n"]}
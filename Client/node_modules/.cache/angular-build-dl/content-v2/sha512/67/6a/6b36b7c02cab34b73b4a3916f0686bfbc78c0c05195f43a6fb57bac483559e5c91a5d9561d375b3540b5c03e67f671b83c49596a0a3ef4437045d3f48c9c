{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/egresos/egresos.component.ts","webpack:///src/app/components/egresos/egresos.component.html","webpack:///src/app/components/ingresos/ingresos.component.ts","webpack:///src/app/components/ingresos/ingresos.component.html","webpack:///src/app/components/inventario/ingreso/ingreso.component.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.html","webpack:///src/app/components/inventario/inventario.component.ts","webpack:///src/app/components/inventario/inventario.component.html","webpack:///src/app/components/inventario/modificar/modificar.component.ts","webpack:///src/app/components/inventario/modificar/modificar.component.html","webpack:///src/app/components/inventario/reingreso/reingreso.component.ts","webpack:///src/app/components/inventario/reingreso/reingreso.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/categorias.service.ts","webpack:///src/app/services/inventario-sql.service.ts","webpack:///src/app/services/subcategorias.service.ts","webpack:///src/app/services/ubicaciones.service.ts","webpack:///src/app/services/unidades.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","EgresosComponent","idItem","inventario","findIndex","item","itemNombre","find","console","log","nombre","tipo","opciones","margin","filename","image","type","quality","html2canvas","jsPDF","unit","format","orientation","contenido","document","getElementById","from","set","save","descargarPDF","IngresosComponent","oculto","fechaHasta","dateAString","Date","date","stringFecha","getFullYear","getMonth","getUTCDate","IngresoComponent","servicioCategorias","servicioSubcategorias","servicioUbicaciones","servicioUnidades","inventarioService","itemExistenteVar","faSignInAlt","faTimesCircle","faMinusCircle","faPlusCircle","categorias","subcategorias","ubicaciones","unidades","valido","nuevosItems","cantidad","ubicacion","vencimiento","serial","precio","estado","getCategorias","subscribe","res","err","getSubcategorias","getUbicaciones","getUnidades","obtenerInventario","getInventario","indice","createItem","itemOriginal","itemInventario","itemModificar","descripcion","updateItem","cerrarModal","form","reset","n","Array","push","pop","itemInv","valor","index","target","value","agregarItem","restarItem","onSubmit","InventarioComponent","servicioInventarioSQL","faSignOutAlt","faExclamationCircle","faPencilAlt","faInfoCircle","nuevaUnidad","nuevaCategoria","codigo","nuevaUbicacion","datosInfo","categoria","subcategoria","itemBorrar","itemAveriado","idItemElegido","filtroTipo","faSearch","inventarioSQL","eliminarItem","alElegirItem","borrarForm","unidadAgregar","categoriaAgregar","ubicacionAgregar","ModificarComponent","idItemElegidoModificar","itemElegido","fecha","responsable","onModificar","ReingresoComponent","cantidadIngreso","idsReingreso","nuevoItem","i","revisarCantidad","reingresarItems","LoginComponent","NavbarComponent","faWarehouse","faUser","CategoriasService","http","API_URI","dirBackend","get","post","put","providedIn","InventarioSQLService","id_categoria","id_subcategoria","id_unidad","id_ubicacion","id_estado","SubcategoriasService","UbicacionesService","UnidadesService","unidad","environment","production","bootstrapModule","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\nimport { EgresosComponent }  from './components/egresos/egresos.component'\r\n\r\n\r\nconst routes: Routes = [\r\n\r\n  // { path: '', redirectTo: '/inventario', pathMatch: 'full'},\r\n  { path: '', redirectTo: '/inventario', pathMatch: 'full'},\r\n  { path: 'inventario', component: InventarioComponent },\r\n  { path: 'ingresos', component: IngresosComponent },\r\n  { path: 'egresos', component: EgresosComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\r\n<!-- <app-login></app-login> -->\r\n<app-navbar></app-navbar>\r\n\r\n<router-outlet></router-outlet>\r\n\r\n\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http'\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { InventarioComponent } from './components/inventario/inventario.component';\r\n\r\n// IMPORTACIONES PARA FIREBASE\r\nimport { environment } from 'src/environments/environment';\r\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\r\nimport { NavbarComponent } from './components/navbar/navbar.component';\r\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\r\n// import { EgresoComponent } from './components/inventario/egreso/egreso.component';\r\nimport { IngresosComponent } from './components/ingresos/ingresos.component';\r\n\r\nimport { InventarioSQLService } from './services/inventario-sql.service'\r\n\r\n// IMPORT DE ICONOSDE FONTAWESOME\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { EgresosComponent } from './components/egresos/egresos.component';\r\nimport { ModificarComponent } from './components/inventario/modificar/modificar.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    LoginComponent,\r\n    InventarioComponent,\r\n    IngresoComponent,\r\n    NavbarComponent,\r\n    ReingresoComponent,\r\n    // EgresoComponent,\r\n    IngresosComponent,\r\n    EgresosComponent,\r\n    ModificarComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    InventarioSQLService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\n\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Egreso } from 'src/app/models/egreso.model';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { Eliminacion } from 'src/app/models/eliminacion.model';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n@Component({\r\n  selector: 'app-egresos',\r\n  templateUrl: './egresos.component.html',\r\n  styleUrls: ['./egresos.component.css']\r\n})\r\nexport class EgresosComponent implements OnInit {\r\n\r\n  egresos: Egreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  eliminados: Eliminacion[];\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n  regresarIndice(idItem: string) {\r\n      return this.inventario.findIndex(item => item.id == idItem);\r\n\r\n}\r\n\r\n//FUNCIONES DE FILTRO DE TABLA DE EGRESOS\r\n\r\n    //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n    regresarNombre(id: string) {\r\n      var itemNombre = this.inventario.find(item => item.id == id);\r\n      console.log(itemNombre);\r\n      return itemNombre.nombre;\r\n    }\r\n\r\n    //BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n    regresarCategoria(id: string) {\r\n      return this.inventario.find(item => item.id == id).tipo;\r\n    }\r\n\r\n    //SE DESCARGA EL PDF DE EGRESOS\r\n    descargarPDF() {\r\n      const opciones = {\r\n        margin: 1,\r\n        filename: 'Egresos.pdf',\r\n        image: {type: 'jpeg', quality: 1},\r\n        html2canvas: {},\r\n        jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n      };\r\n\r\n      const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n      html2pdf()\r\n        .from(contenido)\r\n        .set(opciones)\r\n        .save();\r\n    }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n    <button data-toggle=\"modal\" data-target=\"#pdfEgresos\" class=\"btn btn-warning float-right\">Exportar a PDF</button>\r\n    <div class=\"row\">\r\n        <h1>Egresos</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <!--Tabla de inventario en donde se muestran los egresos generales-->\r\n        <table class=\"table shadow\">\r\n        <!--FILTROS DE LA TABLA DE EGRESOS-->\r\n        <thead class=\"thead bg-warning text-white\">\r\n            <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n                <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n                <option value=\"\">Categoría (Todas)</option>\r\n                <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n                </select>\r\n            </th>\r\n            <th scope=\"col\"></th>\r\n            <th scope=\"col\"><input #filtroObra=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por obra\"></th>\r\n            <th scope=\"col\"><input #filtroResponsable=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por responsable\"></th>\r\n            <th scope=\"col\"></th>\r\n            </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-warning\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Obra</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Egreso</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--NgFor que imprime egresos de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n            <ng-container *ngFor=\"let egreso of egresos\">\r\n\r\n            <tr *ngIf=\"((egreso.nombreItem.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value=='') &&\r\n                        (egreso.categoriaItem.toLocaleLowerCase().includes(filtroCategoria.value.toLocaleLowerCase()) || filtroCategoria.value=='') &&\r\n                        (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value=='') &&\r\n                        (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value==''))\"\r\n\r\n            scope=\"row\" class=\"bg-light\">\r\n                <td>{{ egreso.nombreItem }} </td>\r\n                <td>{{ egreso.categoriaItem }}</td>\r\n                <td>{{ egreso.cantidad }} {{ egreso.unidades }}</td>\r\n                <td>{{ egreso.obra }}</td>\r\n                <td>{{ egreso.reponsable }}</td>\r\n                <td>{{ egreso.fecha | date:'short' }}</td>\r\n            </tr>\r\n            <!-- *ngIf=\"(\r\n            (regresarNombre(egreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLocaleLowerCase()) || filtroNombre.value == '')\r\n\r\n            )\" -->\r\n            <!-- && -->\r\n            <!-- (regresarCategoria(egreso.idItem).includes(filtroCategoria.value)|| filtroCategoria.value == null) -->\r\n            <!-- && -->\r\n            <!-- (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value =='') -->\r\n            <!-- && -->\r\n            <!-- (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value =='') -->\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n    <div class=\"row\">\r\n        <h1>Eliminados</h1>\r\n    </div>\r\n    <div class=\"row\">\r\n        <!--Tabla de inventario en donde se muestran los ELIMINADOS generales-->\r\n        <table class=\"table shadow\">\r\n        <thead class=\"thead bg-danger text-white\">\r\n            <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Fecha de Eliminación</th>\r\n            </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--NgFor que imprime egresos de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n            <ng-container *ngFor=\"let eliminacion of eliminados\">\r\n              <!-- *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" -->\r\n            <tr\r\n            scope=\"row\" class=\"bg-light\">\r\n                <td>{{ eliminacion.nombreItem }} </td>\r\n                <td>{{ eliminacion.categoriaItem }}</td>\r\n                <td>{{ eliminacion.cantidad }} {{ eliminacion.unidades }}</td>\r\n                <td>{{ eliminacion.IdUsuario }}</td>\r\n                <td>{{ eliminacion.fecha | date:'short' }}</td>\r\n            </tr>\r\n            <!-- *ngIf=\"(\r\n            (regresarNombre(egreso.idItem).toLocaleLowerCase().includes(filtroNombre.value.toLocaleLowerCase()) || filtroNombre.value == '')\r\n\r\n            )\" -->\r\n            <!-- && -->\r\n            <!-- (regresarCategoria(egreso.idItem).includes(filtroCategoria.value)|| filtroCategoria.value == null) -->\r\n            <!-- && -->\r\n            <!-- (egreso.obra.toLocaleLowerCase().includes(filtroObra.value.toLocaleLowerCase()) || filtroObra.value =='') -->\r\n            <!-- && -->\r\n            <!-- (egreso.reponsable.toLocaleLowerCase().includes(filtroResponsable.value.toLocaleLowerCase()) || filtroResponsable.value =='') -->\r\n            </ng-container>\r\n        </tbody>\r\n    </table>\r\n    </div>\r\n</div>\r\n\r\n<!-- MODAL PDF EGRESOS -->\r\n<div class=\"modal fade\" id=\"pdfEgresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n        </div>\r\n        <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n            <h4>Egresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n            <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n                <thead class=\"thead bg-danger text-white\">\r\n                <tr>\r\n                    <th scope=\"col\">Nombre</th>\r\n                    <th scope=\"col\">Categoría</th>\r\n                    <th scope=\"col\">Cantidad</th>\r\n                    <th scope=\"col\">Obra</th>\r\n                    <th scope=\"col\">Responsable</th>\r\n                    <th scope=\"col\">Fecha Egreso</th>\r\n                </tr>\r\n                </thead>\r\n\r\n                <tbody>\r\n                <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n                <ng-container *ngFor=\"let egreso of egresos\">\r\n                    <tr>\r\n                    <td>{{ egreso.nombreItem }}</td>\r\n                    <td>{{ egreso.categoriaItem }}</td>\r\n                    <td>{{ egreso.cantidad }} {{ egreso.unidades }}</td>\r\n                    <td>{{ egreso.obra }}</td>\r\n                    <td>{{ egreso.fecha | date:'short'}}</td>\r\n                    <td>{{ egreso.reponsable }}</td>\r\n                </tr>\r\n                </ng-container>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-danger\">Exportar</button>\r\n        </div>\r\n    </div>\r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n\r\n@Component({\r\n  selector: 'app-ingresos',\r\n  templateUrl: './ingresos.component.html',\r\n  styleUrls: ['./ingresos.component.css']\r\n})\r\nexport class IngresosComponent implements OnInit {\r\n  ingresos: Ingreso[];\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  oculto = true;\r\n  fechaDesde: Date;\r\n  fechaHasta: string;\r\n\r\n  constructor() {\r\n                this.fechaHasta = this.dateAString(new Date());\r\n              }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  regresarIndice(idItem) {\r\n    return this.inventario.findIndex(item => item.id == idItem);\r\n}\r\n\r\n  //BUSQUEDA NOMBRE DE FILTRO POR NOMBRE EN TABLA DE INGRESOS\r\n  regresarNombre(id: string) {\r\n    return this.inventario.find(item => item.id == id).nombre;\r\n  }\r\n\r\n//BUSQUEDA CATEGORIA DE FILTRO POR CATEGORIA EN TABLA DE INGRESOS\r\n  regresarCategoria(id: string) {\r\n    return this.inventario.find(item => item.id == id).tipo;\r\n  }\r\n\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Ingresos.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  dateAString(date: Date) {\r\n    let stringFecha: string = \"\";\r\n    stringFecha += date.getFullYear() + '-' + (date.getMonth()+1) + '-' + date.getUTCDate();\r\n    console.log(stringFecha);\r\n    return stringFecha;\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"container\">\r\n  <button data-toggle=\"modal\" data-target=\"#pdfIngresos\" class=\"btn btn-primary float-right\">Exportar a PDF</button>\r\n  <div class=\"row\">\r\n    <h1>Ingresos</h1>\r\n  </div>\r\n  <div class=\"row\">\r\n    <!--Tabla de inventario en donde se muestra el inventario general-->\r\n      <table class=\"table shadow\">\r\n        <thead data-html2canvas-ignore class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\"><input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n            <th scope=\"col\">\r\n              <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n              </select>\r\n            </th>\r\n            <th colspan=\"4\">\r\n              <div class=\"row\">\r\n                <div class=\"col-2\">Desde:</div>\r\n                <div class=\"col\"><input [(ngModel)]=\"fechaDesde\" class=\"form-control form-control-sm\" type=\"date\" value=\"\" name=\"fechaDesde\"></div>\r\n                <div class=\"col-2\">Hasta:</div>\r\n                <div class=\"col\"><input [(ngModel)]=\"fechaHasta\" class=\"form-control form-control-sm\" type=\"date\" [value]=\"fechaHasta\" name=\"fechaHasta\"></div>\r\n              </div>\r\n            </th>\r\n            <th scope=\"col\">\r\n              <select #filtroModalidad=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroModalidad\">\r\n              <option value=\"\">Modalidad (Todas)</option>\r\n              <option value='Nuevo'>Nuevo</option>\r\n              <option value='Existente'>Existente</option>\r\n              <option value='Reingreso'>Reingreso</option>\r\n              </select>\r\n            </th>\r\n          </tr>\r\n        </thead>\r\n        <thead class=\"thead bg-primary text-white\">\r\n          <tr>\r\n            <th scope=\"col\">Nombre</th>\r\n            <th scope=\"col\">Categoría</th>\r\n            <th scope=\"col\">Cantidad</th>\r\n            <th scope=\"col\">Precio</th>\r\n            <th scope=\"col\">Fecha Ingreso</th>\r\n            <th scope=\"col\">Responsable</th>\r\n            <th scope=\"col\">Modalidad</th>\r\n          </tr>\r\n        </thead>\r\n\r\n        <tbody>\r\n        <!--FILTROS DE LA TABLA DE INGRESOS-->\r\n          <ng-container *ngFor=\"let ingreso of ingresos\">\r\n            <tr *ngIf=\"(\r\n              (ingreso.nombreItem.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n              &&\r\n              (ingreso.categoriaItem.includes(filtroCategoria.value) || filtroCategoria.value == null)\r\n              &&\r\n              (ingreso.modalidad==filtroModalidad.value || filtroModalidad.value == '')\r\n              )\" scope=\"row\" class=\"bg-light\">\r\n              <td>{{ ingreso.nombreItem }}</td>\r\n              <td>{{ ingreso.categoriaItem }}</td>\r\n              <td>{{ ingreso.cantidad }} {{ ingreso.unidades }}</td>\r\n              <td>\r\n                <div *ngIf=\"ingreso.precio != null; else sinPrecio\">\r\n                  {{ ingreso.precio | currency }}\r\n                </div>\r\n                <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                <ng-template #sinPrecio>\r\n                  N/A\r\n                </ng-template>\r\n              </td>\r\n\r\n              <td>{{ ingreso.fecha | date:'short'}}</td>\r\n              <td>{{ ingreso.IdUsuario }}</td>\r\n              <td>{{ ingreso.modalidad }}</td>\r\n            </tr>\r\n          </ng-container>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n</div>\r\n\r\n\r\n<!-- MODAL PDF -->\r\n<div class=\"modal fade\" id=\"pdfIngresos\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Ingresos</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-primary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                  <th scope=\"col\">Fecha Ingreso</th>\r\n                  <th scope=\"col\">Responsable</th>\r\n                  <th scope=\"col\">Modalidad</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <ng-container *ngFor=\"let ingreso of ingresos\">\r\n                  <tr>\r\n                    <td>{{ ingreso.nombreItem }}</td>\r\n                    <td>{{ ingreso.categoriaItem }}</td>\r\n                    <td>{{ ingreso.cantidad }} {{ ingreso.unidades }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"ingreso.precio != null; else sinPrecio\">\r\n                        {{ ingreso.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n\r\n                    <td>{{ ingreso.fecha | date:'short'}}</td>\r\n                    <td>{{ ingreso.IdUsuario }}</td>\r\n                    <td>{{ ingreso.modalidad }}</td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">Exportar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","// Imports de servicios, tipos, etc\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { Timestamp } from 'rxjs/internal/operators/timestamp';\r\nimport { ObjectUnsubscribedError } from 'rxjs';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\n\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\n\r\n// ViewChild del form de ingreso, y funcion inventarioService\r\n\r\nexport class IngresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  itemExistenteVar: boolean[] = [];\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  inventario: any = [];\r\n  nombre = \"\";\r\n  valido: boolean = true;\r\n  // cantidadItems = 1;\r\n\r\n  nuevosItems: Item[] = [\r\n    {\r\n      id: null,\r\n      nombre: null,\r\n      tipo: null,\r\n      cantidad: null,\r\n      ubicacion: null,\r\n      vencimiento: null,\r\n      serial: null,\r\n      precio: null,\r\n      unidades: null,\r\n      estado: \"Disponible\"\r\n    }\r\n  ];\r\n\r\n  constructor(private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private inventarioService: InventarioSQLService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {\r\n        this.categorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {\r\n        this.subcategorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {\r\n        this.ubicaciones = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {\r\n        this.unidades = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.obtenerInventario();\r\n  }\r\n\r\n  obtenerInventario() {\r\n    this.inventarioService.getInventario().subscribe(\r\n      res => {\r\n        this.inventario = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  onSubmit() {\r\n\r\n    let indice: number = 0;\r\n    for(var item of this.nuevosItems) {\r\n\r\n      if(!this.itemExistenteVar[indice]) {\r\n\r\n        this.inventarioService.createItem(item).subscribe(\r\n            res => {\r\n              console.log(res);\r\n              this.obtenerInventario();\r\n            },\r\n            err => {\r\n              console.log(err);\r\n            }\r\n          )\r\n        // this.ingresosService.agregarIngreso(\r\n        //   {\r\n        //     idItem: item.id,\r\n        //     nombreItem: item.nombre,\r\n        //     categoriaItem: item.tipo,\r\n        //     unidades: item.unidades,\r\n        //     fecha: new Date().toISOString(),\r\n        //     cantidad: item.cantidad,\r\n        //     precio: item.precio,\r\n        //     modalidad: \"Nuevo\"\r\n        //   }\r\n        // )\r\n      }\r\n      else if (this.itemExistenteVar[indice]) {\r\n\r\n        let itemOriginal = this.inventario.find(itemInventario => itemInventario.id == item.id);\r\n\r\n        let itemModificar = {\r\n          cantidad: itemOriginal.cantidad + item.cantidad,\r\n          precio: itemOriginal.precio + item.precio,\r\n          descripcion: this.nuevosItems[indice].descripcion\r\n        };\r\n\r\n        this.inventarioService.updateItem(itemOriginal.id, itemModificar).subscribe(\r\n          res => {\r\n            console.log(res);\r\n            this.obtenerInventario();\r\n          },\r\n          err => {\r\n            console.log(err);\r\n          }\r\n        );\r\n\r\n        // this.ingresosService.agregarIngreso(\r\n        //   {\r\n        //     idItem: itemModificar.id,\r\n        //     nombreItem: itemModificar.nombre,\r\n        //     categoriaItem: itemModificar.tipo,\r\n        //     unidades: itemModificar.unidades,\r\n        //     fecha: new Date().toISOString(),\r\n        //     cantidad: item.cantidad,\r\n        //     precio: item.precio,\r\n        //     modalidad: \"Existente\"\r\n        //   }\r\n        // )\r\n      }\r\n\r\n      indice++;\r\n    }\r\n\r\n    this.cerrarModal();\r\n\r\n    }\r\n\r\n\r\n\r\n  //Al cerrar el modal, se reinician los campos\r\n  cerrarModal() {\r\n    this.form.reset();\r\n    this.nuevosItems = [\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    ]\r\n  }\r\n\r\n  repetirNVeces(n: number) {\r\n    return[...Array(+n).keys()];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.nuevosItems.push(\r\n      {\r\n        nombre: null,\r\n        tipo: null,\r\n        cantidad: null,\r\n        ubicacion: null,\r\n        vencimiento: null,\r\n        serial: null,\r\n        precio: null,\r\n        unidades: null,\r\n        estado: \"Disponible\"\r\n      }\r\n    )\r\n  }\r\n\r\n  restarItem() {\r\n    this.nuevosItems.pop()\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.nuevosItems){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  regresarItem(id: any) {\r\n    return this.inventario.find(itemInv => itemInv.id == id);\r\n  }\r\n\r\n  actDescripcion(valor: any, index: number) {\r\n    this.nuevosItems[index].descripcion = valor.target.value;\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de ingreso de producto-->\r\n    <div class=\"modal-header bg-success text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\r\n      <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" (click)='cerrarModal()' aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\" *ngFor=\"let item of nuevosItems; let i = index\" [ngClass]=\"{'color-contraste': i%2 != 0}\">\r\n          <h3>Item {{i+1}}</h3>\r\n          <div class=\"form-check\">\r\n            <input #itemExistente=\"ngModel\" class=\"form-check-input\" type=\"checkbox\" [(ngModel)]='itemExistenteVar[i]' [name]=\"'checkboxExistente' + [i]\" >\r\n            <label class=\"form-check-label\" for=\"defaultCheck1\">\r\n              <strong>Item Existente</strong>\r\n            </label>\r\n          </div>\r\n            <!--Nombre de producto-->\r\n            <div *ngIf=\"!itemExistenteVar[i]\" class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                  <label>Nombre</label>\r\n                  <input #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].nombre\" [name]=\"'nombre' + [i]\" class=\"form-control\">\r\n                  <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Ingrese un nombre.</small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-control\" [(ngModel)]=\"nuevosItems[i].categoria\" [name]=\"'cat' + [i]\">\r\n                  <option *ngFor=\"let categoria of categorias\" value=\"{{ categoria.id }}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n                <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" class=\"form-control\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                  <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.id }}\">{{ subcategoria.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-2\">\r\n                <label>Serial</label>\r\n                <input type=\"text\" [(ngModel)]=\"nuevosItems[i].serial\" [name]=\"'serial' + [i]\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n            </div>\r\n\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    onkeypress=\"return event.charCode >= 46\"\r\n                    min=\"1\"\r\n                    #cantidad=\"ngModel\"\r\n                    required\r\n                    type=\"number\"\r\n                    [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                    [name]=\"'cantidad' + [i]\"\r\n                    class=\"form-control\"\r\n                    (keyup)='revisarCantidad()'>\r\n                  <select #unidadX=\"ngModel\" required type=\"text\" placeholder=\"0\" [(ngModel)]=\"nuevosItems[i].unidades\" [name]=\"'unidades' + [i]\" class=\"form-control\">\r\n                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.id }}\">{{ unidad.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n                <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n                <small *ngIf=\"!unidadX.valid && unidadX.touched\" class=\"text-danger\">Ingrese una unidad.</small>\r\n              </div>\r\n              <div class=\"col-5\">\r\n                <label>Ubicación en almacén</label>\r\n                <select type=\"text\" [(ngModel)]=\"nuevosItems[i].ubicacion\" [name]=\"'ubicacion' + [i]\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                  <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.id }}\">{{ ubicacion.nombre }}</option>\r\n                </select>\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-3\">\r\n                <div class=\"form-group\">\r\n                  <label>Vencimiento</label>\r\n                  <input class=\"form-control\" disabled [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n              </div>\r\n              </div>\r\n              <div class=\"col-9\">\r\n                <!--Condicion para colocar fecha de vencimiento (Producto o consumible unicamente)-->\r\n                <div class=\"form-group\">\r\n                  <label>Descripción</label>\r\n                  <input class=\"form-control\" >\r\n              </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            <!-- INICIO DEL FORM DE ITEM EXISTENTE -->\r\n            <div *ngIf=\"itemExistenteVar[i]\">\r\n            <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-3\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select #cat=\"ngModel\" #cat[i]=\"ngModel\" required class=\"form-control\" [(ngModel)]=\"nuevosItems[i].tipo\" [name]=\"'cat' + [i]\">\r\n                  <ng-container *ngFor=\"let categoria of categorias\">\r\n                    <option value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </ng-container>\r\n\r\n                </select>\r\n                <small *ngIf=\"!cat.valid && cat.touched\" class=\"text-danger\">Ingrese una categoria.</small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label for=\"exampleFormControlSelect1\">Subcategoría</label>\r\n                <select #subcat=\"ngModel\" #subcat[i]=\"ngModel\" class=\"form-control\" [(ngModel)]=\"nuevosItems[i].subcategoria\" [name]=\"'subcat' + [i]\">\r\n                  <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{ subcategoria.nombre }}\">{{ subcategoria.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-6\">\r\n                <label>Nombre</label>\r\n                <select #nombre=\"ngModel\" required type=\"text\" [(ngModel)]=\"nuevosItems[i].id\" [name]=\"'nombre' + [i]\" class=\"form-control\">\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <option *ngIf=\"item.categoria == cat.value && item.subcategoria == subcat.value\" value=\"{{ item.id }}\">{{ item.nombre }}</option>\r\n                  </ng-container>\r\n                </select>\r\n                  <small *ngIf=\"!nombre.valid && nombre.touched\" class=\"text-danger\">Seleccione un nombre.</small>\r\n              </div>\r\n            </div>\r\n              <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad a Ingresar</label>\r\n                <div class=\"input-group\">\r\n                  <input\r\n                    onkeypress=\"return event.charCode >= 46\"\r\n                    min=\"1\"\r\n                    #cantidad=\"ngModel\"\r\n                    required\r\n                    type=\"number\"\r\n                    [(ngModel)]=\"nuevosItems[i].cantidad\"\r\n                    [name]=\"'cantidad' + [i]\"\r\n                    class=\"form-control\"\r\n                    (keyup)='revisarCantidad()'>\r\n                    <input *ngIf=\"nombre.value != undefined\" [placeholder]=\"regresarItem(nombre.value).unidades\" disabled type=\"text\" ngModel [name]=\"'unidades' + [i]\" class=\"form-control\">\r\n                </div>\r\n                <small *ngIf=\"!cantidad.valid && cantidad.touched\" class=\"text-danger\">Ingrese una cantidad.<br></small>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input onkeypress=\"return event.charCode >= 46\" min=\"0\"  type=\"number\" [(ngModel)]=\"nuevosItems[i].precio\" [name]=\"'precio' + [i]\" class=\"form-control\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                  <label>Vencimiento</label>\r\n                  <input class=\"form-control\" disabled [(ngModel)]=\"nuevosItems[i].vencimiento\" [name]=\"'vencimiento' + [i]\" type=\"date\">\r\n              </div>\r\n\r\n            </div>\r\n            <div class=\"row\">\r\n              <div class=\"col-12\">\r\n                <div class=\"form-group\">\r\n                  <label>Descripción</label>\r\n                  <input\r\n                    class=\"form-control\"\r\n                    [ngModel]=\"((nombre.value != undefined) ? regresarItem(nombre.value).descripcion : '')\"\r\n                    [name]=\"'descripcion' + [i]\"\r\n                    (keyup)=\"actDescripcion($event, i)\">\r\n              </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n      </div>\r\n\r\n    <!--Footer de Modal con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n            <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n          </button>\r\n          <button type=\"button\" [hidden]=\"nuevosItems.length == 1\" class=\"btn btn-secondary\" [disabled]=\"nuevosItems.length == 1\" (click)=\"restarItem()\">\r\n            <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n          </button>\r\n        </div>\r\n        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\" data-dismiss=\"modal\">\r\n          <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n        </button>\r\n        <!-- !f.valid significa cuando el form no sea valido -->\r\n        <button [disabled]='!f.valid || !valido' data-dismiss=\"modal\" type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">\r\n          <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n      </button>\r\n    </div>\r\n    </form>\r\n\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../models/item.model';\r\nimport { NgForm } from '@angular/forms';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport * as html2pdf from 'html2pdf.js';\r\n\r\n// IMPORTS DE BD\r\nimport { InventarioSQLService } from '../../services/inventario-sql.service';\r\nimport { CategoriasService } from '../../services/categorias.service';\r\nimport { UbicacionesService } from '../../services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { Eliminacion } from 'src/app/models/eliminacion.model';\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faSignOutAlt = faSignOutAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n  faPencilAlt = faPencilAlt;\r\n  faPlusCircle = faPlusCircle;\r\n  faInfoCircle = faInfoCircle;\r\n\r\n  oculto = true;\r\n\r\n  nuevaUnidad : any = {\r\n    nombre:null,\r\n  };\r\n\r\n  nuevaCategoria : Categoria = {\r\n    nombre:null,\r\n    codigo:null,\r\n  };\r\n\r\n  nuevaUbicacion : any = {\r\n    nombre:null,\r\n  };\r\n\r\n  datosInfo: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    unidades: null,\r\n    ubicacion: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n  }\r\n\r\n  itemBorrar = {\r\n    id: null,\r\n    nombre: null\r\n  }\r\n\r\n  //VARIABLE PARA MODEL DE AVERIA\r\n  itemAveriado: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    unidades: null,\r\n    ubicacion: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n  };\r\n\r\n  //VARIABLE PARA HACER LAS BUSQUEDA POR ID DEL ITEM DE AVERIA\r\n  idItemElegido:string = null;\r\n\r\n  filtroTipo: string = \"\";\r\n  faSearch = faSearch;\r\n\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {\r\n        this.inventarioSQL = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {\r\n        this.categorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {\r\n        this.subcategorias = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {\r\n        this.ubicaciones = res;\r\n      },\r\n      err => console.log(err)\r\n    );\r\n  }\r\n\r\n  //RECIBE EL ITEM DE LA FILA, E IMPRIME DICHOS DATOS EN UNA VARIABLE\r\n  asignarDetalles(item: Item) {\r\n    this.datosInfo = item;\r\n  }\r\n\r\n  // ASIGNA LOS DATOS DEL ITEM A BORRAR EN LA VARIABLE itemBorrar\r\n  asignarBorrar(id, nombre) {\r\n    this.itemBorrar.id = id;\r\n    this.itemBorrar.nombre = nombre;\r\n  }\r\n  // ELIMINA EL ITEM SELECCIONADO DE LA BD CUANDO EL USUARIO ACEPTA EN EL MODAL\r\n  eliminarItem() {\r\n    /*\r\n    this.servicioInventario.eliminarItem(this.itemBorrar.id);\r\n    var eliminacion: Eliminacion = {\r\n      idItem: this.itemBorrar.id,\r\n      nombreItem: this.itemBorrar.nombre,\r\n      categoriaItem: this.inventario.find(item => item.id == this.itemBorrar.id).tipo,\r\n      unidades: this.inventario.find(item => item.id == this.itemBorrar.id).unidades,\r\n      fecha: new Date().toISOString(),\r\n      cantidad: this.inventario.find(item => item.id == this.itemBorrar.id).cantidad\r\n    }\r\n    this.servicioEliminados.agregarEliminado(eliminacion);*/\r\n  }\r\n\r\n  //BUSCA ITEM PARA REPORTAR AVERIA\r\n  regresarIndice() {\r\n    // return this.inventario.findIndex(item => item.id == this.idItemElegido);\r\n}\r\n  regresarItem(id: string) {\r\n    // return this.inventario.find(item => item.id == id);\r\n}\r\n\r\n  //CREA ITEM TEMPORAL EN DONDE COLOCARA NUEVOS ESTADOS\r\n  alElegirItem(idItem: string) {\r\n  // this.itemAveriado = this.inventario.find(item => item.id == idItem);\r\n}\r\n\r\n  reportarAveria() {\r\n    /* this.itemAveriado.estado = \"Dañado\";\r\n    this.servicioInventario.editarItem(this.itemAveriado);\r\n    //SE BORRAN LOS CAMPOS DEL FORMULARIO\r\n    this.form.reset();\r\n  }\r\n  reportarReparado() {\r\n    this.itemAveriado.estado = \"Disponible\";\r\n    this.servicioInventario.editarItem(this.itemAveriado);\r\n    //SE BORRAN LOS CAMPOS DEL FORMULARIO\r\n    this.form.reset();*/\r\n  }\r\n\r\n  //BORRA FORMMULARIO DE AVERIA\r\n  borrarForm() {\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA DESCARGAR PDF DE INVENTARIO\r\n  descargarPDF() {\r\n    this.oculto = false;\r\n    const opciones = {\r\n      margin: 1,\r\n      filename: 'Inventario.pdf',\r\n      image: {type: 'jpeg', quality: 1},\r\n      html2canvas: {},\r\n      jsPDF: {unit: 'cm', format: 'letter', orientation: 'portrait'}\r\n    };\r\n\r\n    const contenido: Element = document.getElementById('elemento-a-exportar');\r\n\r\n    html2pdf()\r\n      .from(contenido)\r\n      .set(opciones)\r\n      .save();\r\n\r\n      this.oculto = true;\r\n  }\r\n\r\n  unidadAgregar(){\r\n    /*if (this.nuevaUnidad.nombre!=null && this.nuevaUnidad.nombre!=\"\"){\r\n      this.servicioUnidades.agregarUnidad(this.nuevaUnidad);\r\n    }*/\r\n  }\r\n\r\n  categoriaAgregar(){\r\n    /*if (this.nuevaCategoria.nombre!=null && this.nuevaCategoria.nombre!=\"\"){\r\n    this.servicioCategorias.agregarCategoria(this.nuevaCategoria);\r\n    }*/\r\n  }\r\n\r\n  ubicacionAgregar(){\r\n    /*if (this.nuevaUbicacion.nombre!=null && this.nuevaUbicacion.nombre!=\"\"){\r\n    this.servicioUbicaciones.agregarUbicacion(this.nuevaUbicacion);\r\n    }*/\r\n  }\r\n}\r\n","<div class=\"container-fluid\">\r\n<!--Botones de ingreso y reingreso de productos-->\r\n<div class=\"row\">\r\n  <div class=\"col-3\">\r\n    <h1>Inventario</h1>\r\n  </div>\r\n  <div class=\"col-9\">\r\n    <div class=\"btn-group float-right\">\r\n      <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">\r\n        <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ingreso\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">\r\n        <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Reingreso\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-warning\" data-toggle=\"modal\" data-target=\"#modalEgreso\">\r\n        <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egreso\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#modalModificar\">\r\n        <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-danger\" data-toggle=\"modal\" data-target=\"#modalReporte\">\r\n        <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar\r\n      </button>\r\n      <button data-toggle=\"modal\" data-target=\"#pdfInventario\" class=\"btn btn-primary float-right\">\r\n        Exportar a PDF\r\n      </button>\r\n      <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalAgregar\">\r\n        <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<div class=\"row\">\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n    <table class=\"table table-sm shadow\">\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n          <th scope=\"col\">\r\n            <input #filtroNombre=\"ngModel\" class=\"w-75 form-control form-control-sm\" ngModel type=\"text\" placeholder=\"Filtro por nombre\">\r\n          </th>\r\n\r\n          <th scope=\"col\">\r\n            <select #filtroCategoria=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroCategoria\">\r\n              <option value=\"\">Categoría (Todas)</option>\r\n              <option *ngFor=\"let cat of categorias\" [value]=\"cat.nombre\">{{ cat.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\">\r\n            <select #filtroUbicacion=\"ngModel\" class=\"form-control form-control-sm\" ngModel name=\"filtroUbicacion\">\r\n              <option value=\"\">Ubicación (Todas)</option>\r\n              <option *ngFor=\"let ubicacion of ubicaciones\" [value]=\"ubicacion.nombre\">{{ ubicacion.nombre }}</option>\r\n            </select>\r\n          </th>\r\n          <th scope=\"col\"></th>\r\n          <th scope=\"col\"></th>\r\n        </tr>\r\n      </thead>\r\n      <thead class=\"thead-dark\">\r\n        <tr>\r\n          <th scope=\"col\">Nombre</th>\r\n          <th scope=\"col\">Categoría</th>\r\n          <th scope=\"col\">Subcategoría</th>\r\n          <th scope=\"col\">Cantidad</th>\r\n          <th scope=\"col\">Ubicación</th>\r\n          <th scope=\"col\">Estado</th>\r\n          <th></th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n      <!-- *ngIf=\"(item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase() || item.tipo == filtroCategoria.value)) || filtroNombre.value == ''\" -->\r\n\r\n      <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n        <ng-container *ngFor=\"let item of inventarioSQL\">\r\n          <ng-container *ngIf=\"item.cantidad != 0\">\r\n            <tr\r\n              class=\"table-sm\"\r\n              scope=\"row\"\r\n              *ngIf=\"(\r\n                (item.nombre.toLocaleLowerCase().includes(filtroNombre.value.toLowerCase()) || filtroNombre.value == '')\r\n                &&\r\n                (item.categoria == filtroCategoria.value || filtroCategoria.value == '')\r\n                &&\r\n                (item.ubicacion == filtroUbicacion.value || filtroUbicacion.value == '')\r\n              )\"\r\n            class=\"bg-light\">\r\n            <td>{{ item.nombre | titlecase }}</td>\r\n            <td>{{ item.categoria }}</td>\r\n            <td>{{ item.subcategoria }}</td>\r\n            <td><span [ngClass]=\"{'text-danger': item.estado=='En Obra'}\">{{ item.cantidad }} {{ item.unidades }}</span></td>\r\n            <td>{{ item.ubicacion }}</td>\r\n            <td [ngClass]=\"{'text-success': item.estado=='Disponible',\r\n                            'text-danger': item.estado=='Dañado',\r\n                            'text-info': item.estado=='En Obra'}\">{{ item.estado }}</td>\r\n            <td>\r\n              <div class=\"btn-group\">\r\n                <button (click)=\"asignarDetalles(item)\" type=\"button\" class=\"btn btn-info btn-sm\" data-toggle=\"modal\" data-target=\"#modalInfo\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Detalles\r\n              </button>\r\n              <button (click)=\"asignarBorrar(item.id, item.nombre)\" type=\"button\" class=\"btn btn-danger btn-sm\" data-toggle=\"modal\" data-target=\"#modalEliminar\">\r\n                <fa-icon [icon]=\"faInfoCircle\"></fa-icon> Eliminar\r\n              </button>\r\n              </div>\r\n            </td>\r\n          </tr>\r\n          </ng-container>\r\n\r\n        </ng-container>\r\n      </tbody>\r\n  </table>\r\n</div>\r\n<!-- INICIO MODAL ELIMINAR -->\r\n<div class=\"modal\" tabindex=\"-1\" id=\"modalEliminar\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-danger\">\r\n        <h5 class=\"modal-title text-white\">Eliminar Item</h5>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <p>¿Estás seguro que deseas eliminar <strong>{{ itemBorrar.nombre }}</strong>?. <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cancelar</button>\r\n        <button (click)=\"eliminarItem()\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN MODAL ELIMINAR -->\r\n<!-- MODAL DE INFO -->\r\n<div class=\"modal fade\" id=\"modalInfo\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header bg-info\">\r\n        <h5 class=\"modal-title text-white\" id=\"exampleModalLabel\"><strong>{{ datosInfo.nombre }}</strong></h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\">\r\n        <table class=\"table table-sm\">\r\n          <tbody>\r\n              <tr>\r\n                <th>ID</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.id }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.serial != null\">\r\n                <th>Serial</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.serial }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Categoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.categoria }}</td>\r\n              </tr>\r\n              <tr>\r\n              <tr>\r\n                <th>Subcategoría</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.subcategoria }}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Cantidad</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.cantidad }} {{datosInfo.unidades }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.ubicacion != null\">\r\n                <th>Ubicación</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.ubicacion }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.estado != null\">\r\n                <th>Estado</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.estado }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.vencimiento != null\">\r\n                <th>Vencimiento</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.vencimiento }}</td>\r\n              </tr>\r\n              <tr *ngIf=\"datosInfo.precio != null\">\r\n                <th>Precio</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.precio |currency}}</td>\r\n              </tr>\r\n              <tr>\r\n                <th>Descripcion</th>\r\n                  <td></td>\r\n                  <td>{{ datosInfo.descripcion | lowercase}}</td>\r\n              </tr>\r\n              <tr><th></th><td></td><td></td></tr>\r\n          </tbody>\r\n      </table>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- FIN DEL MODAL INFO -->\r\n  </div>\r\n\r\n<!--MODAL DE REPORTE DE PRODUCTO-->\r\n<div class=\"modal fade\" id=\"modalReporte\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n  <div class=\"modal-content\">\r\n\r\n      <div class=\"modal-header bg-danger text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reporte</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n      <form #f=\"ngForm\">\r\n          <h3>Item</h3>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                  <label>Categoría</label>\r\n                    <select class=\"form-control\" ngModel name=\"selectCategoriaReporte\" #selectCategoriaReporte=\"ngModel\">\r\n                      <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                    </select>\r\n              </div>\r\n              <div class=\"col\">\r\n                  <label>Subcategoría</label>\r\n                    <select class=\"form-control\" ngModel name=\"selectSubcategoriaReporte\" #selectSubcategoriaReporte=\"ngModel\">\r\n                      <option value=\"\">Todas</option>\r\n                      <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                    </select>\r\n              </div>\r\n              <div class=\"col\">\r\n                  <label>Item</label>\r\n                  <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class='form-control' ngModel name=\"id\">\r\n                    <!--NG FOR QUE COLOCA LA LISTA DE INVENTARIO-->\r\n                    <ng-container *ngFor=\"let item of inventarioSQL\">\r\n                      <!--NG IF QUE FILTRA LA LISTA FINAL POR EL TIPO-->\r\n                      <ng-container *ngIf=\"item.categoria == selectCategoriaReporte.value && item.estado != 'En Obra' && (item.subcategoria == selectSubcategoriaReporte.value || selectSubcategoriaReporte.value == '')\">\r\n                        <option value='{{item.id}}'>{{ item.nombre }}</option>\r\n                      </ng-container>\r\n                    </ng-container>\r\n                  </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        <!--Footer de Modal de reportar, con botones de cerrar e ingresar-->\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n\r\n            <!-- <button data-dismiss=\"modal\" *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Dañado'\" type=\"button\" class=\"btn btn-primary\"  (click)=\"reportarReparado()\">\r\n              <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Reparado\r\n            </button>\r\n            <button *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Disponible'\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\" (click)=\"reportarAveria()\">\r\n              <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Dañado\r\n            </button> -->\r\n\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- MODAL PDF DE INVENTARIO-->\r\n<div class=\"modal fade\" id=\"pdfInventario\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n    <div class=\"modal-content\">\r\n      <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Exportar a PDF</h5>\r\n        <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div class=\"modal-body\" id='elemento-a-exportar'>\r\n        <!-- <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 75px; width: 100%; margin: 0; padding: 0\"> -->\r\n        <div class=\"row\">\r\n          <h4>Inventario</h4>\r\n        </div>\r\n        <div class=\"row\">\r\n          <!--Tabla de inventario en donde se muestra el inventario general-->\r\n            <table class=\"table table-sm letras\">\r\n              <thead class=\"thead bg-secondary text-white\">\r\n                <tr>\r\n                  <th scope=\"col\">Nombre</th>\r\n                  <th scope=\"col\">Categoría</th>\r\n                  <th scope=\"col\">Cantidad</th>\r\n                  <th scope=\"col\">Precio</th>\r\n                  <th scope=\"col\">Fecha Ingreso</th>\r\n                </tr>\r\n              </thead>\r\n\r\n              <tbody>\r\n                <ng-container *ngFor=\"let itemPDF of inventarioSQL\">\r\n                  <tr>\r\n                    <td>{{ itemPDF.nombre }}</td>\r\n                    <td>{{ itemPDF.tipo }}</td>\r\n                    <td>{{ itemPDF.cantidad }} {{ itemPDF.unidades }}</td>\r\n                    <td>\r\n                      <div *ngIf=\"itemPDF.precio != null; else sinPrecio\">\r\n                        {{ itemPDF.precio | currency }}\r\n                      </div>\r\n                      <!-- NG-TEMPLATE SE USA PARA ENGLOBAR EL BLOQUE ELSE DE UN NGIF -->\r\n                      <ng-template #sinPrecio>\r\n                        N/A\r\n                      </ng-template>\r\n                    </td>\r\n\r\n                    <td>{{ itemPDF.fecha | date:'short'}}</td>\r\n                  </tr>\r\n                </ng-container>\r\n              </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n      <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n        <button type=\"button\" (click)=\"descargarPDF()\" class=\"btn btn-primary\">Exportar</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n<!-- Modal Ingreso-->\r\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-ingreso></app-ingreso>\r\n</div>\r\n<!-- Modal Reingreso-->\r\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <!-- <app-reingreso></app-reingreso> -->\r\n</div>\r\n<!-- Modal Egreso-->\r\n<div class=\"modal fade\" id=\"modalEgreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <!-- <app-egreso></app-egreso> -->\r\n</div><!-- Modal Modificar-->\r\n<div class=\"modal fade\" id=\"modalModificar\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <!-- <app-modificar></app-modificar> -->\r\n</div>\r\n\r\n<!--MODAL DE AGREGAR ADMINISTRADOR-->\r\n<div class=\"modal fade\" id=\"modalAgregar\" tabindex=\"-1\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog\">\r\n  <div class=\"modal-content\">\r\n\r\n      <div class=\"modal-header bg-danger text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Agregar</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n\r\n      <div class=\"modal-body\">\r\n      <form #f=\"ngForm\">\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <h5>Agregar Unidad</h5>\r\n                  <label>Nombre:</label>\r\n                  <input #nombreUnidad=\"ngModel\" [(ngModel)]='nuevaUnidad.nombre' name=\"nombreUnidadNueva\" required type=\"text\" class=\"form-control\">\r\n              </div>\r\n              <div class=\"col\">\r\n                <h5>Agregar Categoría</h5>\r\n                  <label>Nombre:</label>\r\n                  <input #nombreCategoria=\"ngModel\" [(ngModel)]='nuevaCategoria.nombre' name=\"nombreCategoriaNueva\" required type=\"text\" class=\"form-control\">\r\n              </div>\r\n              <div class=\"col\">\r\n                <h5>Agregar Ubicación</h5>\r\n                  <label>Nombre:</label>\r\n                  <input #nombreUbicacion=\"ngModel\" [(ngModel)]='nuevaUbicacion.nombre' name=\"nombreUbicacionNueva\" required type=\"text\" class=\"form-control\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"unidadAgregar()\">\r\n                  <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar Unidad\r\n                </button>\r\n              </div>\r\n              <div class=\"col\">\r\n                <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"categoriaAgregar()\">\r\n                  <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar Categoría\r\n                </button>\r\n              </div>\r\n              <div class=\"col\">\r\n                <button data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"ubicacionAgregar()\">\r\n                  <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Agregar Ubicación\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n        <div class=\"modal-footer\">\r\n            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n              <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n        </div>\r\n\r\n      </form>\r\n    </div>\r\n  </div>\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPencilAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-modificar',\r\n  templateUrl: './modificar.component.html',\r\n  styleUrls: ['./modificar.component.css']\r\n})\r\nexport class ModificarComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faPencilAlt = faPencilAlt;\r\n  faTimesCircle = faTimesCircle;\r\n\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n  inventario: Item[];\r\n  idItemElegidoModificar: string = null;\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    tipo: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n  alElegirItem(idItem: string) {\r\n    this.itemElegido = this.inventario.find(item => item.id == idItem);\r\n  }\r\n\r\n  //ENCUENTRA EL ID DEL ITEM A MODIFICAR\r\n  regresarIndice() {\r\n    return this.inventario.findIndex(item => item.id == this.idItemElegidoModificar);\r\n  }\r\n\r\n  onModificar() {\r\n    // this.servicioInventario.editarItem(this.itemElegido);\r\n    this.form.reset();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"modal-header bg-info text-white\">\r\n        <h5 class=\"modal-title\" id=\"exampleModalLabel\">Modificar</h5>\r\n        <button type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n        <div class=\"modal-body\">\r\n            <div class=\"form-group\">\r\n              <h5>Seleccione el item a modificar:</h5>\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                        <label>Categoría</label>\r\n                        <select class=\"form-control\" ngModel name=\"selectTipoModificar\" #selectTipoModificar=\"ngModel\">\r\n                          <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                        </select>\r\n                    </div>\r\n                    <div class=\"col\">\r\n                        <label>Item</label>\r\n                        <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" class=\"form-control\" ngModel name=\"item\">\r\n                          <ng-container *ngFor=\"let item of inventario\">\r\n                            <option *ngIf=\"item.tipo == selectTipoModificar.value\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                          </ng-container>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <hr>\r\n                <!--LUGAR DEL FORMULARIO PARA COLOCAR DATOS NUEVOS-->\r\n                <div class=\"form-group\">\r\n                    <h5>Modifique los datos que desee:</h5>\r\n                    <div class=\"row\">\r\n                        <div class=\"col-3\">\r\n                            <label>Nombre</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.nombre\" name=\"nombre\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col-3\">\r\n                            <label>Categoría</label>\r\n                            <select required class=\"form-control\" [(ngModel)]=\"itemElegido.tipo\" name=\"categoria\">\r\n                                <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                            <label>Cantidad y Unidades</label>\r\n                            <div class=\"input-group\">\r\n                                <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" onkeypress=\"return event.charCode > 48\" min=\"1\" [(ngModel)]=\"itemElegido.cantidad\" required type=\"number\" name=\"cantidad\" class=\"form-control\">\r\n                                <select [disabled]=\"itemElegido.tipo == 'Herramienta'\" required type=\"text\" placeholder=\"0\"  name=\"unidades\" [(ngModel)]=\"itemElegido.unidades\" class=\"form-control\">\r\n                                <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"col-2\">\r\n                            <label>Ubicación</label>\r\n                            <select type=\"text\"  name=\"ubicacion\" [(ngModel)]=\"itemElegido.ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                                <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"form-group\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col\">\r\n                            <label>Serial</label>\r\n                            <input required type=\"text\" [(ngModel)]=\"itemElegido.serial\" name=\"serial\" class=\"form-control\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Fecha de Vencimiento</label>\r\n                            <input [disabled]=\"itemElegido.tipo == 'Herramienta'\" class=\"form-control\" [(ngModel)]=\"itemElegido.vencimiento\" name=\"vencimiento\" type=\"date\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Estado</label>\r\n                            <select type=\"text\" [(ngModel)]=\"itemElegido.estado\" name=\"estado\" class=\"form-control\">\r\n                                <option>Disponible</option>\r\n                                <option>En Obra</option>\r\n                                <option>Dañado</option>\r\n                                <option>Agotado</option>\r\n                            </select>\r\n                        </div>\r\n                        <div class=\"col\">\r\n                            <label>Precio</label>\r\n                            <input onkeypress=\"return event.charCode > 48\" min=\"0\" type=\"number\" [(ngModel)]=\"itemElegido.precio\" name=\"precio\" class=\"form-control\">\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        </div>\r\n\r\n        <!--Footer de Modal con botones de cerrar y modificar-->\r\n        <div class=\"modal-footer\">\r\n            <button (click)=\"f.reset()\" type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">\r\n                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n            </button>\r\n            <button (click)=\"onModificar()\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-info\">\r\n                <fa-icon [icon]=\"faPencilAlt\"></fa-icon> Modificar\r\n            </button>\r\n        </div>\r\n\r\n    </form>\r\n</div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Ingreso } from 'src/app/models/ingreso.model';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faMinusCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\n//Se declaran las variables a utilizar en reingreso\r\nexport class ReingresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faSignInAlt = faSignInAlt;\r\n  faTimesCircle = faTimesCircle;\r\n  faMinusCircle = faMinusCircle;\r\n  faPlusCircle = faPlusCircle;\r\n\r\n  inventario: Item[];\r\n  categorias: Categoria[];\r\n  // selectTipo: string;\r\n  cantidadIngreso: number = 0;\r\n  valido: boolean = true;\r\n\r\n  idsReingreso = [\r\n    {id: \"\", cantidad: 1}\r\n  ];\r\n\r\n  constructor()\r\n              { }\r\n\r\n\r\n//Se obtiene inventario en orden alfabetico, y se imprime en la tabla//\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  regresarIndice(indice: number) {\r\n    return this.inventario.findIndex(item => item.id == this.idsReingreso[indice].id);\r\n}\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  reingresarItems() {\r\n    for(let item of this.idsReingreso) {\r\n      let nuevoItem = this.inventario.find(itemInv => itemInv.id == item.id);\r\n      // let nuevoItem = this.inventario[this.inventario.findIndex(itemInv => itemInv.id == item.id)];\r\n      if(nuevoItem.tipo != \"Herramienta\") {\r\n        nuevoItem.cantidad += item.cantidad;\r\n      }\r\n      nuevoItem.estado = \"Disponible\"\r\n      //this.servicioInventario.editarItem(nuevoItem);\r\n\r\n      // this.ingresosService.agregarIngreso(\r\n      //   {\r\n      //     idItem: nuevoItem.id,\r\n      //     nombreItem: nuevoItem.nombre,\r\n      //     categoriaItem: nuevoItem.tipo,\r\n      //     unidades: nuevoItem.unidades,\r\n      //     fecha: new Date().toISOString(),\r\n      //     cantidad: nuevoItem.cantidad,\r\n      //     modalidad: \"Reingreso\",\r\n      //     precio: null\r\n      //   }\r\n      // )\r\n    }\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n  }\r\n\r\n\r\n\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.idsReingreso = [{id: \"\", cantidad: 1}];\r\n  }\r\n\r\n  agregarItem() {\r\n    this.idsReingreso.push({id: \"\", cantidad: 1});\r\n  }\r\n\r\n  restarItem() {\r\n    this.idsReingreso.pop();\r\n  }\r\n\r\n  revisarCantidad() {\r\n    for(let item of this.idsReingreso){\r\n      if(item.cantidad <= 0) {\r\n        this.valido = false;\r\n        return\r\n      }\r\n    }\r\n    this.valido = true;\r\n  }\r\n\r\n  restaurarValor(i: number) {\r\n    this.idsReingreso[i].cantidad = 1;\r\n    this.revisarCantidad();\r\n  }\r\n\r\n}\r\n\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de reingreso de producto-->\r\n\r\n    <div class=\"modal-header bg-primary text-white\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\r\n      <button (click)=\"borrarForm()\" type=\"button\" class=\"close text-white\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!--Filtro por Tipo de reingreso-->\r\n\r\n    <form #f=\"ngForm\">\r\n      <div *ngFor=\"let item of idsReingreso; let i=index\" class=\"modal-body\">\r\n        <h3>Item {{i+1}}</h3>\r\n        <div class=\"form-group\">\r\n          <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <label>Categoría</label>\r\n                  <select (change)=\"restaurarValor(i)\" required class=\"form-control\" ngModel [name]=\"'selectTipo'+[i]\" #selectTipo=\"ngModel\">\r\n                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                  </select>\r\n            </div>\r\n            <!--Filtro por Item de reingreso-->\r\n            <div class=\"col-3\">\r\n                <label>Item</label>\r\n                <select required class=\"form-control\" [(ngModel)]=\"idsReingreso[i].id\" [name]=\"'selectId'+[i]\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                    <ng-container *ngIf=\"item.tipo == selectTipo.value\">\r\n                      <option *ngIf=\"(item.tipo == 'Herramienta' && item.estado == 'En Obra') || (item.tipo != 'Herramienta')\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                    </ng-container>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n                <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                <p *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\">{{inventario[regresarIndice(i)].cantidad}} {{inventario[regresarIndice(i)].unidades}}</p>\r\n              </div>\r\n              <div *ngIf=\"selectTipo.value != 'Herramienta'\" class=\"col-3\">\r\n\r\n\r\n\r\n                <!--Label e input de cantidad a ingresar (se escribe la cantidad a ingresar)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                <input\r\n                  *ngIf=\"idsReingreso[i].id != null && idsReingreso[i].id != undefined && idsReingreso[i].id != ''\"\r\n                  onkeypress=\"return event.charCode >= 46\"\r\n                  min=\"1\"\r\n                  type=\"number\"\r\n                  (keyup)='revisarCantidad()'\r\n                  [(ngModel)]=\"idsReingreso[i].cantidad\"\r\n                  [name]=\"'cantidad'+[i]\"\r\n                  class=\"form-control\">\r\n              </div>\r\n\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n      <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n      <div class=\"modal-footer\">\r\n        <div class=\"btn-group\">\r\n          <button type=\"button\" class=\"btn btn-primary\" (click)=\"agregarItem()\">\r\n            <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Más Items\r\n          </button>\r\n          <button type=\"button\" [hidden]=\"idsReingreso.length == 1\" class=\"btn btn-secondary\" [disabled]=\"idsReingreso.length == 1\" (click)=\"restarItem()\">\r\n            <fa-icon [icon]=\"faMinusCircle\"></fa-icon> Menos Items\r\n          </button>\r\n        </div>\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n            <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n          </button>\r\n          <button [disabled]='!valido || !f.valid' type=\"button\" class=\"btn btn-success\" (click)=\"reingresarItems()\" data-dismiss=\"modal\">\r\n            <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresar\r\n          </button>\r\n      </div>\r\n\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\r\nimport { faWarehouse, faUsersSlash } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignInAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { faUser } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n\r\n    faWarehouse = faWarehouse;\r\n    faSignInAlt = faSignInAlt;\r\n    faSignOutAlt = faSignOutAlt;\r\n    faUser = faUser;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","  <nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark shadow\">\r\n    <a class=\"navbar-brand\" href=\"#\">\r\n      <img src=\"../../../assets/logo.svg\" alt=\"Logo\" class=\"img-fluid\" style=\"max-width: 50px; width: 100%; margin: 0; padding: 0\">\r\n      <strong> GrupoCDV</strong>\r\n    </a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n      <ul class=\"navbar-nav ml-auto\">\r\n        <li class=\"nav-item active mr-2\">\r\n          <a class=\"nav-link\" routerLink=\"/inventario\"> <fa-icon [icon]=\"faWarehouse\"></fa-icon> Inventario <span class=\"sr-only\">(current)</span></a>\r\n        </li>\r\n        <li class=\"nav-item active mr-2\">\r\n          <a class=\"nav-link\" routerLink=\"/ingresos\"> <fa-icon [icon]=\"faSignInAlt\"></fa-icon> Ingresos </a>\r\n        </li>\r\n        <li class=\"nav-item active mr-2\">\r\n          <a class=\"nav-link\" routerLink=\"/egresos\"> <fa-icon [icon]=\"faSignOutAlt\"></fa-icon> Egresos</a>\r\n        </li>\r\n        <li class=\"nav-item active ml-5\">\r\n          <a class=\"nav-link\" href=\"#\"> <fa-icon [icon]=\"faUser\"></fa-icon> Usuario</a>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getCategorias() {\n    return this.http.get(`${this.API_URI}/categorias`);\n  }\n\n  getCategoria(id: string) {\n    return this.http.get(`${this.API_URI}/categorias/${id}`);\n  }\n\n  createCategoria(categoria: string) {\n    return this.http.post(`${this.API_URI}/categorias`, categoria);\n  }\n\n  deleteCategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/categorias/${id}`);\n  }\n\n  updateCategoria(id: string, categoria: string) {\n    return this.http.put(`${this.API_URI}/categorias/${id}`, categoria);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { Item } from '../models/item.model';\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class InventarioSQLService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getInventario() {\n    return this.http.get(`${this.API_URI}/herramientas`);\n  }\n\n  getItem(id: string) {\n    return this.http.get(`${this.API_URI}/herramientas/${id}`);\n  }\n\n  createItem(item: Item) {\n    let nuevoItem = {\n      nombre: item.nombre,\n      id_categoria: +item.categoria,\n      id_subcategoria: +item.subcategoria,\n      cantidad: item.cantidad,\n      id_unidad: +item.unidades,\n      id_ubicacion: +item.ubicacion,\n      id_estado: 1,\n      vencimiento: item.vencimiento,\n      serial: item.serial,\n      precio: item.precio,\n      descripcion: null\n    }\n    console.log(nuevoItem);\n    return this.http.post(`${this.API_URI}/herramientas`, nuevoItem);\n  }\n\n  deleteItem(id: string) {\n    return this.http.delete(`${this.API_URI}/herramientas/${id}`);\n  }\n\n  updateItem(id: string, item: any) {\n    return this.http.put(`${this.API_URI}/herramientas/${id}`, item);\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubcategoriasService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getSubcategorias() {\n    return this.http.get(`${this.API_URI}/subcategorias`);\n  }\n\n  getSubcategoria(id: string) {\n    return this.http.get(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  createSubcategoria(subcategoria: string) {\n    return this.http.post(`${this.API_URI}/subcategorias`, subcategoria);\n  }\n\n  deleteSubcategoria(id: string) {\n    return this.http.delete(`${this.API_URI}/subcategorias/${id}`);\n  }\n\n  updateSubcategoria(id: string, subcategoria: string) {\n    return this.http.put(`${this.API_URI}/subcategorias/${id}`, subcategoria);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http'\r\nimport { environment } from '../../environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UbicacionesService {\r\n\r\n  API_URI = environment.dirBackend;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getUbicaciones() {\r\n    return this.http.get(`${this.API_URI}/ubicaciones`);\r\n  }\r\n\r\n  getUbicacion(id: string) {\r\n    return this.http.get(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  createUbicacion(categoria: string) {\r\n    return this.http.post(`${this.API_URI}/ubicaciones`, categoria);\r\n  }\r\n\r\n  deleteUbicacion(id: string) {\r\n    return this.http.delete(`${this.API_URI}/ubicaciones/${id}`);\r\n  }\r\n\r\n  updateUbicacion(id: string, categoria: string) {\r\n    return this.http.put(`${this.API_URI}/ubicaciones/${id}`, categoria);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  API_URI = environment.dirBackend;\n\n  constructor(private http: HttpClient) { }\n\n  getUnidades() {\n    return this.http.get(`${this.API_URI}/unidades`);\n  }\n\n  getUnidad(id: string) {\n    return this.http.get(`${this.API_URI}/unidades/${id}`);\n  }\n\n  createUnidad(unidad: string) {\n    return this.http.post(`${this.API_URI}/unidades`, unidad);\n  }\n\n  deleteUnidad(id: string) {\n    return this.http.delete(`${this.API_URI}/unidades/${id}`);\n  }\n\n  updateUnidad(id: string, unidad: string) {\n    return this.http.put(`${this.API_URI}/unidades/${id}`, unidad);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  dirBackend: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
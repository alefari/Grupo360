{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.ts","webpack:///src/app/components/inventario/ingreso/ingreso.component.html","webpack:///src/app/components/inventario/inventario.component.ts","webpack:///src/app/components/inventario/inventario.component.html","webpack:///src/app/components/inventario/reingreso/reingreso.component.ts","webpack:///src/app/components/inventario/reingreso/reingreso.component.html","webpack:///src/app/components/login/login.component.ts","webpack:///src/app/components/login/login.component.html","webpack:///src/app/components/navbar/navbar.component.ts","webpack:///src/app/components/navbar/navbar.component.html","webpack:///src/app/services/categorias.service.ts","webpack:///src/app/services/inventario.service.ts","webpack:///src/app/services/ubicaciones.service.ts","webpack:///src/app/services/unidades.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","IngresoComponent","inventarioService","categoriaService","ubicacionesService","unidadesService","nombre","obtenerCategorias","subscribe","items","categorias","sort","a","b","obtenerUbicaciones","ubicaciones","obtenerUnidades","unidades","nuevoItem","form","value","tipo","serial","cantidad","precio","ubicacion","vencimiento","estado","agregarItem","reinicializarCampos","cerrarModal","onSubmit","InventarioComponent","servicioInventario","filtroNombre","filtroTipo","obtenerInventario","inventario","ReingresoComponent","idItemElegido","cantidadIngreso","itemElegido","findIndex","item","index","editarItem","agregarItems","LoginComponent","NavbarComponent","CategoriasService","afs","categoriasColeccion","collection","snapshotChanges","pipe","actions","map","data","payload","doc","providedIn","InventarioService","itemsColeccion","add","itemEditado","update","UbicacionesService","ubicacionesColeccion","UnidadesService","unidadesColeccion","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err","console","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAIA,QAAMC,MAAM,GAAW,EAAvB;;QAMaC,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBF,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBC,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBF,MAArB,CAAD,CADD;AAERF,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;ACV7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaM,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,UAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACLzB;;AACA;;;;;;;;;sEDIaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTE,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,wE,CASA;;;QA+BaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAHT,E;AAAE,gBATJ,CACP,uEADO,EAEP,oEAFO,EAGP,gEAAkBC,aAAlB,CAAgC,0EAAYC,QAA5C,CAHO,EAIP,mFAJO,EAKP,8EALO,EAMP,wEANO,EAOP,0DAPO,CASI;;;;0HAGFF,S,EAAS;AAAA,uBAnBlB,2DAmBkB,EAlBlB,gFAkBkB,EAjBlB,+FAiBkB,EAhBlB,kGAgBkB,EAflB,oFAekB,EAdlB,wGAckB;AAdA,kBAGlB,uEAHkB,EAIlB,oEAJkB,EAIF,+DAJE,EAMlB,mFANkB,EAOlB,8EAPkB,EAQlB,wEARkB,EASlB,0DATkB;AAcA,O;AALP,K;;;;;sEAKFA,S,EAAS;cArBrB,sDAqBqB;eArBZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,gFAFY,EAGZ,+FAHY,EAIZ,kGAJY,EAKZ,oFALY,EAMZ,wGANY,CADN;AASRT,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,gEAAkBO,aAAlB,CAAgC,0EAAYC,QAA5C,CAHO,EAIP,mFAJO,EAKP,8EALO,EAMP,wEANO,EAOP,0DAPO,CATD;AAkBRE,mBAAS,EAAE,EAlBH;AAmBRC,mBAAS,EAAE,CAAC,2DAAD;AAnBH,S;AAqBY,Q;;;;;;;;;;;;;;;;;;ACxCtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;;;;;;;ACyBkB;;AAA0E;;AAAsB;;;;;;AAAnD;;AAA6B;;AAAA;;;;;;AAkBxE;;AAAoE;;AAAmB;;;;;;AAA/C;;AAA4B;;AAAA;;;;;;AAgBtE;;AAA6E;;AAAsB;;;;;;AAArD;;AAA+B;;AAAA;;MD1C/F;;;QAEaC,gB;AASX,gCAAoBC,iBAApB,EACoBC,gBADpB,EAEoBC,kBAFpB,EAGoBC,eAHpB,EAGsD;AAAA;;AAHlC,aAAAH,iBAAA,GAAAA,iBAAA;AACA,aAAAC,gBAAA,GAAAA,gBAAA;AACA,aAAAC,kBAAA,GAAAA,kBAAA;AACA,aAAAC,eAAA,GAAAA,eAAA,CAAkC,CANtD;;AACA,aAAAC,MAAA,GAAiB,EAAjB;AAKyD;;;;mCAEjD;AAAA;;AACN,eAAKH,gBAAL,CAAsBI,iBAAtB,GAA0CC,SAA1C,CAAoD,UAAAC,KAAK,EAAI;AAC3D,iBAAI,CAACC,UAAL,GAAkBD,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACN,MAAF,GAAWO,CAAC,CAACP,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGA,eAAKF,kBAAL,CAAwBU,kBAAxB,GAA6CN,SAA7C,CAAuD,UAAAC,KAAK,EAAI;AAC9D,iBAAI,CAACM,WAAL,GAAmBN,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACN,MAAF,GAAWO,CAAC,CAACP,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAnB;AACD,WAFD;AAGA,eAAKD,eAAL,CAAqBW,eAArB,GAAuCR,SAAvC,CAAiD,UAAAC,KAAK,EAAI;AACxD,iBAAI,CAACQ,QAAL,GAAgBR,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACN,MAAF,GAAWO,CAAC,CAACP,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAhB;AACD,WAFD;AAGD,S,CAEH;;;;mCAEa;AACT,cAAIY,SAAS,GAAS;AACpBZ,kBAAM,EAAE,KAAKa,IAAL,CAAUC,KAAV,CAAgBd,MADJ;AAEpBe,gBAAI,EAAE,KAAKF,IAAL,CAAUC,KAAV,CAAgBC,IAFF;AAGpBC,kBAAM,EAAE,KAAKH,IAAL,CAAUC,KAAV,CAAgBE,MAHJ;AAIpBC,oBAAQ,EAAE,KAAKJ,IAAL,CAAUC,KAAV,CAAgBG,QAJN;AAKpBN,oBAAQ,EAAE,KAAKE,IAAL,CAAUC,KAAV,CAAgBH,QALN;AAMpBO,kBAAM,EAAE,KAAKL,IAAL,CAAUC,KAAV,CAAgBI,MANJ;AAOpBC,qBAAS,EAAE,KAAKN,IAAL,CAAUC,KAAV,CAAgBK,SAPP;AAQpBC,uBAAW,EAAE,KAAKP,IAAL,CAAUC,KAAV,CAAgBM,WART;AASpBC,kBAAM,EAAE;AATY,WAAtB,CADS,CAab;;AAEI,eAAKzB,iBAAL,CAAuB0B,WAAvB,CAAmCV,SAAnC;AAEA,eAAKW,mBAAL;AAED;;;8CAEqB;AACpB;AACA,eAAKvB,MAAL,GAAc,EAAd;AAED;;;sCAEa;AACZ,eAAKuB,mBAAL;AACD;;;;;;;uBAzDU5B,gB,EAAgB,+I,EAAA,sJ,EAAA,wJ,EAAA,kJ;AAAA,K;;;YAAhBA,gB;AAAgB,kC;AAAA;AAAA;;;;;;;;;;;;;;;ACnB7B;;AACE;;AAIE;;AACE;;AAA+C;;AAAO;;AACtD;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;AAEA;;AACE;;AAEI;;AACE;;AACE;;AACE;;AAAO;;AAAM;;AACb;;AACF;;AACA;;AAEE;;AAAuC;;AAAS;;AAChD;;AACE;;AACF;;AACF;;AACA;;AACE;;AAAO;;AAAM;;AACb;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAEE;;AAAmC;;AAAmB;;AACtD;;AACE;;AACA;;AACE;;AACF;;AACF;;AACF;;AACA;;AACE;;AAAO;;AAAM;;AACb;;AACA;;AACA;;AACE;;AAAiD;;AAAC;;AACpD;;AACA;;AACF;;AACA;;AACE;;AAAO;;AAAoB;;AAC3B;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAO;;AAAW;;AAChB;;AACJ;;AACF;;AAEF;;AAEJ;;AAGF;;AACE;;AAAgD;AAAA,mBAAS,IAAA6B,WAAA,EAAT;AAAsB,WAAtB;;AAA6C;;AAAM;;AACnG;;AAA8C;AAAA,mBAAS,IAAAC,QAAA,EAAT;AAAmB,WAAnB;;AAAqB;;AAAQ;;AAC7E;;AACA;;AACF;;AACF;;;;AAhEmC;;AAAA;;AAMT;;AAAA;;AAkBE;;AAAA;;AAgBF;;AAAA;;;;;;;;;sEDxCb9B,gB,EAAgB;cAR5B,uDAQ4B;eARlB;AACTT,kBAAQ,EAAE,aADD;AAETC,qBAAW,EAAE,0BAFJ;AAGTC,mBAAS,EAAE,CAAC,yBAAD;AAHF,S;AAQkB,Q;;;;;;;;;;;;gBAC1B,uD;iBAAU,G;;;;;;;;;;;;;;;;;;;;AEpBb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,wE,CAAA;;;;;;;ACqCM;;AACE;;AAAI;;AAAiB;;AACrB;;AAAI;;AAAe;;AACnB;;AAAI;;AAAmB;;AACvB;;AAAI;;AAAoB;;AACxB;;AAAI;;AAAiB;;AAErB;;AACE;;AAAoC;;AAAQ;;AAC9C;;AACF;;;;;;AATM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;AANR;;AACE;;AAWF;;;;;;;;AAXkB;;AAAA;;MDxBtB;;;QACasC,mB;AAOX,mCAAoBC,kBAApB,EAA2D;AAAA;;AAAvC,aAAAA,kBAAA,GAAAA,kBAAA;AAHpB,aAAAC,YAAA,GAAuB,EAAvB;AACA,aAAAC,UAAA,GAAqB,EAArB;AAE8D,O,CAEhE;;;;;mCACU;AAAA;;AACN,eAAKF,kBAAL,CAAwBG,iBAAxB,GAA4C5B,SAA5C,CAAsD,UAAAC,KAAK,EAAI;AAC7D,kBAAI,CAAC4B,UAAL,GAAkB5B,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACN,MAAF,GAAWO,CAAC,CAACP,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGD;;;;;;;uBAdU0B,mB,EAAmB,+I;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA;AAAA;;;;;;;;;;;;;;;ACbhC;;AAGA;;AACE;;AACE;;AAA8F;;AAAO;;AACrG;;AAAgG;;AAAS;;AAE3G;;AAGA;;AACE;;AACE;;AACE;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAS;;AACzB;;AAAgB;;AAAM;;AACtB;;AACF;;AACF;;AACA;;AACE;;AAEE;;AAAgB;;AAAO;AAAA;AAAA;;AAAuE;;AAA9F;;AACA;;AACA;;AACA;;AACA;;AACA;;AACF;;AACF;;AACA;;AAEA;;AAcA;;AACF;;AAEF;;AACE;;AAKF;;AACE;;AACF;;AAEA;;AACE;;AACF;;;;AAvC+B;;AAAA;;AAUb;;AAAA;;;;;;;;;sEDtBLA,mB,EAAmB;cAN/B,uDAM+B;eANrB;AACTxC,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAMqB,Q;;;;;;gBAC7B,uD;iBAAU,G;;;;;;;;;;;;;;;;;;;;AEfb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,sE,CAAA;;;;;AC2CoB;;AAA4D;;AAAiB;;;;;;AAArC;;AAAoB;;AAAA;;;;;;AAF9D;;AAEE;;AACF;;;;;;;;AADU;;AAAA;;MD/B5B;;;QACa4C,kB;AAMX,kCAAoBL,kBAApB,EAA2D;AAAA;;AAAvC,aAAAA,kBAAA,GAAAA,kBAAA;AAHpB,aAAAM,aAAA,GAAwB,IAAxB;AACA,aAAAC,eAAA,GAA0B,CAA1B;AAE8D,O,CAGhE;;;;;mCACU;AAAA;;AACN,eAAKP,kBAAL,CAAwBG,iBAAxB,GAA4C5B,SAA5C,CAAsD,UAAAC,KAAK,EAAI;AAC7D,kBAAI,CAAC4B,UAAL,GAAkB5B,KAAK,CAACE,IAAN,CAAW,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAWD,CAAC,CAACN,MAAF,GAAWO,CAAC,CAACP,MAAd,GAAwB,CAAxB,GAA4B,CAAC,CAAvC;AAAA,aAAX,CAAlB;AACD,WAFD;AAGD,S,CAED;;;;oCACYmC,W,EAAqB;AAC/B,eAAKJ,UAAL,CAAgBK,SAAhB,CAA0B,UAASC,IAAT,EAAeC,KAAf,EAAsB;AAC9C,gBAAGD,IAAI,CAAC1D,EAAL,IAAWwD,WAAd,EAA0B;AACxB,qBAAO,IAAP;AACD;AACF,WAJD;AAKD,S,CAEA;;;;uCACc;AAAA;;AACb,cAAIvB,SAAS,GAAG,KAAKmB,UAAL,CAAgB,KAAKA,UAAL,CAAgBK,SAAhB,CAA0B,UAAAC,IAAI;AAAA,mBAAIA,IAAI,CAAC1D,EAAL,IAAW,MAAI,CAACsD,aAApB;AAAA,WAA9B,CAAhB,CAAhB;AACArB,mBAAS,CAACK,QAAV,IAAsB,KAAKiB,eAA3B;AACA,eAAKP,kBAAL,CAAwBY,UAAxB,CAAmC3B,SAAnC;AACD;;;;;;;uBA9BUoB,kB,EAAkB,+I;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,8mC;AAAA;AAAA;ACb/B;;AACE;;AAIE;;AACE;;AAA+C;;AAAS;;AACxD;;AACE;;AAAyB;;AAAO;;AAClC;;AACF;;AAIA;;AACE;;AACE;;AACE;;AACE;;AACI;;AAAO;;AAAI;;AACX;;AACE;AAAA;AAAA;;AAEA;;AAAsC;;AAAqB;;AAC3D;;AAAkC;;AAAiB;;AACnD;;AAAqC;;AAAoB;;AACzD;;AAAqC;;AAAoB;;AACzD;;AAAqC;;AAAoB;;AACzD;;AAAiC;;AAAgB;;AACjD;;AAAmC;;AAAkB;;AACrD;;AAAuC;;AAAsB;;AAC7D;;AAA8C;;AAA6B;;AAC7E;;AACJ;;AAIA;;AACI;;AAAO;;AAAI;;AACX;;AAA6B;AAAA;AAAA;;AAE3B;;AAIF;;AACJ;;AACF;;AAIF;;AACE;;AACE;;AACE;;AAEE;;AAAgC;;AAAe;;AAC/C;;AAMF;;AAEA;;AACE;;AAAgC;;AAAmB;;AACnD;;AAAqB;AAAA;AAAA;;AAArB;;AACF;;AACF;;AACF;;AAMJ;;AAEF;;AACE;;AAAqE;;AAAM;;AAC3E;;AAA8C;AAAA,mBAAS,IAAAQ,YAAA,EAAT;AAAuB,WAAvB;;AAA0B;;AAAQ;;AAClF;;AACA;;AACF;;AACF;;;;AA/DkB;;AAAA;;AAkB2B;;AAAA;;AAEb;;AAAA;;AA0BK;;AAAA;;;;;;;;;sEDtDxBR,kB,EAAkB;cAP9B,uDAO8B;eAPpB;AACT9C,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAOoB,Q;;;;;;;;;;;;;;;;;;;;;;AEb/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOaqD,c;AAEX,gCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,c;AAAc,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,uV;AAAA;AAAA;ACP3B;;AACE;;AACE;;AACE;;AACE;;AACA;;AACE;;AAAuB;;AAAa;;AACpC;;AACE;;AACE;;AAAO;;AAAmB;;AAC1B;;AACF;;AACA;;AACE;;AAAO;;AAAU;;AACjB;;AACF;;AACA;;AAAO;;AAAY;;AAAoB;;AAAI;;AAC3C;;AAA4C;;AAAQ;;AACtD;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;;;;sEDhBaA,c,EAAc;cAL1B,uDAK0B;eALhB;AACTvD,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;AEP3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOasD,e;AAEX,iCAAc;AAAA;AAAG;;;;mCAET,CACP;;;;;;;uBALUA,e;AAAe,K;;;YAAfA,e;AAAe,iC;AAAA,c;AAAA,a;AAAA,kV;AAAA;AAAA;ACP5B;;AACE;;AAAiC;;AAAY;;AAC7C;;AACE;;AACF;;AAiBF;;;;;;;;sEDdaA,e,EAAe;cAL3B,uDAK2B;eALjB;AACTxD,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;AEP5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASauD,iB;AAKX,iCAA6BC,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAC3B,aAAKC,mBAAL,GAA2BD,GAAG,CAACE,UAAJ,CAA0B,WAA1B,CAA3B;AACA,aAAK1C,UAAL,GAAkB,KAAKyC,mBAAL,CAAyBE,eAAzB,GAA2CC,IAA3C,CAChB,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA5C,CAAC,EAAI;AAC9B,gBAAM6C,IAAI,GAAG7C,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMxE,EAAE,GAAG2B,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAc1E,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASwE,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADgB,CAAlB;AAOD;;;;4CAEmB;AAClB,iBAAO,KAAK/C,UAAZ;AACD;;;;;;;uBAlBUuC,iB,EAAiB,gI;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVW,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACT9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaC,iB;AAKX,iCAA6BX,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAE3B,aAAKY,cAAL,GAAsBZ,GAAG,CAACE,UAAJ,CAAqB,YAArB,CAAtB;AACA,aAAK3C,KAAL,GAAa,KAAKqD,cAAL,CAAoBT,eAApB,GAAsCC,IAAtC,CACX,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA5C,CAAC,EAAI;AAC9B,gBAAM6C,IAAI,GAAG7C,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMxE,EAAE,GAAG2B,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAc1E,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASwE,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADW,CAAb;AAOD;;;;4CAEmB;AAClB,iBAAO,KAAKhD,KAAZ;AACD;;;oCAEWS,S,EAAiB;AAC3B,eAAK4C,cAAL,CAAoBC,GAApB,CAAwB7C,SAAxB;AACD;;;mCAEU8C,W,EAAmB;AAC5B,iBAAO,KAAKF,cAAL,CAAoBH,GAApB,CAAwBK,WAAW,CAAC/E,EAApC,EAAwCgF,MAAxC,CAA+CD,WAA/C,CAAP;AACD;;;;;;;uBA3BUH,iB,EAAiB,gI;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBAFhB;;;;;sEAEDA,iB,EAAiB;cAH7B,wDAG6B;eAHlB;AACVD,oBAAU,EAAE;AADF,S;AAGkB,Q;;;;;;;;;;;;;;;;;;;;;;ACT9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaM,kB;AAKX,kCAA6BhB,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAC3B,aAAKiB,oBAAL,GAA4BjB,GAAG,CAACE,UAAJ,CAAoB,aAApB,CAA5B;AACA,aAAKrC,WAAL,GAAmB,KAAKoD,oBAAL,CAA0Bd,eAA1B,GAA4CC,IAA5C,CACjB,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA5C,CAAC,EAAI;AAC9B,gBAAM6C,IAAI,GAAG7C,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMxE,EAAE,GAAG2B,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAc1E,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASwE,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADiB,CAAnB;AAOD;;;;6CAEoB;AACnB,iBAAO,KAAK1C,WAAZ;AACD;;;;;;;uBAlBUmD,kB,EAAkB,gI;AAAA,K;;;aAAlBA,kB;AAAkB,eAAlBA,kBAAkB,K;AAAA,kBAFjB;;;;;sEAEDA,kB,EAAkB;cAH9B,wDAG8B;eAHnB;AACVN,oBAAU,EAAE;AADF,S;AAGmB,Q;;;;;;;;;;;;;;;;;;;;;;ACR/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaQ,e;AAKX,+BAA6BlB,GAA7B,EAAoD;AAAA;;AAAvB,aAAAA,GAAA,GAAAA,GAAA;AAC3B,aAAKmB,iBAAL,GAAyBnB,GAAG,CAACE,UAAJ,CAAoB,UAApB,CAAzB;AACA,aAAKnC,QAAL,GAAgB,KAAKoD,iBAAL,CAAuBhB,eAAvB,GAAyCC,IAAzC,CACd,2DAAI,UAAAC,OAAO;AAAA,iBAAIA,OAAO,CAACC,GAAR,CAAY,UAAA5C,CAAC,EAAI;AAC9B,gBAAM6C,IAAI,GAAG7C,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAcF,IAAd,EAAb;AACA,gBAAMxE,EAAE,GAAG2B,CAAC,CAAC8C,OAAF,CAAUC,GAAV,CAAc1E,EAAzB;AACA,mBAAO,MAAP,OAAO,CAAP;AAASA,gBAAE,EAAFA;AAAT,aAAO,EAASwE,IAAT,CAAP;AACD,WAJc,CAAJ;AAAA,SAAX,CADc,CAAhB;AAOD;;;;0CAEiB;AAChB,iBAAO,KAAKxC,QAAZ;AACD;;;;;;;uBAlBUmD,e,EAAe,gI;AAAA,K;;;aAAfA,e;AAAe,eAAfA,eAAe,K;AAAA,kBAFd;;;;;sEAEDA,e,EAAe;cAH3B,wDAG2B;eAHhB;AACVR,oBAAU,EAAE;AADF,S;AAGgB,Q;;;;;;;;;;;;;;;;;;;;;;ACR5B;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMU,WAAW,GAAG;AACzBC,gBAAU,EAAE,KADa;AAEzB1E,cAAQ,EAAE;AACR2E,cAAM,EAAE,yCADA;AAERC,kBAAU,EAAE,gCAFJ;AAGRC,mBAAW,EAAE,uCAHL;AAIRC,iBAAS,EAAE,gBAJH;AAKRC,qBAAa,EAAE,4BALP;AAMRC,yBAAiB,EAAE,aANX;AAORC,aAAK,EAAE,0CAPC;AAQRC,qBAAa,EAAE;AARP;AAFe,KAApB;AAcP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACzBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYR,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBS,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIC,OAAO,CAACC,KAAR,CAAcF,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Grupo360';\n}\n","\n<!-- <app-login></app-login> -->\n<app-navbar></app-navbar>\n<app-inventario></app-inventario>\n\n<!-- <router-outlet></router-outlet> -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from './components/login/login.component';\nimport { InventarioComponent } from './components/inventario/inventario.component';\n\n// IMPORTACIONES PARA FIREBASE\nimport { AngularFireModule } from '@angular/fire';\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { AngularFireAuthModule } from '@angular/fire/auth';\nimport { AngularFireAnalyticsModule } from '@angular/fire/analytics';\nimport { environment } from 'src/environments/environment';\nimport { IngresoComponent } from './components/inventario/ingreso/ingreso.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { ReingresoComponent } from './components/inventario/reingreso/reingreso.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    InventarioComponent,\n    IngresoComponent,\n    NavbarComponent,\n    ReingresoComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAnalyticsModule,\n    AngularFirestoreModule,\n    AngularFireAuthModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","//Imports de servicios, tipos, etc//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Item } from 'src/app/models/item.model';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { Categoria } from 'src/app/models/categoria.model';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\n\r\n@Component({\r\n  selector: 'app-ingreso',\r\n  templateUrl: './ingreso.component.html',\r\n  styleUrls: ['./ingreso.component.css']\r\n})\r\n\r\n//View Child del form de ingreso, y funcion inventarioService//\r\n\r\nexport class IngresoComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n  categorias: Categoria[];\r\n  ubicaciones: any[];\r\n  unidades: any[];\r\n\r\n  //VARIABLES USADAS PARA REINICIALIZAR CAMPOS\r\n  nombre: string = \"\";\r\n\r\n  constructor(private inventarioService: InventarioService,\r\n              private categoriaService: CategoriasService,\r\n              private ubicacionesService: UbicacionesService,\r\n              private unidadesService: UnidadesService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.categoriaService.obtenerCategorias().subscribe(items => {\r\n      this.categorias = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.ubicacionesService.obtenerUbicaciones().subscribe(items => {\r\n      this.ubicaciones = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n    this.unidadesService.obtenerUnidades().subscribe(items => {\r\n      this.unidades = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n//Se declara la variable nuevoItem, que almacena las propiedades del item a ingresar. Esta luego se conecta con el servicio. Se agrega la informacion ingresada//\r\n\r\n  onSubmit() {\r\n    let nuevoItem: Item = {\r\n      nombre: this.form.value.nombre,\r\n      tipo: this.form.value.tipo,\r\n      serial: this.form.value.serial,\r\n      cantidad: this.form.value.cantidad,\r\n      unidades: this.form.value.unidades,\r\n      precio: this.form.value.precio,\r\n      ubicacion: this.form.value.ubicacion,\r\n      vencimiento: this.form.value.vencimiento,\r\n      estado: \"Disponible\"\r\n    }\r\n\r\n//Se agrega nuevoItem al inventario existente//\r\n\r\n    this.inventarioService.agregarItem(nuevoItem);\r\n\r\n    this.reinicializarCampos();\r\n\r\n  }\r\n\r\n  reinicializarCampos() {\r\n    //El formulario se vacia nuevamente\r\n    this.nombre = \"\";\r\n\r\n  }\r\n\r\n  cerrarModal() {\r\n    this.reinicializarCampos();\r\n  }\r\n\r\n}\r\n","<div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n\r\n    <!--Modal de ingreso de producto-->\r\n\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Ingreso</h5>\r\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\">\r\n          <!--Nombre de producto-->\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-5\">\r\n                <label>Nombre</label>\r\n                <input type=\"text\" [ngModel]='nombre' name=\"nombre\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n              <div class=\"col-4\">\r\n                <!--Label y Select del tipo de producto-->\r\n                <label for=\"exampleFormControlSelect1\">Categoría</label>\r\n                <select class=\"form-control\" ngModel name=\"tipo\" id=\"exampleFormControlSelect1\">\r\n                  <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                </select>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Serial</label>\r\n                <input type=\"text\" ngModel name=\"serial\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col-4\">\r\n                <!--Cantidad de producto-->\r\n                <label for=\"exampleInputPassword1\">Cantidad y Unidades</label>\r\n                <div class=\"input-group\">\r\n                  <input type=\"number\" ngModel name=\"cantidad\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                  <select type=\"text\" placeholder=\"0\" ngModel name=\"unidades\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                    <option *ngFor=\"let unidad of unidades\" value=\"{{ unidad.nombre }}\">{{ unidad.nombre }}</option>\r\n                  </select>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-3\">\r\n                <label>Precio</label>\r\n                <div class=\"input-group\">\r\n                <input type=\"number\" ngModel name=\"precio\" class=\"form-control\" id=\"exampleInputPassword1\">\r\n                <div class=\"input-group-append\">\r\n                  <span class=\"input-group-text\" id=\"basic-addon1\">$</span>\r\n                </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-5\">\r\n                <label>Ubicación en almacén</label>\r\n                <select type=\"text\" ngModel name=\"ubicacion\" class=\"form-control\" aria-describedby=\"emailHelp\">\r\n                  <option *ngFor=\"let ubicacion of ubicaciones\" value=\"{{ ubicacion.nombre }}\">{{ ubicacion.nombre }}</option>\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <label>Vencimiento</label>\r\n                  <input class=\"form-control\" ngModel name=\"vencimiento\" type=\"date\" id=\"example-date-input\">\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n\r\n      </div>\r\n\r\n    <!--Footer de Modal con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" (click)=\"cerrarModal()\" data-dismiss=\"modal\">Cerrar</button>\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"onSubmit()\">Ingresar</button>\r\n    </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Item } from '../../models/item.model';\r\nimport { InventarioService } from '../../services/inventario.service';\r\nimport { NgForm } from '@angular/forms';\r\n\r\n\r\n@Component({\r\n  selector: 'app-inventario',\r\n  templateUrl: './inventario.component.html',\r\n  styleUrls: ['./inventario.component.css']\r\n})\r\n//Se declaran variables de filtros//\r\nexport class InventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  inventario: Item[];\r\n  filtroNombre: string = \"\";\r\n  filtroTipo: string = \"\";\r\n\r\n  constructor(private servicioInventario: InventarioService) { }\r\n\r\n//Se adjuntan items de base de datos a la variable inventario, y se ordena items en orden alfabetico//\r\n  ngOnInit(): void {\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"container\">\r\n\r\n<!--Botones de ingreso y reingreso de productos-->\r\n<div class=\"row\">\r\n  <div class=\"btn-group\">\r\n    <button type=\"button\" class=\"btn btn-success\" data-toggle=\"modal\" data-target=\"#modalIngreso\">Ingreso</button>\r\n    <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#modalReingreso\">Reingreso</button>\r\n\r\n  </div>\r\n\r\n  <!--Tabla de inventario en donde se muestra el inventario general-->\r\n  <table class=\"table shadow\">\r\n    <thead class=\"thead-dark\">\r\n      <tr>\r\n        <th scope=\"col\">Nombre</th>\r\n        <th scope=\"col\">Categoría</th>\r\n        <th scope=\"col\">Cantidad</th>\r\n        <th scope=\"col\">Ubicación</th>\r\n        <th scope=\"col\">Estado</th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    <thead class=\"thead-dark\">\r\n      <tr>\r\n        <!--Filtro por nombre de Inventario, busca el item que haga match-->\r\n        <th scope=\"col\"><input [(ngModel)]=\"filtroNombre\" type=\"text\" placeholder=\"Filtro por nombre\"></th>\r\n        <th scope=\"col\"></th>\r\n        <th scope=\"col\"></th>\r\n        <th scope=\"col\"></th>\r\n        <th scope=\"col\"></th>\r\n        <th></th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n    <!--NgFor que imprime inventario de base de datos (itemsInventario), este a su vez compara con el Filtro por nombre en minusculas-->\r\n    <ng-container *ngFor=\"let item of inventario\">\r\n      <tr scope=\"row\" *ngIf=\"item.nombre.toLocaleLowerCase().includes(filtroNombre.toLowerCase())\" class=\"bg-light\">\r\n        <td>{{ item.nombre }}</td>\r\n        <td>{{ item.tipo }}</td>\r\n        <td>{{ item.cantidad }}</td>\r\n        <td>{{ item.ubicacion }}</td>\r\n        <td>{{ item.estado }}</td>\r\n\r\n        <td>\r\n          <button class=\"btn btn-info btn-sm\">Detalles</button>\r\n        </td>\r\n      </tr>\r\n    </ng-container>\r\n\r\n    </tbody>\r\n  </table>\r\n\r\n</div>\r\n  </div>\r\n\r\n\r\n\r\n<!-- Modal -->\r\n<div class=\"modal fade\" id=\"modalIngreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-ingreso></app-ingreso>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"modalReingreso\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" aria-hidden=\"true\">\r\n  <app-reingreso></app-reingreso>\r\n</div>\r\n","//Imports de servicios, items, etc.//\r\n\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { InventarioService } from '../../../services/inventario.service';\r\nimport { Item } from 'src/app/models/item.model';\r\n\r\n@Component({\r\n  selector: 'app-reingreso',\r\n  templateUrl: './reingreso.component.html',\r\n  styleUrls: ['./reingreso.component.css']\r\n})\r\n\r\n//Se declaran las variables a utilizar en reingreso//\r\nexport class ReingresoComponent implements OnInit {\r\n  inventario: Item[];\r\n  selectTipo: string;\r\n  idItemElegido: string = null;\r\n  cantidadIngreso: number = 0;\r\n\r\n  constructor(private servicioInventario: InventarioService) { }\r\n\r\n\r\n//Se obtiene inventario en orden alfabetico, y se imprime en la tabla// \r\n  ngOnInit(): void {\r\n    this.servicioInventario.obtenerInventario().subscribe(items => {\r\n      this.inventario = items.sort((a, b) => (a.nombre > b.nombre) ? 1 : -1);\r\n    })\r\n  }\r\n\r\n  //Compara items de acuerdo a la seleccion del usuario en el Filtro de la tabla, y guarda el id del item seleccionado//\r\n  buscarIndex(itemElegido: string) {\r\n    this.inventario.findIndex(function(item, index) {\r\n      if(item.id == itemElegido){\r\n        return true;\r\n      }\r\n    })\r\n  }\r\n\r\n   //Con el id del item ubicado, se suma la cantidad a agregar ingresada por el usuario en el item del id que haga match//\r\n  agregarItems() {\r\n    let nuevoItem = this.inventario[this.inventario.findIndex(item => item.id == this.idItemElegido)];\r\n    nuevoItem.cantidad += this.cantidadIngreso;\r\n    this.servicioInventario.editarItem(nuevoItem);\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"modal-dialog\">\r\n  <div class=\"modal-content\">\r\n\r\n        <!--Modal de reingreso de producto-->\r\n\r\n    <div class=\"modal-header\">\r\n      <h5 class=\"modal-title\" id=\"exampleModalLabel\">Reingreso</h5>\r\n      <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n\r\n    <!--Filtro por Tipo de reingreso-->\r\n\r\n    <form #f=\"ngForm\">\r\n      <div class=\"modal-body\">\r\n        <div class=\"form-group\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n                <label>Tipo</label>\r\n                <select class=\"form-control\"\r\n                  [(ngModel)]=\"selectTipo\"\r\n                  name=\"tipo\">\r\n                  <option value=\"Herramienta Eléctrica\">Herramienta Eléctrica</option>\r\n                  <option value=\"Herramienta Civil\">Herramienta Civil</option>\r\n                  <option value=\"Herramienta Promería\">Herramienta Promería</option>\r\n                  <option value=\"Herramienta Medición\">Herramienta Medición</option>\r\n                  <option value=\"Consumible Eléctrico\">Consumible Eléctrico</option>\r\n                  <option value=\"Consumible Civil\">Consumible Civil</option>\r\n                  <option value=\"Consumible Pintura\">Consumible Pintura</option>\r\n                  <option value=\"Consumible Iluminación\">Consumible Iluminación</option>\r\n                  <option value=\"Consumible Impermeabilización\">Consumible Impermeabilización</option>\r\n                </select>\r\n            </div>\r\n\r\n            <!--Filtro por Item de reingreso-->\r\n\r\n            <div class=\"col\">\r\n                <label>Item</label>\r\n                <select class=\"form-control\" [(ngModel)]=\"idItemElegido\" name=\"tipo\">\r\n                  <!--NgFor que imprime la cantidad de items que hay en total-->\r\n                  <ng-container *ngFor=\"let item of inventario\">\r\n                    <!--NgIf que filtra Items impresos de acuerdo al Item seleccionado-->\r\n                    <option *ngIf=\"item.tipo == selectTipo\" value='{{item.id}}'>{{ item.nombre }}</option>\r\n                  </ng-container>\r\n                </select>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n        </div>\r\n          <div class=\"form-group\">\r\n            <div class=\"row\">\r\n              <div class=\"col\">\r\n                <!--Label e input de cantidad actual (muestra numero actual en inventario)-->\r\n                <label for=\"exampleInputEmail1\">Cantidad actual</label>\r\n                <input\r\n                  disabled\r\n                  type=\"number\"\r\n                  ngModel\r\n                  name=\"nombre\"\r\n                  class=\"form-control\">\r\n              </div>\r\n              <!--Label e input de cantidad a ingresar (se escribe la cantidad a ingresar)-->\r\n              <div class=\"col\">\r\n                <label for=\"exampleInputEmail1\">Cantidad a ingresar</label>\r\n                <input type=\"number\" [(ngModel)]=\"cantidadIngreso\" name=\"nombre\" class=\"form-control\">\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n      <!--Footer de Modal de reingreso, con botones de cerrar e ingresar-->\r\n    <div class=\"modal-footer\">\r\n      <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">Cerrar</button>\r\n      <button type=\"button\" class=\"btn btn-success\" (click)=\"agregarItems()\" >Ingresar</button>\r\n    </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container\">\n  <div class=\"row justify-content-md-center\">\n    <div class=\"col-10 col-sm-5\">\n      <div class=\"card shadow\">\n        <img src=\"../../../assets/LOGO.PNG\" class=\"card-img-top\" alt=\"...\">\n        <div class=\"card-body\">\n          <h5 class=\"card-title\">Inicia Sesión</h5>\n          <form>\n            <div class=\"form-group\">\n              <label>Dirección de Correo</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <div class=\"form-group\">\n              <label>Contraseña</label>\n              <input type=\"text\" class=\"form-control\">\n            </div>\n            <small><a href=\"#\">Olvidé mi Contraseña</a></small>\n            <button class=\"btn btn-success float-right\">Ingresar</button>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar fixed-top navbar-expand-lg navbar-dark bg-dark\">\n  <a class=\"navbar-brand\" href=\"#\">GrupoCDV-360</a>\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span class=\"navbar-toggler-icon\"></span>\n  </button>\n  <!-- <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n    <ul class=\"navbar-nav\">\n      <li class=\"nav-item active\">\n        <a class=\"nav-link\" href=\"#\">Home <span class=\"sr-only\">(current)</span></a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Features</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link\" href=\"#\">Pricing</a>\n      </li>\n      <li class=\"nav-item\">\n        <a class=\"nav-link disabled\" href=\"#\" tabindex=\"-1\" aria-disabled=\"true\">Disabled</a>\n      </li>\n    </ul>\n  </div> -->\n</nav>\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Categoria } from '../models/categoria.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoriasService {\n\n  categoriasColeccion: AngularFirestoreCollection<Categoria>\n  categorias: Observable<Categoria[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.categoriasColeccion = afs.collection<Categoria>('categoria');\n    this.categorias = this.categoriasColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Categoria;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerCategorias() {\n    return this.categorias;\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Item } from '../models/item.model';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InventarioService {\n\n  itemsColeccion: AngularFirestoreCollection<Item>;\n  items: Observable<Item[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n\n    this.itemsColeccion = afs.collection<Item>('inventario');\n    this.items = this.itemsColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as Item;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerInventario() {\n    return this.items;\n  }\n\n  agregarItem(nuevoItem: Item) {\n    this.itemsColeccion.add(nuevoItem);\n  }\n\n  editarItem(itemEditado: Item) {\n    return this.itemsColeccion.doc(itemEditado.id).update(itemEditado);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UbicacionesService {\n\n  ubicacionesColeccion: AngularFirestoreCollection<any>\n  ubicaciones: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.ubicacionesColeccion = afs.collection<any>('ubicaciones');\n    this.ubicaciones = this.ubicacionesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUbicaciones() {\n    return this.ubicaciones;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { AngularFirestore, AngularFirestoreCollection } from '@angular/fire/firestore';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnidadesService {\n\n  unidadesColeccion: AngularFirestoreCollection<any>\n  unidades: Observable<any[]>\n\n  constructor(private readonly afs: AngularFirestore) {\n    this.unidadesColeccion = afs.collection<any>('unidades');\n    this.unidades = this.unidadesColeccion.snapshotChanges().pipe(\n      map(actions => actions.map(a => {\n        const data = a.payload.doc.data() as any;\n        const id = a.payload.doc.id;\n        return { id, ...data };\n      }))\n    )\n  }\n\n  obtenerUnidades() {\n    return this.unidades;\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n    apiKey: \"AIzaSyDtYNyuJH5IxYQaG-JX866zpdZ7vT7FIiw\",\n    authDomain: \"grupo360-21212.firebaseapp.com\",\n    databaseURL: \"https://grupo360-21212.firebaseio.com\",\n    projectId: \"grupo360-21212\",\n    storageBucket: \"grupo360-21212.appspot.com\",\n    messagingSenderId: \"42315631196\",\n    appId: \"1:42315631196:web:afc7162df29b7595d43499\",\n    measurementId: \"G-BSEHC8XG3G\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}
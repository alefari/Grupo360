{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../auth/auth.service\";\nexport let InventarioSQLService = /*#__PURE__*/(() => {\n  class InventarioSQLService {\n    constructor(http, auth) {\n      this.http = http;\n      this.auth = auth;\n      this.API_URI = environment.dirBackend;\n    }\n\n    getInventario() {\n      return this.http.get(`${this.API_URI}/herramientas`);\n    }\n\n    getItem(id) {\n      return this.http.get(`${this.API_URI}/herramientas/${id}`);\n    }\n\n    createItem(item) {\n      let nuevoItem = {\n        nombre: item.nombre,\n        id_categoria: +item.categoria,\n        id_subcategoria: +item.subcategoria,\n        cantidad: item.cantidad,\n        id_unidad: +item.unidades,\n        id_ubicacion: +item.ubicacion,\n        id_estado: 1,\n        vencimiento: item.vencimiento,\n        serial: item.serial,\n        precio: item.precio,\n        descripcion: item.descripcion,\n        cantidadObra: item.cantidadObra\n      };\n      return this.http.post(`${this.API_URI}/herramientas`, nuevoItem);\n    }\n\n    deleteItem(id) {\n      return this.http.delete(`${this.API_URI}/herramientas/${id}`);\n    }\n\n    updateItem(id, item, full = true) {\n      if (full) {\n        let nuevoItem = {\n          nombre: item.nombre,\n          id_categoria: +item.categoria,\n          id_subcategoria: +item.subcategoria,\n          cantidad: item.cantidad,\n          id_unidad: +item.unidades,\n          id_ubicacion: +item.ubicacion,\n          id_estado: +item.estado,\n          vencimiento: item.vencimiento,\n          serial: item.serial,\n          precio: item.precio,\n          descripcion: item.descripcion,\n          cantidadObra: item.cantidadObra\n        };\n        return this.http.put(`${this.API_URI}/herramientas/${id}`, nuevoItem);\n      } else {\n        return this.http.put(`${this.API_URI}/herramientas/${id}`, item);\n      }\n    }\n\n  }\n\n  InventarioSQLService.ɵfac = function InventarioSQLService_Factory(t) {\n    return new (t || InventarioSQLService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.AuthService));\n  };\n\n  InventarioSQLService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: InventarioSQLService,\n    factory: InventarioSQLService.ɵfac,\n    providedIn: 'root'\n  });\n  return InventarioSQLService;\n})();","map":null,"metadata":{},"sourceType":"module"}
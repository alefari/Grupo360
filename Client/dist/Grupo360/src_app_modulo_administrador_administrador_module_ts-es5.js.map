{"version":3,"mappings":"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","names":["routes","path","component","_components_administrador_base_administrador_base_component__WEBPACK_IMPORTED_MODULE_3__","children","redirectTo","_components_admin_empleados_admin_empleados_component__WEBPACK_IMPORTED_MODULE_0__","_components_admin_inventario_admin_inventario_component__WEBPACK_IMPORTED_MODULE_1__","_components_admin_parametros_admin_parametros_component__WEBPACK_IMPORTED_MODULE_2__","AdministradorRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_5__","imports","exports","AdministradorModule","_angular_common__WEBPACK_IMPORTED_MODULE_6__","_administrador_routing_module__WEBPACK_IMPORTED_MODULE_0__","_angular_router__WEBPACK_IMPORTED_MODULE_7__","_angular_forms__WEBPACK_IMPORTED_MODULE_8__","_fortawesome_angular_fontawesome__WEBPACK_IMPORTED_MODULE_9__","declarations","_components_administrador_base_administrador_base_component__WEBPACK_IMPORTED_MODULE_2__","_components_admin_empleados_admin_empleados_component__WEBPACK_IMPORTED_MODULE_1__","_components_admin_inventario_admin_inventario_component__WEBPACK_IMPORTED_MODULE_3__","_components_admin_parametros_admin_parametros_component__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_2__","AdminEmpleadosComponent","servicioUsuarios","servicioCargos","router","nombre","apellido","cedula","cargo","correo","roles","getUsuarios","subscribe","usuarios","res","console","log","err","getCargos","cargos","usr","editarMode","usuarioAcciones","id_cargo","updateUsuario","id","find","selectors","decls","vars","consts","template","ctx","_angular_core__WEBPACK_IMPORTED_MODULE_6__","AdminInventarioComponent","servicioInventarioSQL","servicioCategorias","servicioSubcategorias","servicioUbicaciones","servicioUnidades","servicioEstados","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_7__","categoria","subcategoria","cantidad","ubicacion","fecha","responsable","estado","vencimiento","serial","precio","unidades","getInventario","inventarioSQL","getCategorias","categorias","getSubcategorias","subcategorias","getUbicaciones","ubicaciones","getUnidades","getEstados","estados","itemAveriado","est","cat","subcat","ubic","und","updateItem","navigate","form","reset","idItem","Object","assign","itemInv","item","viewQuery","AdminParametrosComponent","servicioArea","getAreas","nombreUnidad","nuevaUnidad","createUnidad","nombreCategoria","nuevaCategoria","createCategoria","nombreUbicacion","nuevaUbicacion","createUbicacion","nombreSubcategoria","nuevaSubcategoria","createSubcategoria","nombreArea","nuevaArea","createAreas","_angular_core__WEBPACK_IMPORTED_MODULE_8__","AdministradorBaseComponent","_angular_core__WEBPACK_IMPORTED_MODULE_0__","CargosService","http","_environments_environment__WEBPACK_IMPORTED_MODULE_0__","get","API_URI","_angular_core__WEBPACK_IMPORTED_MODULE_1__","factory","providedIn"],"sources":["webpack:///src/app/modulo_administrador/administrador-routing.module.ts","webpack:///src/app/modulo_administrador/administrador.module.ts","webpack:///src/app/modulo_administrador/components/admin-empleados/admin-empleados.component.html","webpack:///src/app/modulo_administrador/components/admin-empleados/admin-empleados.component.ts","webpack:///src/app/modulo_administrador/components/admin-inventario/admin-inventario.component.ts","webpack:///src/app/modulo_administrador/components/admin-inventario/admin-inventario.component.html","webpack:///src/app/modulo_administrador/components/admin-parametros/admin-parametros.component.ts","webpack:///src/app/modulo_administrador/components/admin-parametros/admin-parametros.component.html","webpack:///src/app/modulo_administrador/components/administrador-base/administrador-base.component.ts","webpack:///src/app/modulo_administrador/components/administrador-base/administrador-base.component.html","webpack:///src/app/services/cargos.service.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AdminEmpleadosComponent } from './components/admin-empleados/admin-empleados.component';\r\nimport { AdminInventarioComponent } from './components/admin-inventario/admin-inventario.component';\r\nimport { AdminParametrosComponent } from './components/admin-parametros/admin-parametros.component';\r\nimport { AdministradorBaseComponent } from './components/administrador-base/administrador-base.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: AdministradorBaseComponent,\r\n    children: [\r\n      { path: '', redirectTo: 'empleados' },\r\n      { path: 'empleados', component: AdminEmpleadosComponent},\r\n      { path: 'gestion-interna/gestion-inv', component: AdminInventarioComponent},\r\n      { path: 'gestion-interna/parametros', component: AdminParametrosComponent},\r\n    ]\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdministradorRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { AdministradorRoutingModule } from './administrador-routing.module';\r\nimport { AdminEmpleadosComponent } from './components/admin-empleados/admin-empleados.component';\r\nimport { AdministradorBaseComponent } from './components/administrador-base/administrador-base.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AdminInventarioComponent } from './components/admin-inventario/admin-inventario.component';\r\nimport { AdminParametrosComponent } from './components/admin-parametros/admin-parametros.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdministradorBaseComponent,\r\n    AdminEmpleadosComponent,\r\n    AdminInventarioComponent,\r\n    AdminParametrosComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdministradorRoutingModule,\r\n    RouterModule,\r\n    FormsModule,\r\n    FontAwesomeModule,\r\n  ]\r\n})\r\nexport class AdministradorModule { }\r\n","<div class=\"container\">\r\n  <div class=\"row px-4\">\r\n    <div class=\"col-3\">\r\n      <h1>Empleados</h1>\r\n    </div>\r\n    <div class=\"col-9\">\r\n      <div class=\"btn-group float-end\">\r\n        <button type=\"button\" class=\"btn btn-success cool-btn\" routerLink='ingresar'>Añadir Empleado</button>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"row px-4\">\r\n    <div class=\"table-responsive\">\r\n      <table class=\"table table-sm shadow table-striped\">\r\n        <thead class=\"table-dark\">\r\n            <tr>\r\n              <th scope=\"col\">Nombre</th>\r\n              <th scope=\"col\">Apellido</th>\r\n              <th scope=\"col\">Cédula</th>\r\n              <th scope=\"col\">Cargo</th>\r\n              <th scope=\"col\">Correo</th>\r\n              <th></th>\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n              <tr *ngFor=\"let usuario of usuarios\" class=\"table-sm\" scope=\"row\" class=\"bg-light linea-tabla\">\r\n                <td>{{ usuario.nombre }}</td>\r\n                <td>{{ usuario.apellido }}</td>\r\n                <td>{{ usuario.cedula }}</td>\r\n                <td>{{ usuario.cargo }}</td>\r\n                <td>{{ usuario.correo }}</td>\r\n                <td><button (click)='onSetAcciones(usuario)' data-bs-toggle=\"modal\" data-bs-target=\"#modalInfo\" class=\"btn btn-info btn-sm text-white\">Acciones</button></td>\r\n              </tr>\r\n        </tbody>\r\n    </table>\r\n  </div>\r\n  </div>\r\n\r\n  <div class=\"modal\" tabindex=\"-1\" id=\"modalInfo\">\r\n    <div class=\"modal-dialog modal-lg\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-info\">\r\n          <h3 class=\"modal-title text-white\">Empleado: {{ usuarioAcciones.nombre | titlecase}} {{ usuarioAcciones.apellido | titlecase}}</h3>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div class=\"row\">\r\n            <div class=\"col\">\r\n\r\n                <div class=\"card-body\">\r\n                  <form #f=\"ngForm\">\r\n                  <div class=\"row\">\r\n\r\n                    <div class=\"col-3\">\r\n                      <img src=\"../../../assets/profileGeneric.png\" alt=\"profileGeneric\" class=\"h-25\">\r\n                    </div>\r\n                    <div *ngIf=\"!editarMode\" class=\"col\">\r\n                      <h3>{{ usuarioAcciones.nombre | titlecase }} {{ usuarioAcciones.apellido | titlecase}}</h3>\r\n                      <h4>{{ buscarCargoById(usuarioAcciones.cargo) }}</h4> <br>\r\n                      <h6>{{ usuarioAcciones.cedula }}</h6>\r\n                      <h6>{{ usuarioAcciones.correo }}</h6>\r\n                    </div>\r\n\r\n                    <div *ngIf=\"editarMode\" class=\"col-5\">\r\n                      <div class=\"row mb-2\">\r\n                        <div class=\"col\">\r\n                          <label for=\"nombre\" class=\"form-label\">Nombre</label>\r\n                          <input ngModel [(ngModel)]='usuarioAcciones.nombre' type=\"text\" class=\"form-control\" id=\"nombre\" name=\"nombre\">\r\n                        </div>\r\n                        <div class=\"col\">\r\n                          <label for=\"apellido\" class=\"form-label\">Apellido</label>\r\n                          <input ngModel [(ngModel)]='usuarioAcciones.apellido' type=\"text\" class=\"form-control\" id=\"apellido\" name=\"apellido\">\r\n                        </div>\r\n                      </div>\r\n                      <div class=\"row mb-2\">\r\n                        <div class=\"col\">\r\n                          <label for=\"cargo\" class=\"form-label\">Cargo</label>\r\n                          <select name=\"cargo\" ngModel [(ngModel)]='usuarioAcciones.cargo' class=\"form-select\" aria-label=\"Default select example\">\r\n                            <option *ngFor=\"let cargo of cargos\" value={{cargo.id}}>{{cargo.nombre}}</option>\r\n                          </select>\r\n                        </div>\r\n\r\n                      </div>\r\n                      <div class=\"row mb-2\">\r\n                        <div class=\"col\">\r\n                          <label for=\"Correo\" class=\"form-label\">Correo</label>\r\n                          <input ngModel [(ngModel)]='usuarioAcciones.correo' type=\"text\" class=\"form-control\" id=\"correo\" name=\"Correo\">\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col\">\r\n                      <h5>Permisos</h5>\r\n                      <ul>\r\n                        <li>Inventario</li>\r\n                        <li>Administración</li>\r\n                      </ul>\r\n                    </div>\r\n\r\n                  </div>\r\n                </form>\r\n                </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button *ngIf=\"editarMode && f.dirty\" (click)=\"onAceptarEdicion()\" type=\"button\" class=\"btn btn-primary\">Guardar Cambios</button>\r\n          <button *ngIf=\"!editarMode\" (click)=\"onEditar()\" type=\"button\" class=\"btn btn-primary\">Editar empleado</button>\r\n          <button *ngIf=\"!editarMode\" (click)=\"eliminarUser()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar empleado</button>\r\n          <button (click)='onSalir()' type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">{{editarMode ? 'Cancelar' : 'Salir'}}</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"modal\" tabindex=\"-1\" id=\"modalEliminar\">\r\n    <div class=\"modal-dialog\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header bg-danger\">\r\n          <h5 class=\"modal-title text-white\">Eliminar Item</h5>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <p>¿Estás seguro que deseas eliminar <strong></strong>?. <br> <br> <span class=\"text-danger\">Esta acción es irreversible.</span></p>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n          <button type=\"button\" class=\"btn btn-secondary\" data-bs-dismiss=\"modal\">Cancelar</button>\r\n          <button (click)=\"eliminarUser()\" data-bs-dismiss=\"modal\" type=\"button\" class=\"btn btn-danger\">Eliminar</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { CargosService } from 'src/app/services/cargos.service';\nimport { UsuariosService } from 'src/app/services/usuarios.service';\n\n@Component({\n  selector: 'app-admin-empleados',\n  templateUrl: './admin-empleados.component.html',\n  styleUrls: ['./admin-empleados.component.css']\n})\nexport class AdminEmpleadosComponent implements OnInit {\n\n  usuarios;\n  cargos;\n  editarMode:boolean = false;\n  usuarioAcciones:any = {\n    nombre: null,\n    apellido: null,\n    cedula: null,\n    cargo: null,\n    correo: null,\n    roles: null,\n  };\n  constructor(private servicioUsuarios: UsuariosService,\n              private servicioCargos: CargosService,\n              private router: Router ) { }\n\n  ngOnInit(): void {\n    this.servicioUsuarios.getUsuarios().subscribe(\n      res => { this.usuarios = res; },\n      err => console.log(err)\n    );\n    this.servicioCargos.getCargos().subscribe(\n      res => {\n        this.cargos = res;\n      },\n      err => console.log(err)\n    );\n  }\n\n  onSetAcciones(usr:any) {\n    this.editarMode = false;\n    this.usuarioAcciones = usr;\n  }\n\n  eliminarUser() {\n\n  }\n\n  onEditar() {\n    this.editarMode = !this.editarMode;\n  }\n\n  onAceptarEdicion() {\n    // var cedula = this.usuarioAcciones.cedula;\n    this.usuarioAcciones.id_cargo = this.usuarioAcciones.cargo;\n    delete this.usuarioAcciones.roles;\n    delete this.usuarioAcciones.cargo;\n    // delete this.usuarioAcciones.cedula;\n    console.log(this.usuarioAcciones);\n    this.servicioUsuarios.updateUsuario(this.usuarioAcciones.cedula, this.usuarioAcciones).subscribe(\n      res => { console.log(res) },\n      err => console.log(err)\n    );\n  }\n\n  onSalir() {\n    this.editarMode = false;\n  }\n\n  buscarCargoById(id: number) {\n    if(id) return this.cargos.find(cargo => cargo.id == id).nombre\n  }\n\n\n}\n","import { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n// IMPORTS DE BD\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@Component({\r\n  selector: 'app-admin-inventario',\r\n  templateUrl: './admin-inventario.component.html',\r\n  styleUrls: ['./admin-inventario.component.css']\r\n})\r\nexport class AdminInventarioComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n\r\n  //VARIABLES QUE CONTIENEN BASES DE DATOS\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n\r\n  itemElegido: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    ubicacion: null,\r\n    fecha: null,\r\n    responsable: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n    unidades: null\r\n  };\r\n\r\n  //VARIABLE PARA MODEL DE AVERIA\r\n  itemAveriado: Item = {\r\n    id: null,\r\n    nombre: null,\r\n    categoria: null,\r\n    subcategoria: null,\r\n    cantidad: null,\r\n    unidades: null,\r\n    ubicacion: null,\r\n    estado: null,\r\n    vencimiento: null,\r\n    serial: null,\r\n    precio: null,\r\n  };\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEstados: EstadosService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {this.inventarioSQL = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCIONES DE MODAL REPORTE\r\n  reportarAveria() {\r\n    this.itemAveriado.estado = \"Dañado\";\r\n    this.itemAveriado.estado = this.estados.find(est => est.nombre == this.itemAveriado.estado).id;\r\n    this.itemAveriado.categoria = this.categorias.find(cat => cat.nombre == this.itemAveriado.categoria).id;\r\n    this.itemAveriado.subcategoria = this.subcategorias.find(subcat => subcat.nombre == this.itemAveriado.subcategoria).id;\r\n    this.itemAveriado.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == this.itemAveriado.ubicacion).id;\r\n    this.itemAveriado.unidades = this.unidades.find(und => und.nombre == this.itemAveriado.unidades).id;\r\n    //MODIFICA ITEM EN BD\r\n    this.servicioInventarioSQL.updateItem(this.itemAveriado.id, this.itemAveriado, true).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n  this.router.navigate(['administrador/gestion-interna']);\r\n  this.form.reset();\r\n  }\r\n  reportarReparado() {\r\n    this.itemAveriado.estado = \"Disponible\";\r\n    this.itemAveriado.estado = this.estados.find(est => est.nombre == this.itemAveriado.estado).id;\r\n    this.itemAveriado.categoria = this.categorias.find(cat => cat.nombre == this.itemAveriado.categoria).id;\r\n    this.itemAveriado.subcategoria = this.subcategorias.find(subcat => subcat.nombre == this.itemAveriado.subcategoria).id;\r\n    this.itemAveriado.ubicacion = this.ubicaciones.find(ubic => ubic.nombre == this.itemAveriado.ubicacion).id;\r\n    this.itemAveriado.unidades = this.unidades.find(und => und.nombre == this.itemAveriado.unidades).id;\r\n    //MODIFICA ITEM EN BD\r\n    this.servicioInventarioSQL.updateItem(this.itemAveriado.id, this.itemAveriado, true).subscribe(\r\n      res => {\r\n        console.log(res);\r\n      },\r\n      err => {\r\n        console.log(err);\r\n      }\r\n    );\r\n    this.router.navigate(['administrador/gestion-interna']);\r\n    this.form.reset();\r\n  }\r\n  //CREA ITEM TEMPORAL EN DONDE COLOCARA NUEVOS ESTADOS\r\n  alElegirItem(idItem: string) {\r\n    this.itemAveriado = Object.assign({},this.inventarioSQL.find(itemInv => itemInv.id == idItem));\r\n  }\r\n\r\n  //BUSCA ITEM PARA REPORTAR AVERIA\r\n  regresarItem(id: string) {\r\n    return this.inventarioSQL.find(item => item.id == id);\r\n  }\r\n  //FUNCION PARA BORRAR FORMULARIO REPORTE\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['administrador/gestion-interna']);\r\n  }\r\n\r\n}\r\n\r\n","<!--MODAL DE REPORTE DE PRODUCTO-->\r\n<div class=\"margin-top-form-reporte\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-reportar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Reportar item inventario</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col\">\r\n                                <label>Categoría</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectCategoriaReporte\" #selectCategoriaReporte=\"ngModel\">\r\n                                    <option *ngFor=\"let categoria of categorias\" value=\"{{categoria.nombre}}\">{{ categoria.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectCategoriaReporte.valid && selectCategoriaReporte.touched\" class=\"text-danger\">Seleccione un categoría.</small>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Subcategoría</label>\r\n                                    <select class=\"form-select mt-2\" ngModel required name=\"selectSubcategoriaReporte\" #selectSubcategoriaReporte=\"ngModel\">\r\n                                    <option *ngFor=\"let subcategoria of subcategorias\" value=\"{{subcategoria.nombre}}\">{{ subcategoria.nombre }}</option>\r\n                                    </select>\r\n                                    <small *ngIf=\"!selectSubcategoriaReporte.valid && selectSubcategoriaReporte.touched\" class=\"text-danger\">Seleccione un subcategoría.</small>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                                <label>Item</label>\r\n                                <select #idItem=\"ngModel\" (change)=\"alElegirItem(idItem.value)\" required class='form-select mt-2' ngModel name=\"id\">\r\n                                    <!-- FILTRO POR CATEGORIA Y SUBCATEGORIA REPORTE -->\r\n                                    <ng-container *ngFor=\"let item of inventarioSQL\">\r\n                                    <ng-container *ngIf=\"item.categoria == selectCategoriaReporte.value && item.estado != 'En Obra' && item.subcategoria == selectSubcategoriaReporte.value\">\r\n                                        <option value='{{item.id}}'>{{ item.nombre }}</option>\r\n                                    </ng-container>\r\n                                    </ng-container>\r\n                                </select>\r\n                                <small *ngIf=\"!idItem.valid && idItem.touched\" class=\"text-danger\">Seleccione un item.</small>\r\n                            </div>\r\n                        </div>\r\n                <!-- BOTONOS CON FUNCIONES REPORTAR -->\r\n                <div class=\"form-footer-style\">\r\n                    <div class=\"modal-footer\">\r\n                        <button type=\"button\" class=\"btn btn-secondary\" (click)=\"borrarForm()\">\r\n                        <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                        </button>\r\n                        <button data-dismiss=\"modal\" *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Dañado'\" type=\"button\" class=\"btn btn-primary\"  (click)=\"reportarReparado()\">\r\n                        <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Reparado\r\n                        </button>\r\n                        <button *ngIf=\"idItem.value && regresarItem(idItem.value).estado == 'Disponible'\" type=\"button\" class=\"btn btn-danger\" (click)=\"reportarAveria()\">\r\n                        <fa-icon [icon]=\"faExclamationCircle\"></fa-icon> Reportar Dañado\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<!--FIN MODAL DE REPORTE DE PRODUCTO-->","import { Component, OnInit, ViewChild, NgModuleDecorator } from '@angular/core';\r\nimport { Item } from 'src/app/modulo_inventario/inventario-models/item.model';\r\nimport { NgForm, Form } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\n\r\n// IMPORTS DE BD\r\nimport { SubcategoriasService } from 'src/app/services/subcategorias.service';\r\nimport { EstadosService } from 'src/app/services/estados.service';\r\nimport { UnidadesService } from 'src/app/services/unidades.service';\r\nimport { InventarioSQLService } from 'src/app/services/inventario-sql.service';\r\nimport { CategoriasService } from 'src/app/services/categorias.service';\r\nimport { UbicacionesService } from 'src/app/services/ubicaciones.service';\r\n\r\n//ICONOS FONTAWESOME\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { AreasService } from 'src/app/services/areas.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-parametros',\r\n  templateUrl: './admin-parametros.component.html',\r\n  styleUrls: ['./admin-parametros.component.css']\r\n})\r\nexport class AdminParametrosComponent implements OnInit {\r\n  @ViewChild('f') form: NgForm;\r\n\r\n  //ICONOS FONTAWESOME\r\n  faTimesCircle = faTimesCircle;\r\n  faPlusCircle = faPlusCircle;\r\n  faExclamationCircle = faExclamationCircle;\r\n\r\n  //VARIABLES QUE CONTIENEN BASES DE DATOS\r\n  inventarioSQL: any = [];\r\n  categorias: any = [];\r\n  subcategorias: any = [];\r\n  ubicaciones: any = [];\r\n  unidades: any = [];\r\n  estados: any = [];\r\n  areas: any = [];\r\n\r\n  constructor(private servicioInventarioSQL: InventarioSQLService,\r\n              private servicioCategorias: CategoriasService,\r\n              private servicioSubcategorias: SubcategoriasService,\r\n              private servicioUbicaciones: UbicacionesService,\r\n              private servicioUnidades: UnidadesService,\r\n              private servicioEstados: EstadosService,\r\n              private servicioArea: AreasService,\r\n              private router: Router) { }\r\n\r\n  ngOnInit(): void {\r\n    this.servicioInventarioSQL.getInventario().subscribe(\r\n      res => {this.inventarioSQL = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioCategorias.getCategorias().subscribe(\r\n      res => {this.categorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioSubcategorias.getSubcategorias().subscribe(\r\n      res => {this.subcategorias = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUbicaciones.getUbicaciones().subscribe(\r\n      res => {this.ubicaciones = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioUnidades.getUnidades().subscribe(\r\n      res => {this.unidades = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioEstados.getEstados().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n\r\n    this.servicioArea.getAreas().subscribe(\r\n      res => {this.estados = res;},\r\n      err => console.log(err));\r\n  }\r\n\r\n  //FUNCION AGREGAR UNIDAD\r\n  unidadAgregar(nombreUnidad: string){\r\n    let nuevaUnidad: any = {nombre: nombreUnidad};\r\n    this.servicioUnidades.createUnidad(nuevaUnidad).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR CATEGORIA\r\n  categoriaAgregar(nombreCategoria: string){\r\n    let nuevaCategoria: any = {nombre: nombreCategoria};\r\n    this.servicioCategorias.createCategoria(nuevaCategoria).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR UBICACION\r\n  ubicacionAgregar(nombreUbicacion: string){\r\n    let nuevaUbicacion: any = {nombre: nombreUbicacion};\r\n    this.servicioUbicaciones.createUbicacion(nuevaUbicacion).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR SUBCATEGORIA\r\n  subcategoriaAgregar(nombreSubcategoria: string){\r\n    let nuevaSubcategoria: any = {nombre: nombreSubcategoria};\r\n    this.servicioSubcategorias.createSubcategoria(nuevaSubcategoria).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n  //FUNCION AGREGAR AREA\r\n  areaAgregar(nombreArea: string){\r\n    let nuevaArea: any = {nombre: nombreArea};\r\n    this.servicioArea.createAreas(nuevaArea).subscribe(\r\n      res => {console.log(res);},\r\n      err => {console.log(err);}\r\n    );\r\n    this.form.reset();\r\n  }\r\n\r\n  //FUNCION PARA BORRAR FORMULARIO AGREGAR\r\n  borrarForm() {\r\n    this.form.reset();\r\n    this.router.navigate(['administrador/gestion-interna']);\r\n  }\r\n}\r\n","<!--MODAL DE AGREGAR ADMINISTRADOR-->\r\n<div class=\"margin-top-form\">\r\n    <div class=\"container\">\r\n        <div class=\"body form-body-style\">\r\n            <div class=\"container pt-3 form-header-style header-color-agregar\">\r\n                <div class=\"mx-auto\">\r\n                    <h3>Agregar</h3>\r\n                </div>  \r\n            </div>\r\n            <div class='container pe-5 ps-5 pt-2'>\r\n                <form #f=\"ngForm\">\r\n                        <div class=\"row mt-3 mb-4\">\r\n                            <div class=\"col\">\r\n                            <h5>Ubicación:</h5>\r\n                            <div class=\"form-floating\">\r\n                                <input #nombreUbicacion=\"ngModel\" ngModel name=\"nombreUbicacionNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                <label for=\"floatingInput\">Nombre</label>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                            <h5>Categoría:</h5>\r\n                            <div class=\"form-floating\">\r\n                                <input #nombreCategoria=\"ngModel\" ngModel name=\"nombreCategoriaNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                <label for=\"floatingInput\">Nombre</label>\r\n                            </div>\r\n                            </div>\r\n                            <div class=\"col\">\r\n                            <h5>Subcategoría:</h5>\r\n                            <div class=\"form-floating\">\r\n                                <input #nombreSubcategoria=\"ngModel\" ngModel name=\"nombreSubcategoriaNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                <label for=\"floatingInput\">Nombre</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col text-center\">\r\n                            <button [disabled]=\"!nombreUbicacion.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"ubicacionAgregar(nombreUbicacion.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Ubicación\r\n                            </button>\r\n                            </div>\r\n                            <div class=\"col text-center\">\r\n                            <button [disabled]=\"!nombreCategoria.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"categoriaAgregar(nombreCategoria.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Categoría\r\n                            </button>\r\n                            </div>\r\n                            <div class=\"col text-center\">\r\n                            <button [disabled]=\"!nombreSubcategoria.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"subcategoriaAgregar(nombreSubcategoria.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Subcategoría\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4\">\r\n                                <h5>Unidad:</h5>\r\n                                <div class=\"form-floating\">\r\n                                    <input #nombreUnidad=\"ngModel\" ngModel name=\"nombreUnidadNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                    <label for=\"floatingInput\">Nombre</label>\r\n                                </div>\r\n                            </div>\r\n                            <div class=\"col-4\">\r\n                                <h5>Area:</h5>\r\n                                <div class=\"form-floating\">\r\n                                    <input #nombreArea=\"ngModel\" ngModel name=\"nombreAreaNueva\" required type=\"text\" class=\"form-control mt-2\">\r\n                                    <label for=\"floatingInput\">Nombre</label>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"row mb-4\">\r\n                            <div class=\"col-4 text-center\">\r\n                            <button [disabled]=\"!nombreUnidad.valid\"  data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"unidadAgregar(nombreUnidad.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Unidad\r\n                            </button>\r\n                            </div>\r\n                            <div class=\"col-4 text-center\">\r\n                            <button [disabled]=\"!nombreArea.valid\" data-dismiss=\"modal\" type=\"button\" class=\"btn btn-primary\" (click)=\"areaAgregar(nombreArea.value)\">\r\n                                <fa-icon [icon]=\"faPlusCircle\"></fa-icon> Area\r\n                            </button>\r\n                            </div>\r\n                        </div>\r\n                    <!--BOTONES CON FUNCIONES AGREGAR-->\r\n                    <div class=\"form-footer-style\">\r\n                        <div class=\"modal-footer\">\r\n                            <button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\" (click)=\"borrarForm()\">\r\n                                <fa-icon [icon]=\"faTimesCircle\"></fa-icon> Cerrar\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!--FIN MODAL DE AGREGAR-->","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-administrador-base',\n  templateUrl: './administrador-base.component.html',\n  styleUrls: ['./administrador-base.component.css']\n})\nexport class AdministradorBaseComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<router-outlet></router-outlet>\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { environment } from '../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CargosService {\n\n  constructor(private http: HttpClient) { }\n\n  API_URI = environment.dirBackend;\n\n  getCargos() {\n    return this.http.get(`${this.API_URI}/cargos`);\n  }\n\n  // getCategoria(id: string) {\n  //   return this.http.get(`${this.API_URI}/categorias/${id}`);\n  // }\n\n  // createCategoria(categoria: any) {\n  //   return this.http.post(`${this.API_URI}/categorias`, categoria);\n  // }\n\n  // deleteCategoria(id: string) {\n  //   return this.http.delete(`${this.API_URI}/categorias/${id}`);\n  // }\n\n  // updateCategoria(id: string, categoria: string) {\n  //   return this.http.put(`${this.API_URI}/categorias/${id}`, categoria);\n  // }\n\n}\n\n"]}